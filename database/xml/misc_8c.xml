<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="misc_8c" kind="file" language="C++">
    <compoundname>misc.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">pwd.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="misc_8h" local="yes">libssh/misc.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <includedby refid="torture__isipaddr_8c" local="yes">libssh-mirror/tests/unittests/torture_isipaddr.c</includedby>
    <includedby refid="torture__list_8c" local="yes">libssh-mirror/tests/unittests/torture_list.c</includedby>
    <includedby refid="torture__misc_8c" local="yes">libssh-mirror/tests/unittests/torture_misc.c</includedby>
    <incdepgraph>
      <node id="22">
        <label>sys/stat.h</label>
      </node>
      <node id="29">
        <label>libssh/packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stdbool.h</label>
      </node>
      <node id="18">
        <label>sys/select.h</label>
      </node>
      <node id="6">
        <label>netinet/in.h</label>
      </node>
      <node id="7">
        <label>arpa/inet.h</label>
      </node>
      <node id="12">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="25">
        <label>libssh/misc.h</label>
        <link refid="misc_8h"/>
      </node>
      <node id="8">
        <label>errno.h</label>
      </node>
      <node id="31">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>netdb.h</label>
      </node>
      <node id="1">
        <label>libssh-mirror/src/misc.c</label>
        <link refid="misc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>limits.h</label>
      </node>
      <node id="28">
        <label>libssh/kex.h</label>
        <link refid="kex_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libssh/libmbedcrypto.h</label>
        <link refid="libmbedcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libssh/channels.h</label>
        <link refid="channels_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
      <node id="32">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="37">
        <label>libssh/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>time.h</label>
      </node>
      <node id="16">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ctype.h</label>
      </node>
      <node id="30">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="5">
        <label>sys/socket.h</label>
      </node>
      <node id="3">
        <label>pwd.h</label>
      </node>
      <node id="35">
        <label>libssh/auth.h</label>
        <link refid="auth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="26">
        <label>libssh/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>libssh-mirror/tests/unittests/torture_list.c</label>
        <link refid="torture__list_8c"/>
      </node>
      <node id="1">
        <label>libssh-mirror/src/misc.c</label>
        <link refid="misc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libssh-mirror/tests/unittests/torture_misc.c</label>
        <link refid="torture__misc_8c"/>
      </node>
      <node id="2">
        <label>libssh-mirror/tests/unittests/torture_isipaddr.c</label>
        <link refid="torture__isipaddr_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="misc_8c_1ad44924736167f82a10ae2891fc98a608" prot="public" static="no">
        <name>_POSIX_PTHREAD_SEMANTICS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="29" column="9" bodyfile="libssh-mirror/src/misc.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8c_1a29135c31bc1a30437276a5daf2439ec5" prot="public" static="no">
        <name>GCRYPT_STRING</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="76" column="10" bodyfile="libssh-mirror/src/misc.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8c_1ac3b5aed07b4f7c3050ef2bb0882e16c3" prot="public" static="no">
        <name>CRYPTO_STRING</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="82" column="10" bodyfile="libssh-mirror/src/misc.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8c_1a4fd95b9791fb1bfc3c6e0abb997554a7" prot="public" static="no">
        <name>MBED_STRING</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="88" column="10" bodyfile="libssh-mirror/src/misc.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="misc_8c_1a6a4dcaf84799f05b3b9ff2183c5fdcb8" prot="public" static="no">
        <name>ZLIB_STRING</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="94" column="10" bodyfile="libssh-mirror/src/misc.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" prot="public" static="no">
        <name>NSS_BUFLEN_PASSWD</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="238" column="9" bodyfile="libssh-mirror/src/misc.c" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__libssh__misc_1ga3be7ef61d339af381862a81d4b363efb" prot="public" static="no">
        <name>CLOCK</name>
        <initializer>CLOCK_REALTIME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1316" column="10" bodyfile="libssh-mirror/src/misc.c" bodystart="1316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_get_user_home_dir</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_user_home_dir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="241" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="241" bodyend="263"/>
        <references refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" compoundref="misc_8c" startline="238">NSS_BUFLEN_PASSWD</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <referencedby refid="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" compoundref="misc_8c" startline="1037" endline="1093">ssh_path_expand_tilde</referencedby>
        <referencedby refid="torture__misc_8c_1a922d7a84a8642e8858d92b0b68ec2599" compoundref="torture__misc_8c" startline="39" endline="54">torture_get_user_home_dir</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga8077c07f3f7ca5bc62ac7ba807f30476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_file_readaccess_ok</definition>
        <argsstring>(const char *file)</argsstring>
        <name>ssh_file_readaccess_ok</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="266" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="266" bodyend="273"/>
        <referencedby refid="legacy_8h_1a95d74e70186ea1e485de70f75ba7bf5c" compoundref="legacy_8c" startline="643" endline="706">ssh_try_publickey_from_file</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaecdd455fe4f0feb2781ffddf179f38ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_dir_writeable</definition>
        <argsstring>(const char *path)</argsstring>
        <name>ssh_dir_writeable</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Check if the given path is an existing directory and that is accessible for writing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the directory to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return 1 if the directory exists and is accessible; 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="283" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="283" bodyend="298"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <referencedby refid="torture__misc_8c_1a181933ed646695542ff693fb5546964f" compoundref="torture__misc_8c" startline="367" endline="410">torture_ssh_dir_writeable</referencedby>
        <referencedby refid="torture__misc_8c_1a3fc4093e1bd00dbd7dedd1abd5f0c258" compoundref="torture__misc_8c" startline="412" endline="502">torture_ssh_mkdirs</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_get_local_username</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_local_username</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="300" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="300" bodyend="320"/>
        <references refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="samplesshd-kbdint_8c" startline="186">name</references>
        <references refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" compoundref="misc_8c" startline="238">NSS_BUFLEN_PASSWD</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <referencedby refid="config_8c_1a45c85072922b6f53ea96012589d601db" compoundref="config_8c" startline="508" endline="1134">ssh_config_parse_line</referencedby>
        <referencedby refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</referencedby>
        <referencedby refid="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" compoundref="misc_8c" startline="1106" endline="1207">ssh_path_expand_escape</referencedby>
        <referencedby refid="group__libssh__pki_1ga576cb3a5c7f40a0e20a88b14a023613d" compoundref="pki_8c" startline="2086" endline="2142">ssh_pki_export_pubkey_file</referencedby>
        <referencedby refid="legacy_8h_1aa4de432e122c76302e4190041fee6945" compoundref="legacy_8c" startline="575" endline="641">ssh_publickey_to_file</referencedby>
        <referencedby refid="torture__config_8c_1afbd8ffc0723658bbf9cf2d88380ddf0e" compoundref="torture__config_8c" startline="442" endline="647">torture_config_match</referencedby>
        <referencedby refid="torture__options_8c_1a13de9d3bc9ffd89bee5b9d84404bf63b" compoundref="torture__options_8c" startline="572" endline="737">torture_options_config_match</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_ipaddr_v4</definition>
        <argsstring>(const char *str)</argsstring>
        <name>ssh_is_ipaddr_v4</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="322" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="322" bodyend="332"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <referencedby refid="group__libssh__misc_1ga1c673445ca02a6f30ba5940682b5e7ba" compoundref="misc_8c" startline="334" endline="348">ssh_is_ipaddr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga1c673445ca02a6f30ba5940682b5e7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_ipaddr</definition>
        <argsstring>(const char *str)</argsstring>
        <name>ssh_is_ipaddr</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="334" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="334" bodyend="348"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" compoundref="misc_8c" startline="322" endline="332">ssh_is_ipaddr_v4</references>
        <referencedby refid="connect_8c_1af29ed5be889a5c2ecf972f5ae6203ef3" compoundref="connect_8c" startline="114" endline="143">getai</referencedby>
        <referencedby refid="torture__isipaddr_8c_1a755624656a1547719ea4f93f9f2d0cf0" compoundref="torture__isipaddr_8c" startline="13" endline="53">torture_ssh_is_ipaddr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_lowercase</definition>
        <argsstring>(const char *str)</argsstring>
        <name>ssh_lowercase</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="352" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="352" bodyend="369"/>
        <referencedby refid="config_8c_1a45c85072922b6f53ea96012589d601db" compoundref="config_8c" startline="508" endline="1134">ssh_config_parse_line</referencedby>
        <referencedby refid="group__libssh__session_1ga16eb5c500a1beaf18821c6ce51b7b965" compoundref="known__hosts_8c" startline="430" endline="493">ssh_dump_knownhost</referencedby>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
        <referencedby refid="group__libssh__session_1gae8571ad5d4a9490badba8606e9942ec2" compoundref="src_2knownhosts_8c" startline="302" endline="334">ssh_session_get_host_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_hostport</definition>
        <argsstring>(const char *host, int port)</argsstring>
        <name>ssh_hostport</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="371" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="371" bodyend="389"/>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="sshnetcat_8c_1ad723da1801ae1586eb330380e2d9a912" compoundref="sshnetcat_8c" startline="39">port</references>
        <referencedby refid="group__libssh__session_1ga16eb5c500a1beaf18821c6ce51b7b965" compoundref="known__hosts_8c" startline="430" endline="493">ssh_dump_knownhost</referencedby>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
        <referencedby refid="group__libssh__session_1gaa3a37302850d0467f19db4eba5257d3d" compoundref="src_2knownhosts_8c" startline="612" endline="765">ssh_known_hosts_parse_line</referencedby>
        <referencedby refid="group__libssh__session_1gae8571ad5d4a9490badba8606e9942ec2" compoundref="src_2knownhosts_8c" startline="302" endline="334">ssh_session_get_host_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_get_hexa</definition>
        <argsstring>(const unsigned char *what, size_t len)</argsstring>
        <name>ssh_get_hexa</name>
        <param>
          <type>const unsigned char *</type>
          <declname>what</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Convert a buffer into a colon separated hex string. The caller has to free the memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>what</parametername>
</parameternamelist>
<parameterdescription>
<para>What should be converted to a hex string.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hex string or NULL on error.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" kindref="member">ssh_string_free_char()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="403" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="403" bodyend="426"/>
        <referencedby refid="group__libssh__session_1ga775072dc331a11b575957fe23fdd311b" compoundref="dh_8c" startline="716" endline="770">ssh_get_fingerprint_hash</referencedby>
        <referencedby refid="gssapi_8c_1a86debe4d1a889bed051ceb9ae8487bdb" compoundref="gssapi_8c" startline="638" endline="705">ssh_gssapi_match</referencedby>
        <referencedby refid="gssapi_8h_1ad5e9c28976be3baa0bc877c3dba53571" compoundref="gssapi_8c" startline="836" endline="903">SSH_PACKET_CALLBACK</referencedby>
        <referencedby refid="group__libssh__misc_1ga39bf7936ed51361fe9cf3c3bbfc25514" compoundref="misc_8c" startline="431" endline="440">ssh_print_hexa</referencedby>
        <referencedby refid="torture__hashes_8c_1aa4c244cbfaefd1313f9875c4e137c4a0" compoundref="torture__hashes_8c" startline="52" endline="79">torture_md5_hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga39bf7936ed51361fe9cf3c3bbfc25514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_print_hexa</definition>
        <argsstring>(const char *descr, const unsigned char *what, size_t len)</argsstring>
        <name>ssh_print_hexa</name>
        <param>
          <type>const char *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>what</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use <ref refid="group__libssh__session_1ga93e85883ddac5198ed590e36eef4dc3b" kindref="member">ssh_print_hash()</ref> instead </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="431" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="431" bodyend="440"/>
        <references refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" compoundref="misc_8c" startline="403" endline="426">ssh_get_hexa</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga2f4f479e4dc3412c7b4af6946eef6269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log_hexdump</definition>
        <argsstring>(const char *descr, const unsigned char *what, size_t len)</argsstring>
        <name>ssh_log_hexdump</name>
        <param>
          <type>const char *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>what</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Log the content of a buffer in hexadecimal format, similar to the output of &apos;hexdump -C&apos; command. </para>
        </briefdescription>
        <detaileddescription>
<para>The first logged line is the given description followed by the length. Then the content of the buffer is logged 16 bytes per line in the following format:</para>
<para>(offset) (first 8 bytes) (last 8 bytes) (the 16 bytes as ASCII char values)</para>
<para>The output for a 16 bytes array containing values from 0x00 to 0x0f would be:</para>
<para>&quot;Example (16 bytes):&quot; &quot;  00000000  00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f  ................&quot;</para>
<para>The value for each byte as corresponding ASCII character is printed at the end if the value is printable. Otherwise it is replace with &apos;.&apos;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">descr</parametername>
</parameternamelist>
<parameterdescription>
<para>A description for the content to be logged </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">what</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to be logged </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer given in what</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If a too long description is provided (which would result in a first line longer than 80 bytes), the function will fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="467" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="467" bodyend="627"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1a5e4247396f11fdc228d356a408c81715" compoundref="libssh_8h" startline="374">SSH_LOG_DEBUG</references>
        <references refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" compoundref="libssh_8h" startline="370">SSH_LOG_WARN</references>
        <referencedby refid="chachapoly_8c_1ae75b191280c1f77328d7a72f3721dd88" compoundref="chachapoly_8c" startline="133" endline="180">chacha20_poly1305_aead_decrypt</referencedby>
        <referencedby refid="group__libssh__pki_1ga12fb8e3141837c332165568530a1d29a" compoundref="pki_8c" startline="1100" endline="1278">pki_import_privkey_buffer</referencedby>
        <referencedby refid="group__libssh__pki_1ga47e989e47acf6d577c805910e688a21f" compoundref="pki_8c" startline="1280" endline="1458">pki_import_pubkey_buffer</referencedby>
        <referencedby refid="pki__priv_8h_1a9d88e1b6e93f81dc11ebded5384646e3" compoundref="pki__crypto_8c" startline="2139" endline="2279">pki_sign_data</referencedby>
        <referencedby refid="pki__crypto_8c_1a0f1df403c735a5e15982a028f1540024" compoundref="pki__crypto_8c" startline="1656" endline="1773">pki_signature_from_dsa_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1ae3a66a820cd45b733f5ff75f898a0f33" compoundref="pki__crypto_8c" startline="1775" endline="1911">pki_signature_from_ecdsa_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1ad2beac840c71e6ffb9c0dfede0704905" compoundref="pki__crypto_8c" startline="1587" endline="1654">pki_signature_from_rsa_blob</referencedby>
        <referencedby refid="dh_8h_1ad90769620d45d2750b3ab7844edd4996" compoundref="dh__crypto_8c" startline="44" endline="63">ssh_dh_debug_crypto</referencedby>
        <referencedby refid="kex_8h_1ad66e7a0891466620e0722fe19aaff9f8" compoundref="kex_8c" startline="1281" endline="1411">ssh_generate_session_keys</referencedby>
        <referencedby refid="kex_8h_1a0e79dc09bff165cdc194d729c96d4e0d" compoundref="kex_8c" startline="545" endline="559">ssh_list_kex</referencedby>
        <referencedby refid="kex_8h_1aa65d23af384112419a2f13f5b7f2d9ea" compoundref="kex_8c" startline="946" endline="1213">ssh_make_sessionid</referencedby>
        <referencedby refid="packet__crypt_8c_1abdf83dcec86ab5fce6c237e3f1622788" compoundref="packet__crypt_8c" startline="133" endline="213">ssh_packet_encrypt</referencedby>
        <referencedby refid="packet__crypt_8c_1a68ff2cd30fefc2798aa57c0bba880235" compoundref="packet__crypt_8c" startline="239" endline="283">ssh_packet_hmac_verify</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaeda71ed34a62fa332762f25b14dac6eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_version</definition>
        <argsstring>(int req_version)</argsstring>
        <name>ssh_version</name>
        <param>
          <type>int</type>
          <declname>req_version</declname>
        </param>
        <briefdescription>
<para>Check if libssh is the required version or get the version string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">req_version</parametername>
</parameternamelist>
<parameterdescription>
<para>The version required.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the version of libssh is newer than the version required it will return a version string. NULL if the version is older.</para>
</simplesect>
Example:</para>
<para><programlisting><codeline><highlight class="normal">if<sp/>(ssh_version(SSH_VERSION_INT(0,2,1))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/>&quot;libssh<sp/>version<sp/>is<sp/>too<sp/>old!\n&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>exit(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(debug)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(&quot;libssh<sp/>%s\n&quot;,<sp/>ssh_version(0));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="652" column="12" bodyfile="libssh-mirror/src/misc.c" bodystart="652" bodyend="659"/>
        <references refid="misc_8c_1ac3b5aed07b4f7c3050ef2bb0882e16c3" compoundref="misc_8c" startline="82">CRYPTO_STRING</references>
        <references refid="misc_8c_1a29135c31bc1a30437276a5daf2439ec5" compoundref="misc_8c" startline="76">GCRYPT_STRING</references>
        <references refid="libssh_8h_1ae62377c24279c9870c0893bd845c7636" compoundref="libssh_8h" startline="87">LIBSSH_VERSION</references>
        <references refid="libssh_8h_1a2cd99e8e8653b889188dc7b84b331dd1" compoundref="libssh_8h" startline="84">LIBSSH_VERSION_INT</references>
        <references refid="misc_8c_1a4fd95b9791fb1bfc3c6e0abb997554a7" compoundref="misc_8c" startline="88">MBED_STRING</references>
        <references refid="libssh_8h_1a9ed5c4abd116001eb5ffedc39bf1f677" compoundref="libssh_8h" startline="71">SSH_STRINGIFY</references>
        <references refid="misc_8c_1a6a4dcaf84799f05b3b9ff2183c5fdcb8" compoundref="misc_8c" startline="94">ZLIB_STRING</references>
        <referencedby refid="libssh__scp_8c_1ac5592690ed68c541b9ccea83fc008d27" compoundref="libssh__scp_8c" startline="45">usage</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
        <definition>struct ssh_list* ssh_list_new</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_list_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="661" column="15" bodyfile="libssh-mirror/src/misc.c" bodystart="661" bodyend="667"/>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <referencedby refid="callbacks_8c_1ad2b3310e2c1a9718912b3928c5fb76ef" compoundref="callbacks_8c" startline="70" endline="102">ssh_add_set_channel_callbacks</referencedby>
        <referencedby refid="group__libssh__channel_1gada8ccda7bf65165fe145d3096a252dcc" compoundref="channels_8c" startline="80" endline="129">ssh_channel_new</referencedby>
        <referencedby refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" compoundref="poll_8c" startline="760" endline="785">ssh_event_new</referencedby>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
        <referencedby refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" compoundref="messages_8c" startline="516" endline="534">ssh_message_get</referencedby>
        <referencedby refid="group__libssh__messages_1ga3b2c6d96a4e786d11db737193b5701a2" compoundref="messages_8c" startline="415" endline="469">ssh_message_queue</referencedby>
        <referencedby refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</referencedby>
        <referencedby refid="packet_8h_1a6799ed6886c75279d61dcacd83b71102" compoundref="packet_8c" startline="1426" endline="1433">ssh_packet_set_callbacks</referencedby>
        <referencedby refid="torture__callbacks_8c_1abaf15b9caaac997af2eeed22979cc0b5" compoundref="torture__callbacks_8c" startline="123" endline="190">torture_callbacks_execute_list</referencedby>
        <referencedby refid="torture__callbacks_8c_1af52882982a73ee96fc4f37bd1372c3e3" compoundref="torture__callbacks_8c" startline="200" endline="242">torture_callbacks_iterate</referencedby>
        <referencedby refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" compoundref="torture__list_8c" startline="25" endline="70">torture_ssh_list_append</referencedby>
        <referencedby refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" compoundref="torture__list_8c" startline="9" endline="23">torture_ssh_list_new</referencedby>
        <referencedby refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" compoundref="torture__list_8c" startline="72" endline="116">torture_ssh_list_prepend</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_list_free</definition>
        <argsstring>(struct ssh_list *list)</argsstring>
        <name>ssh_list_free</name>
        <param>
          <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="669" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="669" bodyend="680"/>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <referencedby refid="group__libssh__channel_1ga1e7211251562c5e1ec64647236caa745" compoundref="channels_8c" startline="1174" endline="1194">ssh_channel_do_free</referencedby>
        <referencedby refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="672" endline="750">ssh_disconnect</referencedby>
        <referencedby refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" compoundref="poll_8c" startline="1089" endline="1118">ssh_event_free</referencedby>
        <referencedby refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</referencedby>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="torture__callbacks_8c_1abaf15b9caaac997af2eeed22979cc0b5" compoundref="torture__callbacks_8c" startline="123" endline="190">torture_callbacks_execute_list</referencedby>
        <referencedby refid="torture__callbacks_8c_1af52882982a73ee96fc4f37bd1372c3e3" compoundref="torture__callbacks_8c" startline="200" endline="242">torture_callbacks_iterate</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a440a79f135a76bbdc5cd40590ec30765" compoundref="torture__knownhosts__verify_8c" startline="216" endline="270">torture_knownhosts_duplicate</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ac1c0973d318a3572507db80d43277613" compoundref="torture__knownhosts__verify_8c" startline="146" endline="214">torture_knownhosts_precheck</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a0a467c6124a654c7fe393521c3cb13fc" compoundref="torture__knownhosts__parsing_8c" startline="329" endline="372">torture_knownhosts_read_file</referencedby>
        <referencedby refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" compoundref="torture__list_8c" startline="25" endline="70">torture_ssh_list_append</referencedby>
        <referencedby refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" compoundref="torture__list_8c" startline="9" endline="23">torture_ssh_list_new</referencedby>
        <referencedby refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" compoundref="torture__list_8c" startline="72" endline="116">torture_ssh_list_prepend</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref> *</type>
        <definition>struct ssh_iterator* ssh_list_get_iterator</definition>
        <argsstring>(const struct ssh_list *list)</argsstring>
        <name>ssh_list_get_iterator</name>
        <param>
          <type>const struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="682" column="19" bodyfile="libssh-mirror/src/misc.c" bodystart="682" bodyend="686"/>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <referencedby refid="group__libssh__channel_1gac43bae56048b912205d102249b436eec" compoundref="channels_8c" startline="2093" endline="2146">ssh_channel_accept</referencedby>
        <referencedby refid="group__libssh__channel_1ga4c25383c95b09d1b583ef0a9db4b08e2" compoundref="channels_8c" startline="370" endline="385">ssh_channel_from_local</referencedby>
        <referencedby refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="672" endline="750">ssh_disconnect</referencedby>
        <referencedby refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" compoundref="poll_8c" startline="884" endline="923">ssh_event_add_session</referencedby>
        <referencedby refid="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" compoundref="poll_8c" startline="1022" endline="1068">ssh_event_remove_session</referencedby>
        <referencedby refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</referencedby>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
        <referencedby refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" compoundref="misc_8c" startline="703" endline="713">ssh_list_count</referencedby>
        <referencedby refid="group__libssh__misc_1ga7a929a68f02650d474604a10252afd68" compoundref="misc_8c" startline="688" endline="694">ssh_list_find</referencedby>
        <referencedby refid="group__libssh__messages_1gad2854ea69cec390707b167fa66864152" compoundref="messages_8c" startline="480" endline="491">ssh_message_pop_head</referencedby>
        <referencedby refid="group__libssh__messages_1ga0cfad25d199cf155b3f6f90cd421f855" compoundref="messages_8c" startline="494" endline="504">ssh_message_termination</referencedby>
        <referencedby refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</referencedby>
        <referencedby refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="65" endline="218">ssh_options_copy</referencedby>
        <referencedby refid="group__libssh__session_1gaaa9d400920cad4d6e4a0fb09ff8c7b01" compoundref="options_8c" startline="1113" endline="1170">ssh_options_get</referencedby>
        <referencedby refid="packet_8h_1a2aab95b1998dbe9a6c525ba265768f52" compoundref="packet_8c" startline="1461" endline="1509">ssh_packet_process</referencedby>
        <referencedby refid="packet_8h_1a7e6c7ed74c23ace432476aa8a6841140" compoundref="packet_8c" startline="1761" endline="1843">ssh_packet_send</referencedby>
        <referencedby refid="packet_8c_1a0d61f18303bfc4d1f67c842d522a67bc" compoundref="packet_8c" startline="1391" endline="1413">ssh_packet_socket_controlflow_callback</referencedby>
        <referencedby refid="group__libssh__auth_1ga53e6771b250c061463ed98b6e5b6e0af" compoundref="auth_8c" startline="1007" endline="1212">ssh_userauth_publickey_auto</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a440a79f135a76bbdc5cd40590ec30765" compoundref="torture__knownhosts__verify_8c" startline="216" endline="270">torture_knownhosts_duplicate</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ac1c0973d318a3572507db80d43277613" compoundref="torture__knownhosts__verify_8c" startline="146" endline="214">torture_knownhosts_precheck</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a0a467c6124a654c7fe393521c3cb13fc" compoundref="torture__knownhosts__parsing_8c" startline="329" endline="372">torture_knownhosts_read_file</referencedby>
        <referencedby refid="torture__options_8c_1a64f216f56007a228aff29721e4b97cd3" compoundref="torture__options_8c" startline="805" endline="911">torture_options_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga7a929a68f02650d474604a10252afd68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref> *</type>
        <definition>struct ssh_iterator* ssh_list_find</definition>
        <argsstring>(const struct ssh_list *list, void *value)</argsstring>
        <name>ssh_list_find</name>
        <param>
          <type>const struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="688" column="19" bodyfile="libssh-mirror/src/misc.c" bodystart="688" bodyend="694"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <referencedby refid="group__libssh__channel_1ga1e7211251562c5e1ec64647236caa745" compoundref="channels_8c" startline="1174" endline="1194">ssh_channel_do_free</referencedby>
        <referencedby refid="packet_8h_1a5316a06c44092abfd23e925958291724" compoundref="packet_8c" startline="1438" endline="1444">ssh_packet_remove_callbacks</referencedby>
        <referencedby refid="group__libssh__callbacks_1gae564352175e887c346a2e062f8124282" compoundref="callbacks_8c" startline="114" endline="130">ssh_remove_channel_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ssh_list_count</definition>
        <argsstring>(const struct ssh_list *list)</argsstring>
        <name>ssh_list_count</name>
        <param>
          <type>const struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Get the number of elements in the list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to count.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of elements in the list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="703" column="8" bodyfile="libssh-mirror/src/misc.c" bodystart="703" bodyend="713"/>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a440a79f135a76bbdc5cd40590ec30765" compoundref="torture__knownhosts__verify_8c" startline="216" endline="270">torture_knownhosts_duplicate</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ac1c0973d318a3572507db80d43277613" compoundref="torture__knownhosts__verify_8c" startline="146" endline="214">torture_knownhosts_precheck</referencedby>
        <referencedby refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" compoundref="torture__list_8c" startline="25" endline="70">torture_ssh_list_append</referencedby>
        <referencedby refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" compoundref="torture__list_8c" startline="9" endline="23">torture_ssh_list_new</referencedby>
        <referencedby refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" compoundref="torture__list_8c" startline="72" endline="116">torture_ssh_list_prepend</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref> *</type>
        <definition>static struct ssh_iterator* ssh_iterator_new</definition>
        <argsstring>(const void *data)</argsstring>
        <name>ssh_iterator_new</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="715" column="26" bodyfile="libssh-mirror/src/misc.c" bodystart="715" bodyend="722"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <referencedby refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</referencedby>
        <referencedby refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" compoundref="misc_8c" startline="747" endline="769">ssh_list_prepend</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_list_append</definition>
        <argsstring>(struct ssh_list *list, const void *data)</argsstring>
        <name>ssh_list_append</name>
        <param>
          <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="724" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="724" bodyend="745"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" compoundref="misc_8c" startline="715" endline="722">ssh_iterator_new</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="callbacks_8c_1ad2b3310e2c1a9718912b3928c5fb76ef" compoundref="callbacks_8c" startline="70" endline="102">ssh_add_set_channel_callbacks</referencedby>
        <referencedby refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" compoundref="poll_8c" startline="884" endline="923">ssh_event_add_session</referencedby>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
        <referencedby refid="group__libssh__messages_1ga3b2c6d96a4e786d11db737193b5701a2" compoundref="messages_8c" startline="415" endline="469">ssh_message_queue</referencedby>
        <referencedby refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</referencedby>
        <referencedby refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="65" endline="218">ssh_options_copy</referencedby>
        <referencedby refid="packet_8h_1a7e6c7ed74c23ace432476aa8a6841140" compoundref="packet_8c" startline="1761" endline="1843">ssh_packet_send</referencedby>
        <referencedby refid="packet_8h_1a6799ed6886c75279d61dcacd83b71102" compoundref="packet_8c" startline="1426" endline="1433">ssh_packet_set_callbacks</referencedby>
        <referencedby refid="torture__callbacks_8c_1abaf15b9caaac997af2eeed22979cc0b5" compoundref="torture__callbacks_8c" startline="123" endline="190">torture_callbacks_execute_list</referencedby>
        <referencedby refid="torture__callbacks_8c_1af52882982a73ee96fc4f37bd1372c3e3" compoundref="torture__callbacks_8c" startline="200" endline="242">torture_callbacks_iterate</referencedby>
        <referencedby refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" compoundref="torture__list_8c" startline="25" endline="70">torture_ssh_list_append</referencedby>
        <referencedby refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" compoundref="torture__list_8c" startline="72" endline="116">torture_ssh_list_prepend</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_list_prepend</definition>
        <argsstring>(struct ssh_list *list, const void *data)</argsstring>
        <name>ssh_list_prepend</name>
        <param>
          <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="747" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="747" bodyend="769"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" compoundref="misc_8c" startline="715" endline="722">ssh_iterator_new</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="callbacks_8c_1ad2b3310e2c1a9718912b3928c5fb76ef" compoundref="callbacks_8c" startline="70" endline="102">ssh_add_set_channel_callbacks</referencedby>
        <referencedby refid="group__libssh__channel_1gada8ccda7bf65165fe145d3096a252dcc" compoundref="channels_8c" startline="80" endline="129">ssh_channel_new</referencedby>
        <referencedby refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</referencedby>
        <referencedby refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" compoundref="torture__list_8c" startline="72" endline="116">torture_ssh_list_prepend</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_list_remove</definition>
        <argsstring>(struct ssh_list *list, struct ssh_iterator *iterator)</argsstring>
        <name>ssh_list_remove</name>
        <param>
          <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref> *</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="771" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="771" bodyend="798"/>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <referencedby refid="group__libssh__channel_1gac43bae56048b912205d102249b436eec" compoundref="channels_8c" startline="2093" endline="2146">ssh_channel_accept</referencedby>
        <referencedby refid="group__libssh__channel_1ga1e7211251562c5e1ec64647236caa745" compoundref="channels_8c" startline="1174" endline="1194">ssh_channel_do_free</referencedby>
        <referencedby refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="672" endline="750">ssh_disconnect</referencedby>
        <referencedby refid="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" compoundref="poll_8c" startline="1022" endline="1068">ssh_event_remove_session</referencedby>
        <referencedby refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</referencedby>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="group__libssh__messages_1gad2854ea69cec390707b167fa66864152" compoundref="messages_8c" startline="480" endline="491">ssh_message_pop_head</referencedby>
        <referencedby refid="packet_8h_1a5316a06c44092abfd23e925958291724" compoundref="packet_8c" startline="1438" endline="1444">ssh_packet_remove_callbacks</referencedby>
        <referencedby refid="group__libssh__callbacks_1gae564352175e887c346a2e062f8124282" compoundref="callbacks_8c" startline="114" endline="130">ssh_remove_channel_callbacks</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ac1c0973d318a3572507db80d43277613" compoundref="torture__knownhosts__verify_8c" startline="146" endline="214">torture_knownhosts_precheck</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga7a36607f228dfde10db885d03b89c32e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* _ssh_list_pop_head</definition>
        <argsstring>(struct ssh_list *list)</argsstring>
        <name>_ssh_list_pop_head</name>
        <param>
          <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="811" column="12" bodyfile="libssh-mirror/src/misc.c" bodystart="811" bodyend="829"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_dirname</definition>
        <argsstring>(const char *path)</argsstring>
        <name>ssh_dirname</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Parse directory component. </para>
        </briefdescription>
        <detaileddescription>
<para>dirname breaks a null-terminated pathname string into a directory component. In the usual case, <ref refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" kindref="member">ssh_dirname()</ref> returns the string up to, but not including, the final &apos;/&apos;. Trailing &apos;/&apos; characters are not counted as part of the pathname. The caller must free the memory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to parse.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The dirname of path or NULL if we can&apos;t allocate memory. If path does not contain a slash, c_dirname() returns the string &quot;.&quot;. If path is the string &quot;/&quot;, it returns the string &quot;/&quot;. If path is NULL or an empty string, &quot;.&quot; is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="847" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="847" bodyend="886"/>
        <referencedby refid="group__libssh__session_1gad10b597ab0b641a469c0190e5fe904a8" compoundref="src_2knownhosts_8c" startline="1041" endline="1103">ssh_known_hosts_check_server_key</referencedby>
        <referencedby refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" compoundref="misc_8c" startline="977" endline="1028">ssh_mkdirs</referencedby>
        <referencedby refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" compoundref="known__hosts_8c" startline="499" endline="565">ssh_write_knownhost</referencedby>
        <referencedby refid="torture__misc_8c_1a4c430ea06569da346f5e5a031ebc83c5" compoundref="torture__misc_8c" startline="71" endline="84">torture_dirname</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_basename</definition>
        <argsstring>(const char *path)</argsstring>
        <name>ssh_basename</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>basename - parse filename component. </para>
        </briefdescription>
        <detaileddescription>
<para>basename breaks a null-terminated pathname string into a filename component. <ref refid="group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b" kindref="member">ssh_basename()</ref> returns the component following the final &apos;/&apos;. Trailing &apos;/&apos; characters are not counted as part of the pathname.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to parse.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The filename of path or NULL if we can&apos;t allocate memory. If path is a the string &quot;/&quot;, basename returns the string &quot;/&quot;. If path is NULL or an empty string, &quot;.&quot; is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="902" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="902" bodyend="940"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <referencedby refid="torture__scp_8c_1a4c842d8a0ce0e842445303734e0b97fe" compoundref="torture__scp_8c" startline="80" endline="124">session_setup</referencedby>
        <referencedby refid="group__libssh__scp_1gaa584f03d4e3d582ac10a3a19818ec56d" compoundref="scp_8c" startline="320" endline="399">ssh_scp_push_directory</referencedby>
        <referencedby refid="group__libssh__scp_1ga50b701b9c8923011d4fc6489c9c7eaae" compoundref="scp_8c" startline="456" endline="540">ssh_scp_push_file64</referencedby>
        <referencedby refid="torture__misc_8c_1aa051fae1529b7257632200c90bbac936" compoundref="torture__misc_8c" startline="56" endline="69">torture_basename</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga5e15e93beecaef3af67d02b7ba55309f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_mkdir</definition>
        <argsstring>(const char *pathname, mode_t mode)</argsstring>
        <name>ssh_mkdir</name>
        <param>
          <type>const char *</type>
          <declname>pathname</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Attempts to create a directory with the given pathname. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the portable version of mkdir, mode is ignored on Windows systems.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathname</parametername>
</parameternamelist>
<parameterdescription>
<para>The path name to create the directory.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error with errno set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="953" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="953" bodyend="963"/>
        <referencedby refid="torture__misc_8c_1a181933ed646695542ff693fb5546964f" compoundref="torture__misc_8c" startline="367" endline="410">torture_ssh_dir_writeable</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_mkdirs</definition>
        <argsstring>(const char *pathname, mode_t mode)</argsstring>
        <name>ssh_mkdirs</name>
        <param>
          <type>const char *</type>
          <declname>pathname</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Attempts to create a directory with the given pathname. The missing directories in the given pathname are created recursively. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pathname</parametername>
</parameternamelist>
<parameterdescription>
<para>The path name to create the directory.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The permissions to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error with errno set.</para>
</simplesect>
<simplesect kind="note"><para>mode is ignored on Windows systems. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="977" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="977" bodyend="1028"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" compoundref="misc_8c" startline="847" endline="886">ssh_dirname</references>
        <references refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" compoundref="misc_8c" startline="977" endline="1028">ssh_mkdirs</references>
        <referencedby refid="group__libssh__session_1gad10b597ab0b641a469c0190e5fe904a8" compoundref="src_2knownhosts_8c" startline="1041" endline="1103">ssh_known_hosts_check_server_key</referencedby>
        <referencedby refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" compoundref="misc_8c" startline="977" endline="1028">ssh_mkdirs</referencedby>
        <referencedby refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" compoundref="known__hosts_8c" startline="499" endline="565">ssh_write_knownhost</referencedby>
        <referencedby refid="torture__misc_8c_1a3fc4093e1bd00dbd7dedd1abd5f0c258" compoundref="torture__misc_8c" startline="412" endline="502">torture_ssh_mkdirs</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_path_expand_tilde</definition>
        <argsstring>(const char *d)</argsstring>
        <name>ssh_path_expand_tilde</name>
        <param>
          <type>const char *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Expand a directory starting with a tilde &apos;~&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory to expand.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The expanded directory, NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1037" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="1037" bodyend="1093"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24" compoundref="misc_8c" startline="241" endline="263">ssh_get_user_home_dir</references>
        <referencedby refid="torture__client__config_8c_1addbd98b07c96dc8546c2a3b053bbcf4e" compoundref="torture__client__config_8c" startline="31" endline="60">setup_config_files</referencedby>
        <referencedby refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</referencedby>
        <referencedby refid="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" compoundref="misc_8c" startline="1106" endline="1207">ssh_path_expand_escape</referencedby>
        <referencedby refid="torture__client__config_8c_1a199383cdaf56acd2611400b9bb125142" compoundref="torture__client__config_8c" startline="62" endline="81">teardown</referencedby>
        <referencedby refid="torture__client__config_8c_1a9e7c020c14631166e6fa3869074a80eb" compoundref="torture__client__config_8c" startline="136" endline="178">torture_client_config_emulate</referencedby>
        <referencedby refid="torture__misc_8c_1aacc65e8d5650800f39d8e4f497a42074" compoundref="torture__misc_8c" startline="124" endline="165">torture_path_expand_tilde_unix</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_path_expand_escape</definition>
        <argsstring>(ssh_session session, const char *s)</argsstring>
        <name>ssh_path_expand_escape</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1106" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="1106" bodyend="1207"/>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="priv_8h_1a7244ab798f58214294b580ca0bb48552" compoundref="priv_8h" startline="190">MAX_BUF_SIZE</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" compoundref="misc_8c" startline="300" endline="320">ssh_get_local_username</references>
        <references refid="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" compoundref="misc_8c" startline="1037" endline="1093">ssh_path_expand_tilde</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" compoundref="session_8h" startline="213">ssh_session_struct::sshdir</references>
        <references refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" compoundref="session_8h" startline="210">ssh_session_struct::username</references>
        <referencedby refid="config_8c_1a45c85072922b6f53ea96012589d601db" compoundref="config_8c" startline="508" endline="1134">ssh_config_parse_line</referencedby>
        <referencedby refid="config_8c_1ab0dead825ebe00cc6f4e5d5e9f54e1c8" compoundref="config_8c" startline="396" endline="414">ssh_match_exec</referencedby>
        <referencedby refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</referencedby>
        <referencedby refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" compoundref="options_8c" startline="1375" endline="1418">ssh_options_parse_config</referencedby>
        <referencedby refid="torture__misc_8c_1ad25e0c3cb23b78605e692b99fe754665" compoundref="torture__misc_8c" startline="169" endline="182">torture_path_expand_escape</referencedby>
        <referencedby refid="torture__misc_8c_1a955df497c3daffa64d211389df7c09f2" compoundref="torture__misc_8c" startline="184" endline="194">torture_path_expand_known_hosts</referencedby>
        <referencedby refid="torture__misc_8c_1aa08c5160acbfbadd10577d890e3c178b" compoundref="torture__misc_8c" startline="196" endline="206">torture_path_expand_percent</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gae795e33139e9c0ad1611fc4fdf476fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_analyze_banner</definition>
        <argsstring>(ssh_session session, int server)</argsstring>
        <name>ssh_analyze_banner</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>server</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1221" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1221" bodyend="1310"/>
        <references refid="structssh__session__struct_1aff7925f04070fc20dc3d9366d7f2f748" compoundref="session_8h" startline="113">ssh_session_struct::clientbanner</references>
        <references refid="priv_8h_1a38dadd06badcc5b7cca444a551604399" compoundref="priv_8h" startline="404">FALL_THROUGH</references>
        <references refid="structssh__session__struct_1abe4bdadafb7d84c9a2095a9a11af1006" compoundref="session_8h" startline="117">ssh_session_struct::openssh</references>
        <references refid="structssh__session__struct_1a9a1f525932e35bb7439abbf121cd8de0" compoundref="session_8h" startline="112">ssh_session_struct::serverbanner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a75fa79e63947b66462db977d9b5ae27c" compoundref="libssh_8h" startline="349">SSH_LOG_PROTOCOL</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="libssh_8h_1adcc45f505791bc456763cfc206f2d9ab" compoundref="libssh_8h" startline="75">SSH_VERSION_INT</references>
        <referencedby refid="group__libssh__session_1gafa8d153635a261e97870ab71d570149a" compoundref="client_8c" startline="384" endline="478">ssh_client_connection_callback</referencedby>
        <referencedby refid="group__libssh__server_1ga6b0057a0346a87ddd9b57bfbbc580d4d" compoundref="server_8c" startline="338" endline="449">ssh_server_connection_callback</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_timestamp_init</definition>
        <argsstring>(struct ssh_timestamp *ts)</argsstring>
        <name>ssh_timestamp_init</name>
        <param>
          <type>struct <ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1324" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="1324" bodyend="1335"/>
        <references refid="group__libssh__misc_1ga3be7ef61d339af381862a81d4b363efb" compoundref="misc_8c" startline="1316">CLOCK</references>
        <references refid="structssh__timestamp_1a6d92f08504f05cb9bb6677b2ead9657c" compoundref="misc_8h" startline="50">ssh_timestamp::seconds</references>
        <references refid="structssh__timestamp_1a10f353b431cf1f19eed7948d9e0ed85f" compoundref="misc_8h" startline="51">ssh_timestamp::useconds</references>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</referencedby>
        <referencedby refid="packet_8h_1ab8efa43ad331ae38c5a72bea6b5f6a14" compoundref="packet_8c" startline="1877" endline="1994">ssh_packet_set_newkeys</referencedby>
        <referencedby refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" compoundref="poll_8c" startline="663" endline="721">ssh_poll_ctx_dopoll</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" compoundref="misc_8c" startline="1388" endline="1411">ssh_timeout_elapsed</referencedby>
        <referencedby refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" compoundref="misc_8c" startline="1420" endline="1432">ssh_timeout_update</referencedby>
        <referencedby refid="torture__misc_8c_1a1fabb2480bb922b2a7f8a224cb6c42bf" compoundref="torture__misc_8c" startline="208" endline="218">torture_timeout_elapsed</referencedby>
        <referencedby refid="torture__misc_8c_1ab20f1c8fe50996f8fec7f5b2230e7475" compoundref="torture__misc_8c" startline="220" endline="230">torture_timeout_update</referencedby>
        <referencedby refid="torture_8c_1adb818fce0b36b2c70af8df12ea648ac6" compoundref="torture_8c" startline="810" endline="826">torture_wait_for_daemon</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_timestamp_difference</definition>
        <argsstring>(struct ssh_timestamp *old, struct ssh_timestamp *new)</argsstring>
        <name>ssh_timestamp_difference</name>
        <param>
          <type>struct <ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref> *</type>
          <declname>old</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref> *</type>
          <declname>new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1347" column="12" bodyfile="libssh-mirror/src/misc.c" bodystart="1347" bodyend="1358"/>
        <references refid="structssh__timestamp_1a6d92f08504f05cb9bb6677b2ead9657c" compoundref="misc_8h" startline="50">ssh_timestamp::seconds</references>
        <references refid="structssh__timestamp_1a10f353b431cf1f19eed7948d9e0ed85f" compoundref="misc_8h" startline="51">ssh_timestamp::useconds</references>
        <referencedby refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" compoundref="misc_8c" startline="1388" endline="1411">ssh_timeout_elapsed</referencedby>
        <referencedby refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" compoundref="misc_8c" startline="1420" endline="1432">ssh_timeout_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_make_milliseconds</definition>
        <argsstring>(long sec, long usec)</argsstring>
        <name>ssh_make_milliseconds</name>
        <param>
          <type>long</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>long</type>
          <declname>usec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1368" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1368" bodyend="1376"/>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
        <referencedby refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_timeout_elapsed</definition>
        <argsstring>(struct ssh_timestamp *ts, int timeout)</argsstring>
        <name>ssh_timeout_elapsed</name>
        <param>
          <type>struct <ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1388" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1388" bodyend="1411"/>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" compoundref="libssh_8h" startline="370">SSH_LOG_WARN</references>
        <references refid="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" compoundref="misc_8c" startline="1347" endline="1358">ssh_timestamp_difference</references>
        <references refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" compoundref="misc_8c" startline="1324" endline="1335">ssh_timestamp_init</references>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</referencedby>
        <referencedby refid="packet_8c_1ac428e05e42c8ce6fc90963d991c2e560" compoundref="packet_8c" startline="981" endline="1045">ssh_packet_need_rekey</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="torture__misc_8c_1a1fabb2480bb922b2a7f8a224cb6c42bf" compoundref="torture__misc_8c" startline="208" endline="218">torture_timeout_elapsed</referencedby>
        <referencedby refid="torture_8c_1adb818fce0b36b2c70af8df12ea648ac6" compoundref="torture_8c" startline="810" endline="826">torture_wait_for_daemon</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_timeout_update</definition>
        <argsstring>(struct ssh_timestamp *ts, int timeout)</argsstring>
        <name>ssh_timeout_update</name>
        <param>
          <type>struct <ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>updates a timeout value so it reflects the remaining time </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an existing timestamp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout in milliseconds. Negative values mean infinite timeout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remaining time in milliseconds, 0 if elapsed, -1 if never. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1420" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1420" bodyend="1432"/>
        <references refid="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" compoundref="misc_8c" startline="1347" endline="1358">ssh_timestamp_difference</references>
        <references refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" compoundref="misc_8c" startline="1324" endline="1335">ssh_timestamp_init</references>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</referencedby>
        <referencedby refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" compoundref="poll_8c" startline="663" endline="721">ssh_poll_ctx_dopoll</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="torture__misc_8c_1ab20f1c8fe50996f8fec7f5b2230e7475" compoundref="torture__misc_8c" startline="220" endline="230">torture_timeout_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaf3cfcc97538c099a8f3d2a8b9ac8c258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_match_group</definition>
        <argsstring>(const char *group, const char *object)</argsstring>
        <name>ssh_match_group</name>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1435" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1435" bodyend="1458"/>
        <references refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" compoundref="generate_8py" startline="3">generate.a</references>
        <referencedby refid="group__libssh__pki_1ga79010baa7b7ca9d4467910ff863e669d" compoundref="pki_8c" startline="371" endline="401">ssh_key_algorithm_allowed</referencedby>
        <referencedby refid="kex_8h_1a383f228ab9f645f88b728125844dad39" compoundref="kex_8c" startline="329" endline="543">SSH_PACKET_CALLBACK</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga51869b401cb0f3e711527bc9a730fbff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void explicit_bzero</definition>
        <argsstring>(void *s, size_t n)</argsstring>
        <name>explicit_bzero</name>
        <param>
          <type>void *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1461" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="1461" bodyend="1474"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <referencedby refid="bcrypt__pbkdf_8c_1aa06621d6b6b991f40b40f8ca4767671e" compoundref="bcrypt__pbkdf_8c" startline="66" endline="104">bcrypt_hash</referencedby>
        <referencedby refid="pki__priv_8h_1ab650514d50b19a9f4ebd5322a9b0fc5d" compoundref="bcrypt__pbkdf_8c" startline="107" endline="182">bcrypt_pbkdf</referencedby>
        <referencedby refid="group__libssh__buffer_1gae0e221aeee158e4762f95207c7f31a68" compoundref="buffer_8c" startline="226" endline="247">buffer_shift</referencedby>
        <referencedby refid="wrapper_8h_1a9cea366077f4498746e7e448cf21ac0d" compoundref="wrapper_8c" startline="161" endline="231">crypto_free</referencedby>
        <referencedby refid="pki__priv_8h_1abb580d92eaeac82f200b332bb09043dd" compoundref="pki__ed25519_8c" startline="101" endline="149">pki_ed25519_verify</referencedby>
        <referencedby refid="group__libssh__pki_1gae8b8a710eea5b5c36c9e2416cc0734d7" compoundref="pki__container__openssh_8c" startline="101" endline="222">pki_private_key_decrypt</referencedby>
        <referencedby refid="group__libssh__pki_1gad2addfee75214413f07493a89638350f" compoundref="pki__container__openssh_8c" startline="432" endline="524">pki_private_key_encrypt</referencedby>
        <referencedby refid="pki__priv_8h_1a9d88e1b6e93f81dc11ebded5384646e3" compoundref="pki__crypto_8c" startline="2139" endline="2279">pki_sign_data</referencedby>
        <referencedby refid="pki__crypto_8c_1a0f1df403c735a5e15982a028f1540024" compoundref="pki__crypto_8c" startline="1656" endline="1773">pki_signature_from_dsa_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1ae3a66a820cd45b733f5ff75f898a0f33" compoundref="pki__crypto_8c" startline="1775" endline="1911">pki_signature_from_ecdsa_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1ad2beac840c71e6ffb9c0dfede0704905" compoundref="pki__crypto_8c" startline="1587" endline="1654">pki_signature_from_rsa_blob</referencedby>
        <referencedby refid="group__libssh__buffer_1ga66ac61dc075863462b8d83b65660e7df" compoundref="buffer_8c" startline="181" endline="220">realloc_buffer</referencedby>
        <referencedby refid="group__libssh__buffer_1ga608cf73226454f21e8b2f9f1d838c5fc" compoundref="buffer_8c" startline="149" endline="166">ssh_buffer_free</referencedby>
        <referencedby refid="group__libssh__buffer_1gad877da63fd8d9a0ee00859bfbacf1eda" compoundref="buffer_8c" startline="259" endline="287">ssh_buffer_reinit</referencedby>
        <referencedby refid="group__libssh__buffer_1gad6f2016153a535fcc92b10a5267a729c" compoundref="buffer_8c" startline="1083" endline="1324">ssh_buffer_unpack_va</referencedby>
        <referencedby refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</referencedby>
        <referencedby refid="group__libssh__misc_1gad6effc9fcc3529ae5d7301fb096aa71c" compoundref="getpass_8c" startline="212" endline="282">ssh_getpass</referencedby>
        <referencedby refid="getpass_8c_1ac691c8e41a2312ee5d6f383129a49150" compoundref="getpass_8c" startline="47" endline="115">ssh_gets</referencedby>
        <referencedby refid="group__libssh__auth_1gac042e71960b1aa80d8245125feeb249a" compoundref="auth_8c" startline="1387" endline="1419">ssh_kbdint_clean</referencedby>
        <referencedby refid="group__libssh__auth_1ga43266010b4cc11e277658c4c6c4a5500" compoundref="auth_8c" startline="1351" endline="1385">ssh_kbdint_free</referencedby>
        <referencedby refid="group__libssh__pki_1ga9ee6aacb86cb7f4e8f3b5ec582040d3a" compoundref="pki_8c" startline="145" endline="199">ssh_key_clean</referencedby>
        <referencedby refid="group__libssh__messages_1ga9d1b1d2279c6be3539f2b630960759c3" compoundref="messages_8c" startline="582" endline="637">ssh_message_free</referencedby>
        <referencedby refid="packet__crypt_8c_1abdf83dcec86ab5fce6c237e3f1622788" compoundref="packet__crypt_8c" startline="133" endline="213">ssh_packet_encrypt</referencedby>
        <referencedby refid="pki__priv_8h_1a0a1b01b666de3e4f433660761c7658ad" compoundref="pki__container__openssh_8c" startline="534" endline="722">ssh_pki_openssh_privkey_export</referencedby>
        <referencedby refid="group__libssh__pki_1gaf78ebf6bac541ad8a6de9b6509dc0fff" compoundref="pki_8c" startline="2403" endline="2484">ssh_pki_signature_verify</referencedby>
        <referencedby refid="group__libssh__string_1gaca1c58e13e7bdb72ea8410592fa0cbf6" compoundref="string_8c" startline="249" endline="255">ssh_string_burn</referencedby>
        <referencedby refid="token_8h_1aaea36e878feebb28b8497eb8bf2bdd1f" compoundref="token_8c" startline="42" endline="58">ssh_tokens_free</referencedby>
        <referencedby refid="group__libssh__auth_1ga75e44b1f27059a00080f80fac0107a20" compoundref="auth_8c" startline="1862" endline="1894">ssh_userauth_kbdint_setanswer</referencedby>
        <referencedby refid="torture__packet_8c_1ad28ea8febde081f05f3c6379e5397dd4" compoundref="torture__packet_8c" startline="45" endline="138">torture_packet</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga8b860ba32fef12da8acd4507c059e509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* strndup</definition>
        <argsstring>(const char *s, size_t n)</argsstring>
        <name>strndup</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1478" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="1478" bodyend="1495"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <referencedby refid="config__parser_8h_1a45ac269803783babc1fc14db0b8fc732" compoundref="config__parser_8c" startline="159" endline="262">ssh_config_parse_uri</referencedby>
        <referencedby refid="group__libssh__session_1ga85ab9f031ff137ad3f9e14341b514f5b" compoundref="dh_8c" startline="678" endline="694">ssh_get_b64_unpadded</referencedby>
        <referencedby refid="group__libssh__pki_1ga320970245fa4e3ab873888b581e13378" compoundref="pki_8c" startline="841" endline="878">ssh_pki_export_privkey_base64</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga5eef4c3ff7b195f33b41c6ae5c0b1832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uint64_inc</definition>
        <argsstring>(unsigned char *counter)</argsstring>
        <name>uint64_inc</name>
        <param>
          <type>unsigned char *</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1500" column="1" bodyfile="libssh-mirror/src/misc.c" bodystart="1500" bodyend="1509"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga3a7b41aee872513df2e3de6cdf22ec5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_quote_file_name</definition>
        <argsstring>(const char *file_name, char *buf, size_t buf_len)</argsstring>
        <name>ssh_quote_file_name</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1540" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1540" bodyend="1693"/>
        <references refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaabc8fd6d8086c34e93f1acc80e59bb493" compoundref="misc_8h" startline="57">DOUBLE_QUOTE</references>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" compoundref="misc_8h" startline="55">NO_QUOTE</references>
        <references refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaaf677a70fa40d7e495c4588619320de5c" compoundref="misc_8h" startline="56">SINGLE_QUOTE</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" compoundref="libssh_8h" startline="346">SSH_LOG_WARNING</references>
        <referencedby refid="group__libssh__scp_1ga1db56dcb9dee01dd0b679b3b11151110" compoundref="scp_8c" startline="119" endline="230">ssh_scp_init</referencedby>
        <referencedby refid="torture__misc_8c_1aa5be6dded4c0979bd47da4aa4d1ad225" compoundref="torture__misc_8c" startline="504" endline="638">torture_ssh_quote_file_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gab037701ea7c4084918793a839fcdc767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_newline_vis</definition>
        <argsstring>(const char *string, char *buf, size_t buf_len)</argsstring>
        <name>ssh_newline_vis</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1710" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1710" bodyend="1736"/>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" compoundref="libssh_8h" startline="346">SSH_LOG_WARNING</references>
        <referencedby refid="group__libssh__scp_1gaa584f03d4e3d582ac10a3a19818ec56d" compoundref="scp_8c" startline="320" endline="399">ssh_scp_push_directory</referencedby>
        <referencedby refid="group__libssh__scp_1ga50b701b9c8923011d4fc6489c9c7eaae" compoundref="scp_8c" startline="456" endline="540">ssh_scp_push_file64</referencedby>
        <referencedby refid="torture__misc_8c_1aeafe803e2a63f22130674c32a006326c" compoundref="torture__misc_8c" startline="640" endline="656">torture_ssh_newline_vis</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1gaacd48b33d4b9e0934a0e2819340aa033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_tmpname</definition>
        <argsstring>(char *template)</argsstring>
        <name>ssh_tmpname</name>
        <param>
          <type>char *</type>
          <declname>template</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1747" column="5" bodyfile="libssh-mirror/src/misc.c" bodystart="1747" bodyend="1787"/>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" compoundref="libssh_8h" startline="346">SSH_LOG_WARNING</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a64e3b3da47d2dcb5585763c1a7036884">time</references>
        <referencedby refid="torture__pki__rsa__uri_8c_1a14cd9e2eaedaaf1f212f073ed8e7392b" compoundref="torture__pki__rsa__uri_8c" startline="34" endline="93">setup_tokens</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__misc_1ga7adc290e458af7d963eaeec0d95e1bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_strreplace</definition>
        <argsstring>(const char *src, const char *pattern, const char *replace)</argsstring>
        <name>ssh_strreplace</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>replace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/misc.c" line="1802" column="6" bodyfile="libssh-mirror/src/misc.c" bodystart="1802" bodyend="1838"/>
        <references refid="torture_8c_1acd28ae39c6440992e47d3da772c56602" compoundref="torture_8c" startline="75">pattern</references>
        <referencedby refid="group__libssh__pki_1gaa94ec2542a8dc9fb32c0989680a1e20f" compoundref="pki_8c" startline="1693" endline="1702">ssh_pki_export_pub_uri_from_priv_uri</referencedby>
        <referencedby refid="torture__misc_8c_1ae7877dff2f3e8b8a990fc7346786a8df" compoundref="torture__misc_8c" startline="658" endline="724">torture_ssh_strreplace</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>misc.c<sp/>-<sp/>useful<sp/>client<sp/>functions</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>SSH<sp/>Library</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2009<sp/>by<sp/>Aris<sp/>Adamantiadis</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008-2009<sp/>by<sp/>Andreas<sp/>Schneider<sp/>&lt;asn@cryptomilk.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>the<sp/>SSH<sp/>Library;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>needed<sp/>for<sp/>a<sp/>standard<sp/>getpwuid_r<sp/>on<sp/>opensolaris<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="misc_8c_1ad44924736167f82a10ae2891fc98a608" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_POSIX_PTHREAD_SEMANTICS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pwd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string_8h" kindref="compound">string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_SYS_TIME_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32_IE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_WIN32_IE<sp/>0x0501<sp/></highlight><highlight class="comment">//<sp/>SHGetSpecialFolderPath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winsock2.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>the<sp/>first<sp/>to<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ws2tcpip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shlobj.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;direct.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_IO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_IO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="priv_8h" kindref="compound">libssh/priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">libssh/misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="session_8h" kindref="compound">libssh/session.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBGCRYPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GCRYPT_STRING<sp/>&quot;/gnutls&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="misc_8c_1a29135c31bc1a30437276a5daf2439ec5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GCRYPT_STRING<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBCRYPTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTO_STRING<sp/>&quot;/openssl&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="misc_8c_1ac3b5aed07b4f7c3050ef2bb0882e16c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTO_STRING<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBMBEDCRYPTO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBED_STRING<sp/>&quot;/mbedtls&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="misc_8c_1a4fd95b9791fb1bfc3c6e0abb997554a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MBED_STRING<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_ZLIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZLIB_STRING<sp/>&quot;/zlib&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="misc_8c_1a6a4dcaf84799f05b3b9ff2183c5fdcb8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZLIB_STRING<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24" kindref="member">ssh_get_user_home_dir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[MAX_PATH]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szPath<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SHGetSpecialFolderPathA(NULL,<sp/>tmp,<sp/>CSIDL_PROFILE,<sp/>TRUE))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>szPath<sp/>=<sp/>malloc(strlen(tmp)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szPath<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(szPath,<sp/>tmp);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>szPath;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>read<sp/>access<sp/>on<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga8077c07f3f7ca5bc62ac7ba807f30476" kindref="member">ssh_file_readaccess_ok</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_access(file,<sp/>4)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gaecdd455fe4f0feb2781ffddf179f38ba" kindref="member">ssh_dir_writeable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_stat<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>_stat(path,<sp/>&amp;<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.st_mode<sp/>&amp;<sp/>_S_IFDIR)<sp/>&amp;&amp;<sp/>(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.st_mode<sp/>&amp;<sp/>_S_IWRITE))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_USEC_IN_SEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_SECONDS_SINCE_1601<sp/><sp/>11644473600LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gettimeofday(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*__p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__t)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ns100;<sp/></highlight><highlight class="comment">/*<sp/>time<sp/>since<sp/>1<sp/>Jan<sp/>1601<sp/>in<sp/>100ns<sp/>units<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>FILETIME<sp/>ft;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}<sp/>now;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>GetSystemTimeAsFileTime<sp/>(&amp;now.ft);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>__p-&gt;tv_usec<sp/>=<sp/>(long)<sp/>((now.ns100<sp/>/<sp/>10LL)<sp/>%<sp/>SSH_USEC_IN_SEC);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>__p-&gt;tv_sec<sp/><sp/>=<sp/>(long)(((now.ns100<sp/>/<sp/>10LL<sp/>)<sp/>/<sp/>SSH_USEC_IN_SEC)<sp/>-<sp/>SSH_SECONDS_SINCE_1601);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" kindref="member">ssh_get_local_username</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>GetUserName(NULL,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(size);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetUserName(<ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>,<sp/>&amp;size))<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" kindref="member">ssh_is_ipaddr_v4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>ss;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sslen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ss);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>SOCKET_ERROR;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WSAStringToAddressA<sp/>thinks<sp/>that<sp/>0.0.0<sp/>is<sp/>a<sp/>valid<sp/>IP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(str)<sp/>&lt;<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>WSAStringToAddressA((LPSTR)<sp/>str,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_INET,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)&amp;ss,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sslen);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga1c673445ca02a6f30ba5940682b5e7ba" kindref="member">ssh_is_ipaddr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>SOCKET_ERROR;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(str,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>ss;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sslen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ss);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>link-local<sp/>(IP:v6:addr%ifname).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>WSAStringToAddressA((LPSTR)<sp/>str,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_INET6,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)&amp;ss,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sslen);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" kindref="member">ssh_is_ipaddr_v4</ref>(str);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NSS_BUFLEN_PASSWD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NSS_BUFLEN_PASSWD<sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NSS_BUFLEN_PASSWD<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24" kindref="member">ssh_get_user_home_dir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szPath<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>pwd;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>*pwdbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" kindref="member">NSS_BUFLEN_PASSWD</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>getpwuid_r(getuid(),<sp/>&amp;pwd,<sp/>buf,<sp/><ref refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" kindref="member">NSS_BUFLEN_PASSWD</ref>,<sp/>&amp;pwdbuf);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>!=<sp/>0<sp/>||<sp/>pwdbuf<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szPath<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(szPath<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>szPath);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(buf);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>szPath<sp/>=<sp/>strdup(pwd.pw_dir);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>szPath;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>read<sp/>access<sp/>on<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__libssh__misc_1ga8077c07f3f7ca5bc62ac7ba807f30476" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga8077c07f3f7ca5bc62ac7ba807f30476" kindref="member">ssh_file_readaccess_ok</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access(file,<sp/>R_OK)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group__libssh__misc_1gaecdd455fe4f0feb2781ffddf179f38ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gaecdd455fe4f0feb2781ffddf179f38ba" kindref="member">ssh_dir_writeable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>stat(path,<sp/>&amp;<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S_ISDIR(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.st_mode)<sp/>&amp;&amp;<sp/>(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.st_mode<sp/>&amp;<sp/>S_IWRITE))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" kindref="member">ssh_get_local_username</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>pwd;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>*pwdbuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" kindref="member">NSS_BUFLEN_PASSWD</ref>];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>getpwuid_r(getuid(),<sp/>&amp;pwd,<sp/>buf,<sp/><ref refid="group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e" kindref="member">NSS_BUFLEN_PASSWD</ref>,<sp/>&amp;pwdbuf);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>!=<sp/>0<sp/>||<sp/>pwdbuf<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>=<sp/>strdup(pwd.pw_name);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" kindref="member">ssh_is_ipaddr_v4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in_addr<sp/>dest;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>inet_pton(AF_INET,<sp/>str,<sp/>&amp;dest);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="group__libssh__misc_1ga1c673445ca02a6f30ba5940682b5e7ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga1c673445ca02a6f30ba5940682b5e7ba" kindref="member">ssh_is_ipaddr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(str,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in6_addr<sp/>dest6;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>link-local<sp/>(IP:v6:addr%ifname).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>inet_pton(AF_INET6,<sp/>str,<sp/>&amp;dest6);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809" kindref="member">ssh_is_ipaddr_v4</ref>(str);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff" kindref="member">ssh_lowercase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/>*p;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>strdup(str);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;<sp/>*p;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>tolower(*p);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" kindref="member">ssh_hostport</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sshnetcat_8c_1ad723da1801ae1586eb330380e2d9a912" kindref="member">port</ref>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>for<sp/>[]:,<sp/>5<sp/>for<sp/>65536<sp/>and<sp/>1<sp/>for<sp/>nul<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(<ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>)<sp/>+<sp/>3<sp/>+<sp/>5<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>malloc(len);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(dest,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;[%s]:%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>,<sp/><ref refid="sshnetcat_8c_1ad723da1801ae1586eb330380e2d9a912" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" kindref="member">ssh_get_hexa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>h[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789abcdef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hexa;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlen<sp/>=<sp/>len<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>(UINT_MAX<sp/>-<sp/>1)<sp/>/<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>hexa<sp/>=<sp/>malloc(hlen<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexa<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hexa[i<sp/>*<sp/>3]<sp/>=<sp/>h[(what[i]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0xF];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hexa[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>h[what[i]<sp/>&amp;<sp/>0xF];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hexa[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>hexa[hlen<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hexa;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="group__libssh__misc_1ga39bf7936ed51361fe9cf3c3bbfc25514" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga39bf7936ed51361fe9cf3c3bbfc25514" kindref="member">ssh_print_hexa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*descr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hexa<sp/>=<sp/><ref refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" kindref="member">ssh_get_hexa</ref>(what,<sp/>len);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hexa<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>descr,<sp/>hexa);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>free(hexa);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="group__libssh__misc_1ga2f4f479e4dc3412c7b4af6946eef6269" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga2f4f479e4dc3412c7b4af6946eef6269" kindref="member">ssh_log_hexdump</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*descr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ascii[17];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>printed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>required<sp/>buffer<sp/>size<sp/>is<sp/>calculated<sp/>from:</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>2<sp/>bytes<sp/>for<sp/>spaces<sp/>at<sp/>the<sp/>beginning</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>8<sp/>bytes<sp/>for<sp/>the<sp/>offset</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>2<sp/>bytes<sp/>for<sp/>spaces</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>24<sp/>bytes<sp/>to<sp/>print<sp/>the<sp/>first<sp/>8<sp/>bytes<sp/>+<sp/>spaces</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>1<sp/>byte<sp/>for<sp/>an<sp/>extra<sp/>space</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>24<sp/>bytes<sp/>to<sp/>print<sp/>next<sp/>8<sp/>bytes<sp/>+<sp/>spaces</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>2<sp/>bytes<sp/>for<sp/>extra<sp/>spaces</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>16<sp/>bytes<sp/>for<sp/>the<sp/>content<sp/>as<sp/>ASCII<sp/>characters<sp/>at<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>1<sp/>byte<sp/>for<sp/>the<sp/>ending<sp/>&apos;\0&apos;</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Resulting<sp/>in<sp/>80<sp/>bytes.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Except<sp/>for<sp/>the<sp/>first<sp/>line<sp/>(description<sp/>+<sp/>size),<sp/>all<sp/>lines<sp/>have<sp/>fixed</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>length.<sp/>If<sp/>a<sp/>too<sp/>long<sp/>description<sp/>is<sp/>used,<sp/>the<sp/>function<sp/>will<sp/>fail.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>[80];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>description<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>),<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>descr);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>),<sp/></highlight><highlight class="stringliteral">&quot;(NULL<sp/>description)<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(zero<sp/>length):&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1a5e4247396f11fdc228d356a408c81715" kindref="member">SSH_LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%zu<sp/>bytes):&quot;</highlight><highlight class="normal">,<sp/>len);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(what<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(NULL)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1a5e4247396f11fdc228d356a408c81715" kindref="member">SSH_LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1a5e4247396f11fdc228d356a408c81715" kindref="member">SSH_LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>what;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>one<sp/>space<sp/>after<sp/>printing<sp/>8<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>%<sp/>8)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log<sp/>previous<sp/>line<sp/>and<sp/>reset<sp/>state<sp/>for<sp/>new<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>%<sp/>16)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ascii);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1a5e4247396f11fdc228d356a408c81715" kindref="member">SSH_LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>a<sp/>new<sp/>line<sp/>with<sp/>the<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>),</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%08zx<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>the<sp/>current<sp/>byte<sp/>hexadecimal<sp/>representation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>%02x&quot;</highlight><highlight class="normal">,<sp/>pc[i]);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>printable,<sp/>store<sp/>the<sp/>ASCII<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isprint(pc[i]))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii[i<sp/>%<sp/>16]<sp/>=<sp/>pc[i];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii[i<sp/>%<sp/>16]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii[(i<sp/>%<sp/>16)<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>padding<sp/>if<sp/>not<sp/>exactly<sp/>16<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>%<sp/>16)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>one<sp/>space<sp/>after<sp/>printing<sp/>8<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>%<sp/>8)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>printed;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>the<sp/>last<sp/>printable<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>printed<sp/>=<sp/>snprintf(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>+<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/>-<sp/>count,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ascii);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printed<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1a5e4247396f11fdc228d356a408c81715" kindref="member">SSH_LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" kindref="member">SSH_LOG_WARN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>print<sp/>to<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="group__libssh__misc_1gaeda71ed34a62fa332762f25b14dac6eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1gaeda71ed34a62fa332762f25b14dac6eb" kindref="member">ssh_version</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_version)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_version<sp/>&lt;=<sp/><ref refid="libssh_8h_1a2cd99e8e8653b889188dc7b84b331dd1" kindref="member">LIBSSH_VERSION_INT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a9ed5c4abd116001eb5ffedc39bf1f677" kindref="member">SSH_STRINGIFY</ref>(<ref refid="libssh_8h_1ae62377c24279c9870c0893bd845c7636" kindref="member">LIBSSH_VERSION</ref>)<sp/><ref refid="misc_8c_1a29135c31bc1a30437276a5daf2439ec5" kindref="member">GCRYPT_STRING</ref><sp/><ref refid="misc_8c_1ac3b5aed07b4f7c3050ef2bb0882e16c3" kindref="member">CRYPTO_STRING</ref><sp/><ref refid="misc_8c_1a4fd95b9791fb1bfc3c6e0abb997554a7" kindref="member">MBED_STRING</ref></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="misc_8c_1a6a4dcaf84799f05b3b9ff2183c5fdcb8" kindref="member">ZLIB_STRING</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*<ref refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" kindref="member">ssh_list_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*ret=malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref>));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>ret-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>=ret-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>=NULL;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" kindref="member">ssh_list_free</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list){</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*ptr,*<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!list)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>ptr=list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ptr){</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>=ptr-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(ptr);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(list);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*<ref refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" kindref="member">ssh_list_get_iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list){</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!list)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="group__libssh__misc_1ga7a929a68f02650d474604a10252afd68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*<ref refid="group__libssh__misc_1ga7a929a68f02650d474604a10252afd68" kindref="member">ssh_list_find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value){</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*it;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/><ref refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" kindref="member">ssh_list_get_iterator</ref>(list);<sp/>it<sp/>!=<sp/>NULL<sp/>;it=it-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>==value)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" kindref="member">ssh_list_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*it<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" kindref="member">ssh_list_get_iterator</ref>(list);<sp/>it<sp/>!=<sp/>NULL<sp/>;<sp/>it<sp/>=<sp/>it-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*<ref refid="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" kindref="member">ssh_iterator_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*iterator=malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref>));</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!iterator)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>iterator-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>=NULL;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>iterator-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>=<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" kindref="member">ssh_list_append</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*iterator<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>iterator<sp/>=<sp/><ref refid="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" kindref="member">ssh_iterator_new</ref>(<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterator<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>){</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>list<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>=list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>=iterator;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>it<sp/>on<sp/>end<sp/>of<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>=iterator;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>=iterator;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" kindref="member">ssh_list_prepend</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>){</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*it<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/><ref refid="group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d" kindref="member">ssh_iterator_new</ref>(<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>list<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref><sp/>=<sp/>list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref><sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>as<sp/>new<sp/>root<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref><sp/>=<sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref><sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" kindref="member">ssh_list_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*iterator){</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*ptr,*prev;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>prev=NULL;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>ptr=list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ptr<sp/>&amp;&amp;<sp/>ptr<sp/>!=<sp/>iterator){</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>prev=ptr;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=ptr-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ptr){</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>did<sp/>not<sp/>find<sp/>the<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlink<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prev)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>prev-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>=ptr-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>iterator<sp/>was<sp/>the<sp/>head<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref><sp/>==<sp/>iterator)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>=iterator-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>iterator<sp/>was<sp/>the<sp/>tail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref><sp/>==<sp/>iterator)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref><sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(iterator);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="group__libssh__misc_1ga7a36607f228dfde10db885d03b89c32e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga7a36607f228dfde10db885d03b89c32e" kindref="member">_ssh_list_pop_head</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*list){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*iterator<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>iterator<sp/>=<sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterator<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>=iterator-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>list-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>=iterator-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>==iterator)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>=NULL;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(iterator);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" kindref="member">ssh_dirname</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/>NULL<sp/>||<sp/>*path<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>strlen(path);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>trailing<sp/>slashes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>path[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>--len;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>only<sp/>slashes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>goto<sp/>next<sp/>slash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>path[len<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>--len;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>slashes<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>path[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>--len;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>malloc(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>strncpy(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/>path,<sp/>len);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b" kindref="member">ssh_basename</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/>NULL<sp/>||<sp/>*path<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>strlen(path);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>trailing<sp/>slashes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>path[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>--len;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>only<sp/>slashes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>path[len<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>--len;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>=<sp/>path<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>--len;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(path);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>malloc(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>strncpy(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="group__libssh__misc_1ga5e15e93beecaef3af67d02b7ba55309f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga5e15e93beecaef3af67d02b7ba55309f" kindref="member">ssh_mkdir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathname,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>_mkdir(pathname);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>mkdir(pathname,<sp/>mode);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="977" refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" kindref="member">ssh_mkdirs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathname,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parent<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathname<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathname[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcmp(pathname,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcmp(pathname,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>_mkdir(pathname);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>mkdir(pathname,<sp/>mode);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>directory<sp/>was<sp/>missing,<sp/>try<sp/>to<sp/>create<sp/>the<sp/>parent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>ENOENT)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/><ref refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" kindref="member">ssh_dirname</ref>(pathname);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" kindref="member">ssh_mkdirs</ref>(parent,<sp/>mode);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>could<sp/>not<sp/>create<sp/>the<sp/>parent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(parent);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(parent);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>_mkdir(pathname);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>mkdir(pathname,<sp/>mode);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037" refid="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" kindref="member">ssh_path_expand_tilde</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*h<sp/>=<sp/>NULL,<sp/>*r;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ld;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(d);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>d++;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>~user/path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>strchr(d,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>p<sp/>&gt;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(d);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passwd<sp/>*pw;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>=<sp/>p<sp/>-<sp/>d;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>u[128];</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u))<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(u,<sp/>d,<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u[<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pw<sp/>=<sp/>getpwnam(u);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pw<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/>=<sp/>strlen(p);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>strdup(pw-&gt;pw_dir);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ld<sp/>=<sp/>strlen(d);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>d;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/><ref refid="group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24" kindref="member">ssh_get_user_home_dir</ref>();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>lh<sp/>=<sp/>strlen(h);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>malloc(ld<sp/>+<sp/>lh<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(h);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lh<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(r,<sp/>h,<sp/>lh);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(h);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(r<sp/>+<sp/>lh,<sp/>p,<sp/>ld<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" kindref="member">ssh_path_expand_escape</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>[NI_MAXHOST];</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="priv_8h_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r,<sp/>*x<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>l;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" kindref="member">ssh_path_expand_tilde</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" kindref="member">ssh_set_error_oom</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(r)<sp/>&gt;<sp/><ref refid="priv_8h_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" kindref="member">ssh_set_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" kindref="member">SSH_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>to<sp/>expand<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(r);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escape:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="priv_8h_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(r);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*p)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>escape;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>strdup(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e" kindref="member">opts</ref>.<ref refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" kindref="member">sshdir</ref>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" kindref="member">ssh_get_local_username</ref>();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gethostname(<ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>strdup(<ref refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" kindref="member">host</ref>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;h&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>strdup(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e" kindref="member">opts</ref>.<ref refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" kindref="member">host</ref>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>strdup(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e" kindref="member">opts</ref>.<ref refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" kindref="member">username</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e" kindref="member">opts</ref>.<ref refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" kindref="member">port</ref><sp/>&lt;<sp/>65536)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[6];</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp),</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e" kindref="member">opts</ref>.<ref refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" kindref="member">port</ref><sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e" kindref="member">opts</ref>.<ref refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" kindref="member">port</ref><sp/>:<sp/>22);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>strdup(tmp);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" kindref="member">ssh_set_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" kindref="member">SSH_FATAL</ref>,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>escape<sp/>sequence<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(r);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" kindref="member">ssh_set_error_oom</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(r);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>strlen(x);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="priv_8h_1a7244ab798f58214294b580ca0bb48552" kindref="member">MAX_BUF_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" kindref="member">ssh_set_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" kindref="member">SSH_FATAL</ref>,</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;String<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(x);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(r);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>strlen(buf);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(buf<sp/>+<sp/>l,<sp/>x,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf)<sp/>-<sp/>l<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(x);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>free(r);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(buf);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MAX_BUF_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221" refid="group__libssh__misc_1gae795e33139e9c0ad1611fc4fdf476fbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gae795e33139e9c0ad1611fc4fdf476fbe" kindref="member">ssh_analyze_banner</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>server)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*banner;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*openssh;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(server)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>banner<sp/>=<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aff7925f04070fc20dc3d9366d7f2f748" kindref="member">clientbanner</ref>;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>banner<sp/>=<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1a9a1f525932e35bb7439abbf121cd8de0" kindref="member">serverbanner</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(banner<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" kindref="member">ssh_set_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" kindref="member">SSH_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>banner&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Typical<sp/>banners<sp/>e.g.<sp/>are:</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SSH-1.5-openSSH_5.4</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SSH-1.99-openSSH_3.0</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SSH-2.0-something</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>012345678901234567890</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(banner)<sp/>&lt;<sp/>6<sp/>||</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp(banner,<sp/></highlight><highlight class="stringliteral">&quot;SSH-&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" kindref="member">ssh_set_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" kindref="member">SSH_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Protocol<sp/>mismatch:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>banner);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a75fa79e63947b66462db977d9b5ae27c" kindref="member">SSH_LOG_PROTOCOL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Analyzing<sp/>banner:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>banner);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(banner[4])<sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(banner)<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(banner[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a38dadd06badcc5b7cca444a551604399" kindref="member">FALL_THROUGH</ref>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" kindref="member">ssh_set_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" kindref="member">SSH_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Protocol<sp/>mismatch:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>banner);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>a<sp/>best-effort<sp/>to<sp/>extract<sp/>OpenSSH<sp/>version<sp/>numbers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>openssh<sp/>=<sp/>strstr(banner,<sp/></highlight><highlight class="stringliteral">&quot;OpenSSH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openssh<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>major<sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minor<sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>banner<sp/>is<sp/>typical:</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>OpenSSH_5.4</highlight></codeline>
<codeline lineno="1279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>012345678901234567890</highlight></codeline>
<codeline lineno="1280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(openssh)<sp/>&gt;<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major<sp/>=<sp/>strtoul(openssh<sp/>+<sp/>8,<sp/>&amp;tmp,<sp/>10);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmp<sp/>==<sp/>(openssh<sp/>+<sp/>8))<sp/>||</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((errno<sp/>==<sp/>ERANGE)<sp/>&amp;&amp;<sp/>(major<sp/>==<sp/>ULONG_MAX))<sp/>||</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((errno<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(major<sp/>==<sp/>0))<sp/>||</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((major<sp/>&lt;<sp/>1)<sp/>||<sp/>(major<sp/>&gt;<sp/>100)))<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>major<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minor<sp/>=<sp/>strtoul(openssh<sp/>+<sp/>10,<sp/>&amp;tmp,<sp/>10);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmp<sp/>==<sp/>(openssh<sp/>+<sp/>10))<sp/>||</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((errno<sp/>==<sp/>ERANGE)<sp/>&amp;&amp;<sp/>(major<sp/>==<sp/>ULONG_MAX))<sp/>||</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((errno<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(major<sp/>==<sp/>0))<sp/>||</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(minor<sp/>&gt;<sp/>100))<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>minor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1abe4bdadafb7d84c9a2095a9a11af1006" kindref="member">openssh</ref><sp/>=<sp/><ref refid="libssh_8h_1adcc45f505791bc456763cfc206f2d9ab" kindref="member">SSH_VERSION_INT</ref>(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>major),<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>minor),<sp/>0);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a75fa79e63947b66462db977d9b5ae27c" kindref="member">SSH_LOG_PROTOCOL</ref>,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;We<sp/>are<sp/>talking<sp/>to<sp/>an<sp/>OpenSSH<sp/>client<sp/>version:<sp/>%lu.%lu<sp/>(%x)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>major,<sp/>minor,<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1abe4bdadafb7d84c9a2095a9a11af1006" kindref="member">openssh</ref>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal">done:</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>try<sp/>the<sp/>Monotonic<sp/>clock<sp/>if<sp/>possible<sp/>for<sp/>perfs<sp/>reasons<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_POSIX_MONOTONIC_CLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOCK<sp/>CLOCK_MONOTONIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316" refid="group__libssh__misc_1ga3be7ef61d339af381862a81d4b363efb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOCK<sp/>CLOCK_REALTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" kindref="member">ssh_timestamp_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>*ts){</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CLOCK_GETTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>tp;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>clock_gettime(<ref refid="group__libssh__misc_1ga3be7ef61d339af381862a81d4b363efb" kindref="member">CLOCK</ref>,<sp/>&amp;tp);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>ts-&gt;<ref refid="structssh__timestamp_1a10f353b431cf1f19eed7948d9e0ed85f" kindref="member">useconds</ref><sp/>=<sp/>tp.tv_nsec<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tp;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>gettimeofday(&amp;tp,<sp/>NULL);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>ts-&gt;<ref refid="structssh__timestamp_1a10f353b431cf1f19eed7948d9e0ed85f" kindref="member">useconds</ref><sp/>=<sp/>tp.tv_usec;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>ts-&gt;<ref refid="structssh__timestamp_1a6d92f08504f05cb9bb6677b2ead9657c" kindref="member">seconds</ref><sp/>=<sp/>tp.tv_sec;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347" refid="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" kindref="member">ssh_timestamp_difference</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>*old,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds,<sp/>usecs,<sp/>msecs;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>seconds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;seconds<sp/>-<sp/>old-&gt;<ref refid="structssh__timestamp_1a6d92f08504f05cb9bb6677b2ead9657c" kindref="member">seconds</ref>;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>usecs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;useconds<sp/>-<sp/>old-&gt;<ref refid="structssh__timestamp_1a10f353b431cf1f19eed7948d9e0ed85f" kindref="member">useconds</ref>;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usecs<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>seconds--;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>usecs<sp/>+=<sp/>1000000;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>msecs<sp/>=<sp/>seconds<sp/>*<sp/>1000<sp/>+<sp/>usecs/1000;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msecs;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368" refid="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" kindref="member">ssh_make_milliseconds</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sec,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>usec)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>usec<sp/>?<sp/>(usec<sp/>/<sp/>1000)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>(sec<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>10<sp/>*<sp/>1000;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>a<sp/>reasonable<sp/>default<sp/>value<sp/>in<sp/>case</highlight></codeline>
<codeline lineno="1373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SSH_OPTIONS_TIMEOUT<sp/>is<sp/>not<sp/>set<sp/>in<sp/>options.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388" refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" kindref="member">ssh_timeout_elapsed</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>*ts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>now;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(timeout)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-2:<sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>-2<sp/>means<sp/>user-defined<sp/>timeout<sp/>as<sp/>available<sp/>in</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>session-&gt;timeout,<sp/>session-&gt;timeout_usec.</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" kindref="member">SSH_LOG_WARN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ssh_timeout_elapsed<sp/>called<sp/>with<sp/>-2.<sp/>this<sp/>needs<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;be<sp/>fixed.<sp/>please<sp/>set<sp/>a<sp/>breakpoint<sp/>on<sp/>misc.c:%d<sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;fix<sp/>the<sp/>caller\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/></highlight><highlight class="comment">/*<sp/>-1<sp/>means<sp/>infinite<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>means<sp/>no<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" kindref="member">ssh_timestamp_init</ref>(&amp;now);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" kindref="member">ssh_timestamp_difference</ref>(ts,&amp;now)<sp/>&gt;=<sp/>timeout);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420" refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" kindref="member">ssh_timeout_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>*ts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout){</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>now;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms,<sp/>ret;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeout;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><ref refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" kindref="member">ssh_timestamp_init</ref>(&amp;now);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>ms<sp/>=<sp/><ref refid="group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d" kindref="member">ssh_timestamp_difference</ref>(ts,&amp;now);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ms<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>ms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>timeout<sp/>-<sp/>ms;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>&gt;=<sp/>0<sp/>?<sp/>ret:<sp/>0;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435" refid="group__libssh__misc_1gaf3cfcc97538c099a8f3d2a8b9ac8c258" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gaf3cfcc97538c099a8f3d2a8b9ac8c258" kindref="member">ssh_match_group</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*group,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*z;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>group;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref><sp/>=<sp/>strchr(z,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(z,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(z,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref><sp/>-<sp/>z)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/><ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HAVE_EXPLICIT_BZERO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461" refid="group__libssh__misc_1ga51869b401cb0f3e711527bc9a730fbff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga51869b401cb0f3e711527bc9a730fbff" kindref="member">explicit_bzero</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_MEMSET_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>memset_s(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/>n,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_SECURE_ZERO_MEMORY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>SecureZeroMemory(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_GCC_VOLATILE_MEMORY_PROTECTION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>http://llvm.org/bugs/show_bug.cgi?id=15495<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_GCC_VOLATILE_MEMORY_PROTECTION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!HAVE_EXPLICIT_BZERO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HAVE_STRNDUP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478" refid="group__libssh__misc_1ga8b860ba32fef12da8acd4507c059e509" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga8b860ba32fef12da8acd4507c059e509" kindref="member">strndup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*x<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>+<sp/>1<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>malloc(n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(x,<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>x[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>HAVE_STRNDUP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Increment<sp/>64b<sp/>integer<sp/>in<sp/>network<sp/>byte<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500" refid="group__libssh__misc_1ga5eef4c3ff7b195f33b41c6ae5c0b1832" refkind="member"><highlight class="normal"><ref refid="group__libssh__misc_1ga5eef4c3ff7b195f33b41c6ae5c0b1832" kindref="member">uint64_inc</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*counter)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>7;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter[i]++;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter[i])</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540" refid="group__libssh__misc_1ga3a7b41aee872513df2e3de6cdf22ec5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1ga3a7b41aee872513df2e3de6cdf22ec5d" kindref="member">ssh_quote_file_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_len)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>required_buf_len;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6ea" kindref="member">ssh_quote_state_e</ref><sp/>state<sp/>=<sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" kindref="member">NO_QUOTE</ref>;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_name<sp/>==<sp/>NULL<sp/>||<sp/>buf<sp/>==<sp/>NULL<sp/>||<sp/>buf_len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" kindref="member">SSH_LOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>allow<sp/>file<sp/>names<sp/>smaller<sp/>than<sp/>32kb.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(file_name)<sp/>&gt;<sp/>32<sp/>*<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" kindref="member">SSH_LOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>name<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Paranoia<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>required_buf_len<sp/>=<sp/>(size_t)3<sp/>*<sp/>strlen(file_name)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(required_buf_len<sp/>&gt;<sp/>buf_len)<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" kindref="member">SSH_LOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>=<sp/>file_name;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*src<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*src)<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>&apos;\&apos;&apos;<sp/>char<sp/>is<sp/>double<sp/>quoted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" kindref="member">NO_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>a<sp/>new<sp/>double<sp/>quoted<sp/>string.<sp/>The<sp/>&apos;\&apos;&apos;<sp/>char<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>copied<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>it<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>loop.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaaf677a70fa40d7e495c4588619320de5c" kindref="member">SINGLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>current<sp/>single<sp/>quoted<sp/>string<sp/>and<sp/>start<sp/>a<sp/>new<sp/>double</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>quoted<sp/>string.<sp/>The<sp/>&apos;\&apos;&apos;<sp/>char<sp/>will<sp/>be<sp/>copied<sp/>to<sp/>the<sp/>beginning</highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>it<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>loop.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaabc8fd6d8086c34e93f1acc80e59bb493" kindref="member">DOUBLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>already<sp/>in<sp/>the<sp/>double<sp/>quoted<sp/>string,<sp/>keep<sp/>copying<sp/>the</highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sequence<sp/>of<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>never<sp/>be<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>&apos;\&apos;&apos;<sp/>char<sp/>is<sp/>found,<sp/>the<sp/>resulting<sp/>state<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>DOUBLE_QUOTE<sp/>in<sp/>any<sp/>case*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaabc8fd6d8086c34e93f1acc80e59bb493" kindref="member">DOUBLE_QUOTE</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>&apos;!&apos;<sp/>char<sp/>is<sp/>replaced<sp/>by<sp/>unquoted<sp/>&quot;\!&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" kindref="member">NO_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>&apos;!&apos;<sp/>char<sp/>is<sp/>interpreted<sp/>in<sp/>some<sp/>shells<sp/>(e.g.<sp/>CSH)<sp/>even</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>is<sp/>quoted<sp/>with<sp/>single<sp/>quotes.<sp/><sp/>Replace<sp/>it<sp/>with<sp/>unquoted</highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;\!&quot;<sp/>which<sp/>is<sp/>correctly<sp/>interpreted<sp/>as<sp/>the<sp/>&apos;!&apos;<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaaf677a70fa40d7e495c4588619320de5c" kindref="member">SINGLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>current<sp/>quoted<sp/>string<sp/>and<sp/>replace<sp/>&apos;!&apos;<sp/>for<sp/>unquoted</highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;\!&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaabc8fd6d8086c34e93f1acc80e59bb493" kindref="member">DOUBLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>current<sp/>quoted<sp/>string<sp/>and<sp/>replace<sp/><sp/>&quot;!&quot;<sp/>for<sp/>unquoted</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;\!&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>never<sp/>be<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>&apos;!&apos;<sp/>char<sp/>is<sp/>found,<sp/>the<sp/>resulting<sp/>state<sp/>will<sp/>be<sp/>NO_QUOTE</highlight></codeline>
<codeline lineno="1630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>any<sp/>case*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" kindref="member">NO_QUOTE</ref>;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ordinary<sp/>chars<sp/>are<sp/>single<sp/>quoted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" kindref="member">NO_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>a<sp/>new<sp/>single<sp/>quoted<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaaf677a70fa40d7e495c4588619320de5c" kindref="member">SINGLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>already<sp/>in<sp/>the<sp/>single<sp/>quoted<sp/>string,<sp/>keep<sp/>copying<sp/>the</highlight></codeline>
<codeline lineno="1644"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sequence<sp/>of<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaabc8fd6d8086c34e93f1acc80e59bb493" kindref="member">DOUBLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>current<sp/>double<sp/>quoted<sp/>string<sp/>and<sp/>start<sp/>a<sp/>new<sp/>single</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>quoted<sp/>string.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>never<sp/>be<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>an<sp/>ordinary<sp/>char<sp/>is<sp/>found,<sp/>the<sp/>resulting<sp/>state<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SINGLE_QUOTE<sp/>in<sp/>any<sp/>case*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaaf677a70fa40d7e495c4588619320de5c" kindref="member">SINGLE_QUOTE</ref>;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>current<sp/>char<sp/>to<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>*src++;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>quoted<sp/>string<sp/>when<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaa4ee3a87f10b328ca1486e87082a410a6" kindref="member">NO_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>open<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaaf677a70fa40d7e495c4588619320de5c" kindref="member">SINGLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>current<sp/>single<sp/>quoted<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="misc_8h_1a82fe86776fe0f6e6bad79e5a1e5fb6eaabc8fd6d8086c34e93f1acc80e59bb493" kindref="member">DOUBLE_QUOTE</ref>:</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>current<sp/>double<sp/>quoted<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>never<sp/>be<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>string<sp/>terminator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst<sp/>-<sp/>buf;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><ref refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710" refid="group__libssh__misc_1gab037701ea7c4084918793a839fcdc767" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gab037701ea7c4084918793a839fcdc767" kindref="member">ssh_newline_vis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_len)</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>==<sp/>NULL<sp/>||<sp/>buf<sp/>==<sp/>NULL<sp/>||<sp/>buf_len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((2<sp/>*<sp/>strlen(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>+<sp/>1)<sp/>&gt;<sp/>buf_len)<sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" kindref="member">SSH_LOG_WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(in<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;<sp/>*in<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>in++)<sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*in<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>*in;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>*out<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>-<sp/>buf;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747" refid="group__libssh__misc_1gaacd48b33d4b9e0934a0e2819340aa033" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__misc_1gaacd48b33d4b9e0934a0e2819340aa033" kindref="member">ssh_tmpname</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">template</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>+<sp/>strlen(</highlight><highlight class="keyword">template</highlight><highlight class="normal">)<sp/>-<sp/>6;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>&lt;<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" kindref="member">SSH_LOG</ref>(<ref refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" kindref="member">SSH_LOG_WARNING</ref>,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>input.<sp/>Last<sp/>six<sp/>characters<sp/>of<sp/>the<sp/>input<sp/>must<sp/>be<sp/>\&apos;X\&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(<ref refid="curve25519-sha256_0dlibssh_8org_8txt_1a64e3b3da47d2dcb5585763c1a7036884" kindref="member">time</ref>(NULL));</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>win32<sp/>MAX_RAND<sp/>is<sp/>32767,<sp/>thus<sp/>we<sp/>can<sp/>not<sp/>shift<sp/>that<sp/>far,</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>otherwise<sp/>the<sp/>last<sp/>three<sp/>chars<sp/>are<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hexdigit<sp/>=<sp/>(rand()<sp/>&gt;&gt;<sp/>(i<sp/>*<sp/>2))<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hexdigit<sp/>=<sp/>(rand()<sp/>&gt;&gt;<sp/>(i<sp/>*<sp/>5))<sp/>&amp;<sp/>0x1f;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[i]<sp/>=<sp/>hexdigit<sp/>&gt;<sp/>9<sp/>?<sp/>hexdigit<sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/>10<sp/>:<sp/>hexdigit<sp/>+<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802" refid="group__libssh__misc_1ga7adc290e458af7d963eaeec0d95e1bad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__misc_1ga7adc290e458af7d963eaeec0d95e1bad" kindref="member">ssh_strreplace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="torture_8c_1acd28ae39c6440992e47d3da772c56602" kindref="member">pattern</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*replace)</highlight></codeline>
<codeline lineno="1803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src_replaced<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="torture_8c_1acd28ae39c6440992e47d3da772c56602" kindref="member">pattern</ref><sp/>==<sp/>NULL<sp/>||<sp/>replace<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(src);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>strstr(src,<sp/><ref refid="torture_8c_1acd28ae39c6440992e47d3da772c56602" kindref="member">pattern</ref>);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>p<sp/>-<sp/>src;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pattern_len<sp/>=<sp/>strlen(<ref refid="torture_8c_1acd28ae39c6440992e47d3da772c56602" kindref="member">pattern</ref>);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>replace_len<sp/>=<sp/>strlen(replace);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/>strlen(src);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len_replaced<sp/>=<sp/>len<sp/>+<sp/>replace_len<sp/>-<sp/>pattern_len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_replaced<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(len_replaced);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_replaced<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(src_replaced,<sp/>0,<sp/>len_replaced);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(src_replaced,<sp/>src,<sp/>offset);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(src_replaced<sp/>+<sp/>offset,<sp/>replace,<sp/>replace_len);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(src_replaced<sp/>+<sp/>offset<sp/>+<sp/>replace_len,<sp/>src<sp/>+<sp/>offset<sp/>+<sp/>pattern_len,<sp/>len<sp/>-<sp/>offset<sp/>-<sp/>pattern_len);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>src_replaced;<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>in<sp/>the<sp/>caller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(src);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libssh-mirror/src/misc.c"/>
  </compounddef>
</doxygen>
