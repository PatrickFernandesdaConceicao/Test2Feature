<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="sc25519_8c" kind="file" language="C++">
    <compoundname>sc25519.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="sc25519_8h" local="yes">libssh/sc25519.h</includes>
    <incdepgraph>
      <node id="11">
        <label>sys/select.h</label>
      </node>
      <node id="3">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="6">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>libssh-mirror/src/external/sc25519.c</label>
        <link refid="sc25519_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libssh/sc25519.h</label>
        <link refid="sc25519_8h"/>
      </node>
      <node id="14">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>netdb.h</label>
      </node>
      <node id="10">
        <label>sys/types.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="8">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="9">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sc25519_8c_1a748017a7a68b798f02a5e84721515182" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t m[32]</definition>
        <argsstring>[32]</argsstring>
        <name>m</name>
        <initializer>= {
    0xED, 0xD3, 0xF5, 0x5C, 0x1A, 0x63, 0x12, 0x58,
    0xD6, 0x9C, 0xF7, 0xA2, 0xDE, 0xF9, 0xDE, 0x14,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="14" column="23" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="14" bodyend="-1"/>
        <referencedby refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</referencedby>
        <referencedby refid="chacha_8h_1a632518c6f3981afe52bf1b902e731a88" compoundref="chacha_8c" startline="87" endline="216">chacha_encrypt_bytes</referencedby>
        <referencedby refid="ed25519_8c_1ab5bd77faf6dbe75acf31028b9caecce7" compoundref="ed25519_8c" startline="113" endline="174">crypto_sign_ed25519</referencedby>
        <referencedby refid="ed25519_8c_1a2afd36052d1604dbb7e6aba76b9b15c8" compoundref="ed25519_8c" startline="176" endline="222">crypto_sign_ed25519_open</referencedby>
        <referencedby refid="fe25519_8h_1af4f16bad922575d75847b5d6a7d30ad7" compoundref="fe25519_8c" startline="80" endline="97">fe25519_freeze</referencedby>
        <referencedby refid="poly1305_8c_1a1f9b7699685df465de913931d6a5c591" compoundref="poly1305_8c" startline="30" endline="156">poly1305_auth</referencedby>
        <referencedby refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" compoundref="sc25519_8c" startline="39" endline="57">reduce_add_sub</referencedby>
        <referencedby refid="group__libssh__session_1gac026b4aca2266e0f4ba013d9ff1fbeff" compoundref="dh_8c" startline="604" endline="630">ssh_dh_is_known_group</referencedby>
      </memberdef>
      <memberdef kind="variable" id="sc25519_8c_1afc04ab517a93f412f7c4d932b1fcec1f" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t mu[33]</definition>
        <argsstring>[33]</argsstring>
        <name>mu</name>
        <initializer>= {
    0x1B, 0x13, 0x2C, 0x0A, 0xA3, 0xE5, 0x9C, 0xED,
    0xA7, 0x29, 0x63, 0x08, 0x5D, 0x21, 0x06, 0x21,
    0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="21" column="23" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="21" bodyend="-1"/>
        <referencedby refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t lt</definition>
        <argsstring>(uint32_t a, uint32_t b)</argsstring>
        <name>lt</name>
        <param>
          <type>uint32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="28" column="17" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="28" bodyend="36"/>
        <references refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" compoundref="generate_8py" startline="3">generate.a</references>
        <referencedby refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</referencedby>
        <referencedby refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" compoundref="sc25519_8c" startline="39" endline="57">reduce_add_sub</referencedby>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reduce_add_sub</definition>
        <argsstring>(sc25519 *r)</argsstring>
        <name>reduce_add_sub</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="39" column="13" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="39" bodyend="57"/>
        <references refid="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" compoundref="sc25519_8c" startline="28" endline="36">lt</references>
        <references refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" compoundref="sc25519_8c" startline="14">m</references>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
        <referencedby refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</referencedby>
        <referencedby refid="sc25519_8h_1a4ba0d99b7f40f607e53d04c4eceec676" compoundref="sc25519_8c" startline="224" endline="239">sc25519_add</referencedby>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void barrett_reduce</definition>
        <argsstring>(sc25519 *r, const uint32_t x[64])</argsstring>
        <name>barrett_reduce</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>x</declname>
          <array>[64]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="60" column="13" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="60" bodyend="123"/>
        <references refid="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" compoundref="sc25519_8c" startline="28" endline="36">lt</references>
        <references refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" compoundref="sc25519_8c" startline="14">m</references>
        <references refid="sc25519_8c_1afc04ab517a93f412f7c4d932b1fcec1f" compoundref="sc25519_8c" startline="21">mu</references>
        <references refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" compoundref="sc25519_8c" startline="39" endline="57">reduce_add_sub</references>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
        <referencedby refid="sc25519_8h_1aaa822094de6e618c5f6346c0faf7270e" compoundref="sc25519_8c" startline="125" endline="138">sc25519_from32bytes</referencedby>
        <referencedby refid="sc25519_8h_1ac642ad297fbd0cd8966359cac5771e3c" compoundref="sc25519_8c" startline="149" endline="159">sc25519_from64bytes</referencedby>
        <referencedby refid="sc25519_8h_1aa7e1ad1a17b0bce8685c8fbb1e0ab96c" compoundref="sc25519_8c" startline="254" endline="277">sc25519_mul</referencedby>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1aaa822094de6e618c5f6346c0faf7270e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_from32bytes</definition>
        <argsstring>(sc25519 *r, const unsigned char x[32])</argsstring>
        <name>sc25519_from32bytes</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>x</declname>
          <array>[32]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="125" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="125" bodyend="138"/>
        <references refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1aa5ff914c87f4537525e027182052e0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shortsc25519_from16bytes</definition>
        <argsstring>(shortsc25519 *r, const unsigned char x[16])</argsstring>
        <name>shortsc25519_from16bytes</name>
        <param>
          <type><ref refid="structshortsc25519" kindref="compound">shortsc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>x</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="140" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="140" bodyend="147"/>
        <references refid="structshortsc25519_1af62c98e7baf0aaf3ae428918686da765" compoundref="sc25519_8h" startline="35">shortsc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1ac642ad297fbd0cd8966359cac5771e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_from64bytes</definition>
        <argsstring>(sc25519 *r, const unsigned char x[64])</argsstring>
        <name>sc25519_from64bytes</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>x</declname>
          <array>[64]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="149" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="149" bodyend="159"/>
        <references refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a58796c80cb2792b1e52a8a8e8bec198f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_from_shortsc</definition>
        <argsstring>(sc25519 *r, const shortsc25519 *x)</argsstring>
        <name>sc25519_from_shortsc</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structshortsc25519" kindref="compound">shortsc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="161" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="161" bodyend="171"/>
        <references refid="structshortsc25519_1af62c98e7baf0aaf3ae428918686da765" compoundref="sc25519_8h" startline="35">shortsc25519::v</references>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
        <referencedby refid="sc25519_8h_1a7f8cfe4d2fefe36395383c183941bd03" compoundref="sc25519_8c" startline="279" endline="284">sc25519_mul_shortsc</referencedby>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1ac4b110ace11694fd0188dec1149bf734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_to32bytes</definition>
        <argsstring>(unsigned char r[32], const sc25519 *x)</argsstring>
        <name>sc25519_to32bytes</name>
        <param>
          <type>unsigned char</type>
          <declname>r</declname>
          <array>[32]</array>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="173" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="173" bodyend="180"/>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1ae364a5fbf217c3e900ec37e7f19250b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sc25519_iszero_vartime</definition>
        <argsstring>(const sc25519 *x)</argsstring>
        <name>sc25519_iszero_vartime</name>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="182" column="5" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="182" bodyend="193"/>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1ac252484f13bd0e74c3b77527a611d755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sc25519_isshort_vartime</definition>
        <argsstring>(const sc25519 *x)</argsstring>
        <name>sc25519_isshort_vartime</name>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="195" column="5" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="195" bodyend="206"/>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1ac9929963bb8b5236b34ce733a5df86f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sc25519_lt_vartime</definition>
        <argsstring>(const sc25519 *x, const sc25519 *y)</argsstring>
        <name>sc25519_lt_vartime</name>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="208" column="5" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="208" bodyend="222"/>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a4ba0d99b7f40f607e53d04c4eceec676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_add</definition>
        <argsstring>(sc25519 *r, const sc25519 *x, const sc25519 *y)</argsstring>
        <name>sc25519_add</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="224" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="224" bodyend="239"/>
        <references refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" compoundref="sc25519_8c" startline="39" endline="57">reduce_add_sub</references>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a518ba7a873da00cde7855459d87b4af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_sub_nored</definition>
        <argsstring>(sc25519 *r, const sc25519 *x, const sc25519 *y)</argsstring>
        <name>sc25519_sub_nored</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="241" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="241" bodyend="252"/>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1aa7e1ad1a17b0bce8685c8fbb1e0ab96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_mul</definition>
        <argsstring>(sc25519 *r, const sc25519 *x, const sc25519 *y)</argsstring>
        <name>sc25519_mul</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="254" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="254" bodyend="277"/>
        <references refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" compoundref="sc25519_8c" startline="60" endline="123">barrett_reduce</references>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
        <referencedby refid="sc25519_8h_1a7f8cfe4d2fefe36395383c183941bd03" compoundref="sc25519_8c" startline="279" endline="284">sc25519_mul_shortsc</referencedby>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a7f8cfe4d2fefe36395383c183941bd03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_mul_shortsc</definition>
        <argsstring>(sc25519 *r, const sc25519 *x, const shortsc25519 *y)</argsstring>
        <name>sc25519_mul_shortsc</name>
        <param>
          <type><ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structshortsc25519" kindref="compound">shortsc25519</ref> *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="279" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="279" bodyend="284"/>
        <references refid="sc25519_8c_1a58796c80cb2792b1e52a8a8e8bec198f" compoundref="sc25519_8c" startline="161" endline="171">sc25519_from_shortsc</references>
        <references refid="sc25519_8c_1aa7e1ad1a17b0bce8685c8fbb1e0ab96c" compoundref="sc25519_8c" startline="254" endline="277">sc25519_mul</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a52d22fbda714e5d0eb5fe75456c2618f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_window3</definition>
        <argsstring>(signed char r[85], const sc25519 *s)</argsstring>
        <name>sc25519_window3</name>
        <param>
          <type>signed char</type>
          <declname>r</declname>
          <array>[85]</array>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="286" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="286" bodyend="321"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a0cc1b2ced4d0b2439f4bd019526d2c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_window5</definition>
        <argsstring>(signed char r[51], const sc25519 *s)</argsstring>
        <name>sc25519_window5</name>
        <param>
          <type>signed char</type>
          <declname>r</declname>
          <array>[51]</array>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="323" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="323" bodyend="358"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
      </memberdef>
      <memberdef kind="function" id="sc25519_8c_1a8e7d7873d025bef7933c4958d3b9c5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc25519_2interleave2</definition>
        <argsstring>(unsigned char r[127], const sc25519 *s1, const sc25519 *s2)</argsstring>
        <name>sc25519_2interleave2</name>
        <param>
          <type>unsigned char</type>
          <declname>r</declname>
          <array>[127]</array>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="structsc25519" kindref="compound">sc25519</ref> *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/external/sc25519.c" line="360" column="6" bodyfile="libssh-mirror/src/external/sc25519.c" bodystart="360" bodyend="375"/>
        <references refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" compoundref="sc25519_8h" startline="31">sc25519::v</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Public<sp/>Domain,<sp/>Authors:<sp/>Daniel<sp/>J.<sp/>Bernstein,<sp/>Niels<sp/>Duif,<sp/>Tanja<sp/>Lange,</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Peter<sp/>Schwabe,<sp/>Bo-Yin<sp/>Yang.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copied<sp/>from<sp/>supercop-20130419/crypto_sign/ed25519/ref/sc25519.c</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="priv_8h" kindref="compound">libssh/priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sc25519_8h" kindref="compound">libssh/sc25519.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*Arithmetic<sp/>modulo<sp/>the<sp/>group<sp/>order<sp/>m<sp/>=<sp/>2^252<sp/>+<sp/><sp/>27742317777372353535851937790883648493<sp/>=<sp/>7237005577332262213973186563042994240857116359379907606001950938285454250989<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" kindref="member">m</ref>[32]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>0xED,<sp/>0xD3,<sp/>0xF5,<sp/>0x5C,<sp/>0x1A,<sp/>0x63,<sp/>0x12,<sp/>0x58,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>0xD6,<sp/>0x9C,<sp/>0xF7,<sp/>0xA2,<sp/>0xDE,<sp/>0xF9,<sp/>0xDE,<sp/>0x14,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x10</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="sc25519_8c_1afc04ab517a93f412f7c4d932b1fcec1f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="sc25519_8c_1afc04ab517a93f412f7c4d932b1fcec1f" kindref="member">mu</ref>[33]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>0x1B,<sp/>0x13,<sp/>0x2C,<sp/>0x0A,<sp/>0xA3,<sp/>0xE5,<sp/>0x9C,<sp/>0xED,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>0xA7,<sp/>0x29,<sp/>0x63,<sp/>0x08,<sp/>0x5D,<sp/>0x21,<sp/>0x06,<sp/>0x21,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>0xEB,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0x0F</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" kindref="member">lt</ref>(uint32_t<sp/><ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref>,uint32_t<sp/>b)<sp/></highlight><highlight class="comment">/*<sp/>16-bit<sp/>inputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><ref refid="namespacegenerate_1a3bb1e673073a90dc0b8d1659852706e3" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>b;<sp/></highlight><highlight class="comment">/*<sp/>0..65535:<sp/>no;<sp/>4294901761..4294967295:<sp/>yes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>&gt;&gt;=<sp/>31;<sp/></highlight><highlight class="comment">/*<sp/>0:<sp/>no;<sp/>1:<sp/>yes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reduce<sp/>coefficients<sp/>of<sp/>r<sp/>before<sp/>calling<sp/>reduce_add_sub<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" kindref="member">reduce_add_sub</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>b;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mask;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>t[32];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pb<sp/>+=<sp/><ref refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" kindref="member">m</ref>[i];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" kindref="member">lt</ref>(r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i],pb);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]-pb+(b&lt;&lt;8);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pb<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>b<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>^=<sp/>mask<sp/>&amp;<sp/>(r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>^<sp/>t[i]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reduce<sp/>coefficients<sp/>of<sp/>x<sp/>before<sp/>calling<sp/>barrett_reduce<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" kindref="member">barrett_reduce</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>x[64])</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>HAC,<sp/>Alg.<sp/>14.42<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>q2[66];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*q3<sp/>=<sp/>q2<sp/>+<sp/>33;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>r1[33];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>r2[33];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>carry;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>b;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>66;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q2[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>33;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>33;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>33;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>j<sp/>&gt;=<sp/>31)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q2[i+j]<sp/>+=<sp/><ref refid="sc25519_8c_1afc04ab517a93f412f7c4d932b1fcec1f" kindref="member">mu</ref>[i]*x[j+31];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>q2[31]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>q2[32]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>q2[32]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>q2[33]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>33;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1[i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>33;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>j<sp/>&lt;<sp/>33)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2[i+j]<sp/>+=<sp/><ref refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" kindref="member">m</ref>[i]*q3[j];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>r2[i]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2[i+1]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2[i]<sp/>&amp;=<sp/>0xff;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pb<sp/>+=<sp/>r2[i];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="sc25519_8c_1a5c294bce7dcb3f9a60bff0851d7a9172" kindref="member">lt</ref>(r1[i],pb);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>=<sp/>r1[i]-pb+(b&lt;&lt;8);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pb<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Can<sp/>it<sp/>really<sp/>happen<sp/>that<sp/>r&lt;0?,<sp/>See<sp/>HAC,<sp/>Alg<sp/>14.42,<sp/>Step<sp/>3</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>so:<sp/>Handle<sp/><sp/>it<sp/>here!</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" kindref="member">reduce_add_sub</ref>(r);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" kindref="member">reduce_add_sub</ref>(r);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="sc25519_8h_1aaa822094de6e618c5f6346c0faf7270e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1aaa822094de6e618c5f6346c0faf7270e" kindref="member">sc25519_from32bytes</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x[32])</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t[64];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>32;<sp/>i<sp/>&lt;<sp/>64;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" kindref="member">barrett_reduce</ref>(r,<sp/>t);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="sc25519_8h_1aa5ff914c87f4537525e027182052e0e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1aa5ff914c87f4537525e027182052e0e1" kindref="member">shortsc25519_from16bytes</ref>(<ref refid="structshortsc25519" kindref="compound">shortsc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x[16])</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structshortsc25519_1af62c98e7baf0aaf3ae428918686da765" kindref="member">v</ref>[i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="sc25519_8h_1ac642ad297fbd0cd8966359cac5771e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1ac642ad297fbd0cd8966359cac5771e3c" kindref="member">sc25519_from64bytes</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x[64])</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t[64];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>64;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" kindref="member">barrett_reduce</ref>(r,<sp/>t);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="sc25519_8h_1a58796c80cb2792b1e52a8a8e8bec198f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a58796c80cb2792b1e52a8a8e8bec198f" kindref="member">sc25519_from_shortsc</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshortsc25519" kindref="compound">shortsc25519</ref><sp/>*x)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>=<sp/>x-&gt;<ref refid="structshortsc25519_1af62c98e7baf0aaf3ae428918686da765" kindref="member">v</ref>[i];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[16+i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="sc25519_8h_1ac4b110ace11694fd0188dec1149bf734" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1ac4b110ace11694fd0188dec1149bf734" kindref="member">sc25519_to32bytes</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>r[32],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="sc25519_8h_1ae364a5fbf217c3e900ec37e7f19250b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1ae364a5fbf217c3e900ec37e7f19250b8" kindref="member">sc25519_iszero_vartime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="sc25519_8h_1ac252484f13bd0e74c3b77527a611d755" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1ac252484f13bd0e74c3b77527a611d755" kindref="member">sc25519_isshort_vartime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>31;<sp/>i<sp/>&gt;<sp/>15;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="sc25519_8h_1ac9929963bb8b5236b34ce733a5df86f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1ac9929963bb8b5236b34ce733a5df86f3" kindref="member">sc25519_lt_vartime</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*y)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>31;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&lt;<sp/>y-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;<sp/>y-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="sc25519_8h_1a4ba0d99b7f40f607e53d04c4eceec676" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a4ba0d99b7f40f607e53d04c4eceec676" kindref="member">sc25519_add</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*y)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i,<sp/>carry;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>=<sp/>x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>+<sp/>y-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;i<sp/>&lt;<sp/>31;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i+1]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&amp;=<sp/>0xff;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1aeed761b9903a6e8fd1522df0c859eb67" kindref="member">reduce_add_sub</ref>(r);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="sc25519_8h_1a518ba7a873da00cde7855459d87b4af5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a518ba7a873da00cde7855459d87b4af5" kindref="member">sc25519_sub_nored</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*y)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>-<sp/>y-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>=<sp/>t<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(t<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="sc25519_8h_1aa7e1ad1a17b0bce8685c8fbb1e0ab96c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1aa7e1ad1a17b0bce8685c8fbb1e0ab96c" kindref="member">sc25519_mul</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*y)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i,j,carry;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t[64];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>64;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>32;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i+j]<sp/>+=<sp/>x-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>*<sp/>y-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[j];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reduce<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>63;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>t[i]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i+1]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[i]<sp/>&amp;=<sp/>0xff;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1ae11bf49e4c629e80e3faadf55301e165" kindref="member">barrett_reduce</ref>(r,<sp/>t);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="sc25519_8h_1a7f8cfe4d2fefe36395383c183941bd03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a7f8cfe4d2fefe36395383c183941bd03" kindref="member">sc25519_mul_shortsc</ref>(<ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshortsc25519" kindref="compound">shortsc25519</ref><sp/>*y)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>t;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1a58796c80cb2792b1e52a8a8e8bec198f" kindref="member">sc25519_from_shortsc</ref>(&amp;t,<sp/>y);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sc25519_8c_1aa7e1ad1a17b0bce8685c8fbb1e0ab96c" kindref="member">sc25519_mul</ref>(r,<sp/>x,<sp/>&amp;t);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="sc25519_8h_1a52d22fbda714e5d0eb5fe75456c2618f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a52d22fbda714e5d0eb5fe75456c2618f" kindref="member">sc25519_window3</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>r[85],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>carry;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+0]<sp/><sp/>=<sp/><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+1]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+0]<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+2]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+0]<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+2]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&lt;&lt;<sp/>2)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+3]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+4]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+5]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+5]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+2]<sp/>&lt;&lt;<sp/>1)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+6]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+2]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+7]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+2]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+0]<sp/><sp/>=<sp/><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+1]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+0]<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+2]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+0]<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+2]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&lt;&lt;<sp/>2)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+3]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+4]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[3*i+1]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Making<sp/>it<sp/>signed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>84;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i+1]<sp/>+=<sp/>r[i]<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>&amp;=<sp/>7;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>r[i]<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>-=<sp/>carry&lt;&lt;3;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>r[84]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="sc25519_8h_1a0cc1b2ced4d0b2439f4bd019526d2c2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a0cc1b2ced4d0b2439f4bd019526d2c2a" kindref="member">sc25519_window5</ref>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>r[51],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>carry;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+0]<sp/><sp/>=<sp/><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+1]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+0]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+1]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+1]<sp/>&lt;&lt;<sp/>3)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+2]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+1]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+3]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+1]<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+3]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+2]<sp/>&lt;&lt;<sp/>1)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+4]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+2]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+4]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+3]<sp/>&lt;&lt;<sp/>4)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+5]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+3]<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+6]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+3]<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+6]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+4]<sp/>&lt;&lt;<sp/>2)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[8*i+7]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+4]<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+0]<sp/><sp/>=<sp/><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+1]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+0]<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+1]<sp/>^=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+1]<sp/>&lt;&lt;<sp/>3)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>r[8*i+2]<sp/><sp/>=<sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;v[5*i+1]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>31;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Making<sp/>it<sp/>signed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>50;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i+1]<sp/>+=<sp/>r[i]<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>&amp;=<sp/>31;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carry<sp/>=<sp/>r[i]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>-=<sp/>carry&lt;&lt;5;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>r[50]<sp/>+=<sp/>carry;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="sc25519_8h_1a8e7d7873d025bef7933c4958d3b9c5a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sc25519_8c_1a8e7d7873d025bef7933c4958d3b9c5a4" kindref="member">sc25519_2interleave2</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>r[127],</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*s1,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc25519" kindref="compound">sc25519</ref><sp/>*s2)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>31;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[4*i]<sp/><sp/><sp/>=<sp/>(<sp/>s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>3)<sp/>^<sp/>((<sp/>s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[4*i+1]<sp/>=<sp/>((s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3)<sp/>^<sp/>(((s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[4*i+2]<sp/>=<sp/>((s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3)<sp/>^<sp/>(((s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[4*i+3]<sp/>=<sp/>((s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3)<sp/>^<sp/>(((s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[i]<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>r[124]<sp/>=<sp/>(<sp/>s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[31]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>3)<sp/>^<sp/>((<sp/>s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[31]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>r[125]<sp/>=<sp/>((s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[31]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3)<sp/>^<sp/>(((s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[31]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>r[126]<sp/>=<sp/>((s1-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[31]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3)<sp/>^<sp/>(((s2-&gt;<ref refid="structsc25519_1ae5c1cadd85addaa1cd001d1f32553fa5" kindref="member">v</ref>[31]<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="libssh-mirror/src/external/sc25519.c"/>
  </compounddef>
</doxygen>
