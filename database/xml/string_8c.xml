<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="string_8c" kind="file" language="C++">
    <compoundname>string.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="string_8h" local="yes">libssh/string.h</includes>
    <incdepgraph>
      <node id="15">
        <label>sys/select.h</label>
      </node>
      <node id="5">
        <label>netinet/in.h</label>
      </node>
      <node id="6">
        <label>arpa/inet.h</label>
      </node>
      <node id="7">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="10">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="18">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>netdb.h</label>
      </node>
      <node id="4">
        <label>limits.h</label>
      </node>
      <node id="14">
        <label>sys/types.h</label>
      </node>
      <node id="11">
        <label>unistd.h</label>
      </node>
      <node id="1">
        <label>libssh-mirror/src/string.c</label>
        <link refid="string_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="13">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="string_8c_1a1512d14885f6a32c59c3f521332b4e8a" prot="public" static="no">
        <name>STRING_SIZE_MAX</name>
        <initializer>0x10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="38" column="9" bodyfile="libssh-mirror/src/string.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
        <definition>struct ssh_string_struct* ssh_string_new</definition>
        <argsstring>(size_t size)</argsstring>
        <name>ssh_string_new</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Create a new SSH String object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The newly allocated string, NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="56" column="24" bodyfile="libssh-mirror/src/string.c" bodystart="56" bodyend="74"/>
        <references refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" compoundref="string_8h" startline="31">ssh_string_struct::data</references>
        <references refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" compoundref="string_8h" startline="30">ssh_string_struct::size</references>
        <references refid="string_8c_1a1512d14885f6a32c59c3f521332b4e8a" compoundref="string_8c" startline="38">STRING_SIZE_MAX</references>
        <referencedby refid="pki__crypto_8c_1a817708f53a64f50b665d647b6d9745c2" compoundref="pki__crypto_8c" startline="1392" endline="1471">pki_dsa_signature_to_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1a3f8e0c3d950862426b9900704ad64a28" compoundref="pki__crypto_8c" startline="1473" endline="1554">pki_ecdsa_signature_to_blob</referencedby>
        <referencedby refid="pki__priv_8h_1af11148609adfe5bb7d08676859891ee1" compoundref="pki__ed25519__common_8c" startline="214" endline="245">pki_ed25519_signature_to_blob</referencedby>
        <referencedby refid="pki__priv_8h_1a2f0ca491f398b914b0125e6be5c59d97" compoundref="pki__crypto_8c" startline="726" endline="852">pki_private_key_to_pem</referencedby>
        <referencedby refid="pki__priv_8h_1aa2d53615fe67402faa649f5cb6160e91" compoundref="pki__crypto_8c" startline="1182" endline="1390">pki_publickey_to_blob</referencedby>
        <referencedby refid="pki__priv_8h_1a9d88e1b6e93f81dc11ebded5384646e3" compoundref="pki__crypto_8c" startline="2139" endline="2279">pki_sign_data</referencedby>
        <referencedby refid="pki__crypto_8c_1a0f1df403c735a5e15982a028f1540024" compoundref="pki__crypto_8c" startline="1656" endline="1773">pki_signature_from_dsa_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1ae3a66a820cd45b733f5ff75f898a0f33" compoundref="pki__crypto_8c" startline="1775" endline="1911">pki_signature_from_ecdsa_blob</referencedby>
        <referencedby refid="pki__crypto_8c_1ad2beac840c71e6ffb9c0dfede0704905" compoundref="pki__crypto_8c" startline="1587" endline="1654">pki_signature_from_rsa_blob</referencedby>
        <referencedby refid="group__libssh__sftp_1gab90f7a4e60c2769b3f53a3111e126da1" compoundref="sftpserver_8c" startline="483" endline="515">sftp_handle_alloc</referencedby>
        <referencedby refid="group__libssh__buffer_1ga3976e75d6d9c08438a3be49164ec64ed" compoundref="buffer_8c" startline="762" endline="792">ssh_buffer_get_ssh_string</referencedby>
        <referencedby refid="gssapi_8h_1ae56cb90fad3c272362eee4c18531a65f" compoundref="gssapi_8c" startline="714" endline="798">ssh_gssapi_auth_mic</referencedby>
        <referencedby refid="bignum_8h_1a40cd92d707d2f965c852f218406420c2" compoundref="bignum_8c" startline="30" endline="64">ssh_make_bignum_string</referencedby>
        <referencedby refid="group__libssh__pki_1gab366c5e63b468061d201397939bc6a82" compoundref="pki_8c" startline="2511" endline="2582">ssh_pki_do_sign</referencedby>
        <referencedby refid="group__libssh__pki_1ga030b5e767d97bd26053a5644b083c133" compoundref="pki_8c" startline="2585" endline="2633">ssh_pki_do_sign_agent</referencedby>
        <referencedby refid="group__libssh__pki_1ga302c3e762e3268e3971df86784688013" compoundref="pki_8c" startline="2185" endline="2239">ssh_pki_export_signature_blob</referencedby>
        <referencedby refid="pki__priv_8h_1a0a1b01b666de3e4f433660761c7658ad" compoundref="pki__container__openssh_8c" startline="534" endline="722">ssh_pki_openssh_privkey_export</referencedby>
        <referencedby refid="group__libssh__string_1gac71b531c19ead0990fd23d0b28d92e02" compoundref="string_8c" startline="221" endline="242">ssh_string_copy</referencedby>
        <referencedby refid="group__libssh__string_1ga4154ea16ba2dc5bd5dcb2579686aaac2" compoundref="string_8c" startline="108" endline="127">ssh_string_from_char</referencedby>
        <referencedby refid="legacy_8h_1a58a1954cdc9fe564300194367a1c14f4" compoundref="legacy_8c" startline="337" endline="339">string_new</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1af1e2eec9a6e622023a0ecd76a8594d0a" compoundref="torture__pki__ed25519_8c" startline="771" endline="823">torture_pki_ed25519_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1a7400cc5f396c94ebac144ed695d14b1c" compoundref="torture__pki__ed25519_8c" startline="825" endline="870">torture_pki_ed25519_verify_bad</referencedby>
        <referencedby refid="torture__session__keys_8c_1aac6afef6791f64ad36bd3de386fc33b2" compoundref="torture__session__keys_8c" startline="65" endline="85">torture_session_keys</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gad5626768334f4837c4a31e5b4a68d130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_string_fill</definition>
        <argsstring>(struct ssh_string_struct *s, const void *data, size_t len)</argsstring>
        <name>ssh_string_fill</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Fill a string with given data. The string should be big enough. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>An allocated string to fill with data.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to fill the string with.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="87" column="5" bodyfile="libssh-mirror/src/string.c" bodystart="87" bodyend="96"/>
        <references refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" compoundref="string_8h" startline="31">ssh_string_struct::data</references>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="136" endline="149">ssh_string_len</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1ga4154ea16ba2dc5bd5dcb2579686aaac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
        <definition>struct ssh_string_struct* ssh_string_from_char</definition>
        <argsstring>(const char *what)</argsstring>
        <name>ssh_string_from_char</name>
        <param>
          <type>const char *</type>
          <declname>what</declname>
        </param>
        <briefdescription>
<para>Create a ssh string using a C string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">what</parametername>
</parameternamelist>
<parameterdescription>
<para>The source 0-terminated C string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The newly allocated string, NULL on error with errno set.</para>
</simplesect>
<simplesect kind="note"><para>The nul byte is not copied nor counted in the ouput string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="108" column="24" bodyfile="libssh-mirror/src/string.c" bodystart="108" bodyend="127"/>
        <references refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" compoundref="string_8h" startline="31">ssh_string_struct::data</references>
        <references refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" compoundref="string_8c" startline="56" endline="74">ssh_string_new</references>
        <referencedby refid="group__libssh__pki_1ga129b5d5a3dcdb907c9ccedd838e15caf" compoundref="pki_8c" startline="1460" endline="1546">pki_import_cert_buffer</referencedby>
        <referencedby refid="pki__priv_8h_1aa2d53615fe67402faa649f5cb6160e91" compoundref="pki__crypto_8c" startline="1182" endline="1390">pki_publickey_to_blob</referencedby>
        <referencedby refid="group__libssh__sftp_1ga3371e02cde0962cef0eaf09c95e9f0f9" compoundref="sftpserver_8c" startline="289" endline="319">sftp_reply_name</referencedby>
        <referencedby refid="group__libssh__sftp_1ga21a9b645e22ea8c763587032008351e4" compoundref="sftpserver_8c" startline="359" endline="395">sftp_reply_names_add</referencedby>
        <referencedby refid="group__libssh__sftp_1ga1c024542ae420f85bc146c20c19bedda" compoundref="sftpserver_8c" startline="425" endline="455">sftp_reply_status</referencedby>
        <referencedby refid="group__libssh__server_1ga98321ead09cda145a08603d481a62a9e" compoundref="server_8c" startline="1023" endline="1045">ssh_message_auth_reply_pk_ok_simple</referencedby>
        <referencedby refid="group__libssh__pki_1ga302c3e762e3268e3971df86784688013" compoundref="pki_8c" startline="2185" endline="2239">ssh_pki_export_signature_blob</referencedby>
        <referencedby refid="kex_8h_1a6c4425f4b80fc393d0c71ef488c240ba" compoundref="kex_8c" startline="805" endline="861">ssh_send_kex</referencedby>
        <referencedby refid="legacy_8h_1a07c0c716189b81c4f2437488dd28c56d" compoundref="legacy_8c" startline="329" endline="331">string_from_char</referencedby>
        <referencedby refid="torture__threads__buffer_8c_1a2f29726eaa600a181d39bdc877fdee23" compoundref="torture__threads__buffer_8c" startline="270" endline="324">thread_ssh_buffer_add_format</referencedby>
        <referencedby refid="torture__buffer_8c_1aa5cce47bb186a19d068d8ae76bd83acd" compoundref="torture__buffer_8c" startline="136" endline="165">torture_ssh_buffer_add_format</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ssh_string_len</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_len</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Return the size of a SSH string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>The the input SSH string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size of the content of the string, 0 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="136" column="8" bodyfile="libssh-mirror/src/string.c" bodystart="136" bodyend="149"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" compoundref="string_8h" startline="30">ssh_string_struct::size</references>
        <references refid="string_8c_1a1512d14885f6a32c59c3f521332b4e8a" compoundref="string_8c" startline="38">STRING_SIZE_MAX</references>
        <referencedby refid="group__libssh__string_1gaca1c58e13e7bdb72ea8410592fa0cbf6" compoundref="string_8c" startline="249" endline="255">ssh_string_burn</referencedby>
        <referencedby refid="group__libssh__string_1gac71b531c19ead0990fd23d0b28d92e02" compoundref="string_8c" startline="221" endline="242">ssh_string_copy</referencedby>
        <referencedby refid="group__libssh__string_1gad5626768334f4837c4a31e5b4a68d130" compoundref="string_8c" startline="87" endline="96">ssh_string_fill</referencedby>
        <referencedby refid="group__libssh__string_1gaf867504fb528c32bf9e5e1459321cf59" compoundref="string_8c" startline="160" endline="168">ssh_string_get_char</referencedby>
        <referencedby refid="group__libssh__string_1ga65cbd5f2c5f02599c1c285efd1f06351" compoundref="string_8c" startline="181" endline="202">ssh_string_to_char</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gaf867504fb528c32bf9e5e1459321cf59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_string_get_char</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_get_char</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Get the the string as a C nul-terminated string. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only available as long as the SSH string exists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH string to get the C string from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The char pointer, NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="160" column="12" bodyfile="libssh-mirror/src/string.c" bodystart="160" bodyend="168"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="136" endline="149">ssh_string_len</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1ga65cbd5f2c5f02599c1c285efd1f06351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_string_to_char</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_to_char</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Convert a SSH string to a C nul-terminated string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH input string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An allocated string pointer, NULL on error with errno set.</para>
</simplesect>
<simplesect kind="note"><para>If the input SSH string contains zeroes, some parts of the output string may not be readable with regular libc functions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="181" column="6" bodyfile="libssh-mirror/src/string.c" bodystart="181" bodyend="202"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="136" endline="149">ssh_string_len</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_string_free_char</definition>
        <argsstring>(char *s)</argsstring>
        <name>ssh_string_free_char</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Deallocate a char string object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="209" column="6" bodyfile="libssh-mirror/src/string.c" bodystart="209" bodyend="211"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gac71b531c19ead0990fd23d0b28d92e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
        <definition>struct ssh_string_struct* ssh_string_copy</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_copy</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Copy a string, return a newly allocated string. The caller has to free the string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to copy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly allocated copy of the string, NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="221" column="24" bodyfile="libssh-mirror/src/string.c" bodystart="221" bodyend="242"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="136" endline="149">ssh_string_len</references>
        <references refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" compoundref="string_8c" startline="56" endline="74">ssh_string_new</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gaca1c58e13e7bdb72ea8410592fa0cbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_string_burn</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_burn</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Destroy the data in a string so it couldn&apos;t appear in a core dump. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to burn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="249" column="6" bodyfile="libssh-mirror/src/string.c" bodystart="249" bodyend="255"/>
        <references refid="group__libssh__misc_1ga51869b401cb0f3e711527bc9a730fbff" compoundref="misc_8c" startline="1461" endline="1474">explicit_bzero</references>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="136" endline="149">ssh_string_len</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gaf01673d22adbff92c88bcb6e30946ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ssh_string_data</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_data</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Get the payload of the string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to get the data from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return the data of the string or NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="264" column="6" bodyfile="libssh-mirror/src/string.c" bodystart="264" bodyend="270"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__string_1gacd9c4eb69f7ecfdcf709deb8dde6a5a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_string_free</definition>
        <argsstring>(struct ssh_string_struct *s)</argsstring>
        <name>ssh_string_free</name>
        <param>
          <type>struct <ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Deallocate a SSH string object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH string to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/src/string.c" line="277" column="6" bodyfile="libssh-mirror/src/string.c" bodystart="277" bodyend="279"/>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>string.c<sp/>-<sp/>ssh<sp/>string<sp/>functions</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>SSH<sp/>Library</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2008<sp/>by<sp/>Aris<sp/>Adamantiadis</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>the<sp/>SSH<sp/>Library;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="priv_8h" kindref="compound">libssh/priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string_8h" kindref="compound">libssh/string.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>String<sp/>maximum<sp/>size<sp/>is<sp/>256M<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="string_8c_1a1512d14885f6a32c59c3f521332b4e8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING_SIZE_MAX<sp/>0x10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" kindref="member">ssh_string_new</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref><sp/>&gt;<sp/><ref refid="string_8c_1a1512d14885f6a32c59c3f521332b4e8a" kindref="member">STRING_SIZE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref>)<sp/>+<sp/><ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>str-&gt;<ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref><sp/>=<sp/>htonl(<ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>str-&gt;<ref refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" kindref="member">data</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__libssh__string_1gad5626768334f4837c4a31e5b4a68d130" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__string_1gad5626768334f4837c4a31e5b4a68d130" kindref="member">ssh_string_fill</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL)<sp/>||<sp/>(<ref refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" kindref="member">data</ref><sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(len<sp/>==<sp/>0)<sp/>||<sp/>(len<sp/>&gt;<sp/><ref refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" kindref="member">ssh_string_len</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data,<sp/><ref refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" kindref="member">data</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__libssh__string_1ga4154ea16ba2dc5bd5dcb2579686aaac2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="group__libssh__string_1ga4154ea16ba2dc5bd5dcb2579686aaac2" kindref="member">ssh_string_from_char</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(what<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>strlen(what);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/><ref refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" kindref="member">ssh_string_new</ref>(len);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>memcpy(ptr-&gt;<ref refid="structssh__string__struct_1ac426a8994c89f28099681cff703b33d8" kindref="member">data</ref>,<sp/>what,<sp/>len);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" kindref="member">ssh_string_len</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref><sp/>=<sp/>ntohl(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;size);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref><sp/>&lt;=<sp/><ref refid="string_8c_1a1512d14885f6a32c59c3f521332b4e8a" kindref="member">STRING_SIZE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct_1af24fdc7ed311a959c67ee9123f3fa8b4" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__libssh__string_1gaf867504fb528c32bf9e5e1459321cf59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__string_1gaf867504fb528c32bf9e5e1459321cf59" kindref="member">ssh_string_get_char</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data[<ref refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" kindref="member">ssh_string_len</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__libssh__string_1ga65cbd5f2c5f02599c1c285efd1f06351" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__string_1ga65cbd5f2c5f02599c1c285efd1f06351" kindref="member">ssh_string_to_char</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/><ref refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" kindref="member">ssh_string_len</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>+<sp/>1<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>malloc(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>memcpy(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data,<sp/>len);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" kindref="member">ssh_string_free_char</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="group__libssh__string_1gac71b531c19ead0990fd23d0b28d92e02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="group__libssh__string_1gac71b531c19ead0990fd23d0b28d92e02" kindref="member">ssh_string_copy</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/><ref refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" kindref="member">ssh_string_len</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" kindref="member">ssh_string_new</ref>(len);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>memcpy(new-&gt;data,<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data,<sp/>len);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group__libssh__string_1gaca1c58e13e7bdb72ea8410592fa0cbf6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__string_1gaca1c58e13e7bdb72ea8410592fa0cbf6" kindref="member">ssh_string_burn</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1ga51869b401cb0f3e711527bc9a730fbff" kindref="member">explicit_bzero</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data,<sp/><ref refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" kindref="member">ssh_string_len</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>));</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="group__libssh__string_1gaf01673d22adbff92c88bcb6e30946ea6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__string_1gaf01673d22adbff92c88bcb6e30946ea6" kindref="member">ssh_string_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>-&gt;data;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="group__libssh__string_1gacd9c4eb69f7ecfdcf709deb8dde6a5a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__string_1gacd9c4eb69f7ecfdcf709deb8dde6a5a8" kindref="member">ssh_string_free</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__string__struct" kindref="compound">ssh_string_struct</ref><sp/>*<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libssh-mirror/src/string.c"/>
  </compounddef>
</doxygen>
