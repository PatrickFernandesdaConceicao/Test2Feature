<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classssh_1_1Session" kind="class" language="C++" prot="public">
    <compoundname>ssh::Session</compoundname>
    <includes refid="libsshpp_8hpp" local="no">libsshpp.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classssh_1_1Session_1ac47342240f21ce36f47485e4ab41a10d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Channel</definition>
        <argsstring></argsstring>
        <name>Channel</name>
        <param>
          <type><ref refid="classssh_1_1Channel" kindref="compound">Channel</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="127" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="127" bodyend="-1"/>
        <referencedby refid="classssh_1_1Session_1a6cd5318d71a3850a87b87bdfd89a5983" compoundref="libsshpp_8hpp" startline="672" endline="678">acceptForward</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" prot="protected" static="no" mutable="no">
        <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
        <definition>ssh_session ssh::Session::c_session</definition>
        <argsstring></argsstring>
        <name>c_session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="444" column="15" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="444" bodyend="-1"/>
        <referencedby refid="classssh_1_1Session_1a6cd5318d71a3850a87b87bdfd89a5983" compoundref="libsshpp_8hpp" startline="672" endline="678">acceptForward</referencedby>
        <referencedby refid="classssh_1_1Session_1a70f29e5f12fea442dfd0bff3ec51d3a8" compoundref="libsshpp_8hpp" startline="426" endline="430">cancelForward</referencedby>
        <referencedby refid="classssh_1_1Session_1a6d0498cf7e029e6beadb8b5f591ec472" compoundref="libsshpp_8hpp" startline="170" endline="174">connect</referencedby>
        <referencedby refid="classssh_1_1Session_1aaa6972fe2757370a0cf2b90576eb6edc" compoundref="libsshpp_8hpp" startline="301" endline="303">disconnect</referencedby>
        <referencedby refid="classssh_1_1Session_1a08d70b5cdb5bd1a2a8f5f9ebbdf67b3b" compoundref="libsshpp_8hpp" startline="293" endline="297">getAuthList</referencedby>
        <referencedby refid="classssh_1_1Session_1ad48854aa3c5a7bd564ea487c1afddf2b" compoundref="libsshpp_8hpp" startline="439" endline="441">getCSession</referencedby>
        <referencedby refid="classssh_1_1Session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" compoundref="libsshpp_8hpp" startline="308" endline="311">getDisconnectMessage</referencedby>
        <referencedby refid="classssh_1_1Session_1ab935e41beab3db33bccf5dd8f23a6886" compoundref="libsshpp_8hpp" startline="315" endline="317">getError</referencedby>
        <referencedby refid="classssh_1_1Session_1aa48f704e1f62335eef378efef5215257" compoundref="libsshpp_8hpp" startline="321" endline="323">getErrorCode</referencedby>
        <referencedby refid="classssh_1_1Session_1a9969ed8dcaccef321ac519271758b406" compoundref="libsshpp_8hpp" startline="337" endline="345">getIssueBanner</referencedby>
        <referencedby refid="classssh_1_1Session_1a9e0af590062a73a0927bb513bc19dd8e" compoundref="libsshpp_8hpp" startline="350" endline="352">getOpensshVersion</referencedby>
        <referencedby refid="classssh_1_1Session_1a30c021f6138124d785f151583e5656bd" compoundref="libsshpp_8hpp" startline="330" endline="332">getSocket</referencedby>
        <referencedby refid="classssh_1_1Session_1a5d7b4df57ed97f2592893b0493336b88" compoundref="libsshpp_8hpp" startline="357" endline="359">getVersion</referencedby>
        <referencedby refid="classssh_1_1Session_1a0b7055cb236685a9c18cb79c5492b40f" compoundref="libsshpp_8hpp" startline="366" endline="370">isServerKnown</referencedby>
        <referencedby refid="classssh_1_1Session_1aa4ab8dfd40f13bb72ef8ef65a48be861" compoundref="libsshpp_8hpp" startline="432" endline="437">listenForward</referencedby>
        <referencedby refid="classssh_1_1Session_1ac95e750dc93d77fe463cbd054a87934a" compoundref="libsshpp_8hpp" startline="385" endline="388">optionsCopy</referencedby>
        <referencedby refid="classssh_1_1Session_1af19a7b347ddc520d027d94c4d8073aaa" compoundref="libsshpp_8hpp" startline="394" endline="397">optionsParseConfig</referencedby>
        <referencedby refid="classssh_1_1Session_1a19f9c19d925bb991401fe4503305fea1" compoundref="libsshpp_8hpp" startline="129" endline="131">Session</referencedby>
        <referencedby refid="classssh_1_1Session_1a5b1840081e321b82cd19af1b3f98e069" compoundref="libsshpp_8hpp" startline="142" endline="145">setOption</referencedby>
        <referencedby refid="classssh_1_1Session_1a15b2a58607cc42628e17c94c8f7eb793" compoundref="libsshpp_8hpp" startline="401" endline="403">silentDisconnect</referencedby>
        <referencedby refid="classssh_1_1Session_1a0ea9676a938f2410177b2bfb3e8bf427" compoundref="libsshpp_8hpp" startline="214" endline="218">userauthKbdint</referencedby>
        <referencedby refid="classssh_1_1Session_1a0bf86917b042bd96896768fe089c3f39" compoundref="libsshpp_8hpp" startline="224" endline="226">userauthKbdintGetNPrompts</referencedby>
        <referencedby refid="classssh_1_1Session_1a71ba225d12071f5290b49f8ac24c0f2d" compoundref="libsshpp_8hpp" startline="244" endline="249">userauthKbdintSetAnswer</referencedby>
        <referencedby refid="classssh_1_1Session_1a988398835fc131b0eb5a83a4adaec532" compoundref="libsshpp_8hpp" startline="192" endline="196">userauthNone</referencedby>
        <referencedby refid="classssh_1_1Session_1ac2d10826877bec6598961614eb62f0f7" compoundref="libsshpp_8hpp" startline="259" endline="263">userauthPassword</referencedby>
        <referencedby refid="classssh_1_1Session_1a6dd49ee38bf24c31c5e0e28dc2af07b7" compoundref="libsshpp_8hpp" startline="282" endline="286">userauthPublickey</referencedby>
        <referencedby refid="classssh_1_1Session_1a651141f9bcf5792644f6d411ab2cc0c5" compoundref="libsshpp_8hpp" startline="180" endline="184">userauthPublickeyAuto</referencedby>
        <referencedby refid="classssh_1_1Session_1afb635d7f84b000bbabb09a86ad5ad074" compoundref="libsshpp_8hpp" startline="271" endline="275">userauthTryPublickey</referencedby>
        <referencedby refid="classssh_1_1Session_1ae55f054025dcbe4ceeaec87c9ca064c7" compoundref="libsshpp_8hpp" startline="409" endline="413">writeKnownhost</referencedby>
        <referencedby refid="classssh_1_1Session_1ae07d004bb4cee8a4c1a73f829363893d" compoundref="libsshpp_8hpp" startline="132" endline="135">~Session</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classssh_1_1Session_1a19f9c19d925bb991401fe4503305fea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Session::Session</definition>
        <argsstring>()</argsstring>
        <name>Session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="129" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="129" bodyend="131"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1ae07d004bb4cee8a4c1a73f829363893d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Session::~Session</definition>
        <argsstring>()</argsstring>
        <name>~Session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="132" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="132" bodyend="135"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a5b1840081e321b82cd19af1b3f98e069" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::setOption</definition>
        <argsstring>(enum ssh_options_e type, const char *option)</argsstring>
        <name>setOption</name>
        <param>
          <type>enum <ref refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46c" kindref="member">ssh_options_e</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>sets an SSH session options </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>cstring containing the value of option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="142" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="142" bodyend="145"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a21e712ae0b5446e84af31e011a59463c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::setOption</definition>
        <argsstring>(enum ssh_options_e type, long int option)</argsstring>
        <name>setOption</name>
        <param>
          <type>enum <ref refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46c" kindref="member">ssh_options_e</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>sets an SSH session options </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>long integer containing the value of option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="152" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="152" bodyend="155"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a4f037f88f67365ddd1b099e631fb7682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::setOption</definition>
        <argsstring>(enum ssh_options_e type, void *option)</argsstring>
        <name>setOption</name>
        <param>
          <type>enum <ref refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46c" kindref="member">ssh_options_e</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>sets an SSH session options </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer containing the value of option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="162" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="162" bodyend="165"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a6d0498cf7e029e6beadb8b5f591ec472" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
<para>connects to the remote host </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" kindref="member">ssh_connect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="170" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="170" bodyend="174"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a651141f9bcf5792644f6d411ab2cc0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPublickeyAuto</definition>
        <argsstring>(void)</argsstring>
        <name>userauthPublickeyAuto</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Authenticates automatically using public key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para>
</simplesect>
<simplesect kind="see"><para><ref refid="legacy_8c_1ad07655f2c742ce68271422197cf2acda" kindref="member">ssh_userauth_autopubkey</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="180" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="180" bodyend="184"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga53e6771b250c061463ed98b6e5b6e0af" compoundref="auth_8c" startline="1007" endline="1212">ssh_userauth_publickey_auto</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a988398835fc131b0eb5a83a4adaec532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthNone</definition>
        <argsstring>()</argsstring>
        <name>userauthNone</name>
        <briefdescription>
<para>Authenticates using the &quot;none&quot; method. Prefer using autopubkey if possible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga58e7c265236edbc97a2f117d3f23b4dd" kindref="member">ssh_userauth_none</ref> </para>
</simplesect>
<simplesect kind="see"><para>Session::userauthAutoPubkey </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="192" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="192" bodyend="196"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga58e7c265236edbc97a2f117d3f23b4dd" compoundref="auth_8c" startline="406" endline="459">ssh_userauth_none</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a0ea9676a938f2410177b2bfb3e8bf427" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthKbdint</definition>
        <argsstring>(const char *username, const char *submethods)</argsstring>
        <name>userauthKbdint</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>submethods</declname>
        </param>
        <briefdescription>
<para>Authenticate through the &quot;keyboard-interactive&quot; method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username to authenticate. You can specify NULL if ssh_option_set_username() has been used. You cannot try two different logins in a row.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">submethods</parametername>
</parameternamelist>
<parameterdescription>
<para>Undocumented. Set it to NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED, SSH_AUTH_ERROR, SSH_AUTH_INFO, SSH_AUTH_AGAIN</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga6b3b1c2a045286d9476b0252791a07d2" kindref="member">ssh_userauth_kbdint</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="214" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="214" bodyend="218"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga6b3b1c2a045286d9476b0252791a07d2" compoundref="auth_8c" startline="1664" endline="1694">ssh_userauth_kbdint</references>
        <references refid="proxy_8c_1a9b20c006bd90a09e1465fb668700e81d" compoundref="proxy_8c" startline="35">username</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a0bf86917b042bd96896768fe089c3f39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthKbdintGetNPrompts</definition>
        <argsstring>()</argsstring>
        <name>userauthKbdintGetNPrompts</name>
        <briefdescription>
<para>Get the number of prompts (questions) the server has given. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of prompts. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1gacb996ff4979670db009a71a90172ece9" kindref="member">ssh_userauth_kbdint_getnprompts</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="224" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="224" bodyend="226"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__auth_1gacb996ff4979670db009a71a90172ece9" compoundref="auth_8c" startline="1707" endline="1716">ssh_userauth_kbdint_getnprompts</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a71ba225d12071f5290b49f8ac24c0f2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthKbdintSetAnswer</definition>
        <argsstring>(unsigned int index, const char *answer)</argsstring>
        <name>userauthKbdintSetAnswer</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>answer</declname>
        </param>
        <briefdescription>
<para>Set the answer for a question from a message block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index number of the prompt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">answer</parametername>
</parameternamelist>
<parameterdescription>
<para>The answer to give to the server. The answer MUST be encoded UTF-8. It is up to the server how to interpret the value and validate it. However, if you read the answer in some other encoding, you MUST convert it to UTF-8.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga75e44b1f27059a00080f80fac0107a20" kindref="member">ssh_userauth_kbdint_setanswer</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="244" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="244" bodyend="249"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga75e44b1f27059a00080f80fac0107a20" compoundref="auth_8c" startline="1862" endline="1894">ssh_userauth_kbdint_setanswer</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1ac2d10826877bec6598961614eb62f0f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPassword</definition>
        <argsstring>(const char *password)</argsstring>
        <name>userauthPassword</name>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Authenticates using the password method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">password</parametername>
</parameternamelist>
<parameterdescription>
<para>password to use for authentication </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga50c0c150f8c4703e7ee49b3e3e3ca215" kindref="member">ssh_userauth_password</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="259" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="259" bodyend="263"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga50c0c150f8c4703e7ee49b3e3e3ca215" compoundref="auth_8c" startline="1246" endline="1307">ssh_userauth_password</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1afb635d7f84b000bbabb09a86ad5ad074" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthTryPublickey</definition>
        <argsstring>(ssh_key pubkey)</argsstring>
        <name>userauthTryPublickey</name>
        <param>
          <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref></type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
<para>Try to authenticate using the publickey method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>public key to use for authentication </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS if the pubkey is accepted, </para>
</simplesect>
<simplesect kind="return"><para>SSH_AUTH_DENIED if the pubkey is denied </para>
</simplesect>
<simplesect kind="see"><para>ssh_userauth_try_pubkey </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="271" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="271" bodyend="275"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga592f673c4d417a6a46cd4876ac8287aa" compoundref="auth_8c" startline="489" endline="584">ssh_userauth_try_publickey</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a6dd49ee38bf24c31c5e0e28dc2af07b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPublickey</definition>
        <argsstring>(ssh_key privkey)</argsstring>
        <name>userauthPublickey</name>
        <param>
          <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref></type>
          <declname>privkey</declname>
        </param>
        <briefdescription>
<para>Authenticates using the publickey method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>private key to use for authentication </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para>
</simplesect>
<simplesect kind="see"><para><ref refid="legacy_8c_1a18f0c63c75b9af6c28c032e93628a7c5" kindref="member">ssh_userauth_pubkey</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="282" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="282" bodyend="286"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a5d18fd02a76effa0a15b1decb554cc12" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="96">privkey</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1gaa38c4f3194ef36720da7eddb0aa99e23" compoundref="auth_8c" startline="609" endline="723">ssh_userauth_publickey</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a08d70b5cdb5bd1a2a8f5f9ebbdf67b3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getAuthList</definition>
        <argsstring>()</argsstring>
        <name>getAuthList</name>
        <briefdescription>
<para>Returns the available authentication methods from the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitfield of available methods. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga35d44897a44b4bb3b7c01108c1812a37" kindref="member">ssh_userauth_list</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="293" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="293" bodyend="297"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
        <references refid="group__libssh__auth_1ga35d44897a44b4bb3b7c01108c1812a37" compoundref="auth_8c" startline="376" endline="385">ssh_userauth_list</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1aaa6972fe2757370a0cf2b90576eb6edc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
<para>Disconnects from the SSH server and closes connection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="301" column="8" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="301" bodyend="303"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="672" endline="750">ssh_disconnect</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh::Session::getDisconnectMessage</definition>
        <argsstring>()</argsstring>
        <name>getDisconnectMessage</name>
        <briefdescription>
<para>Returns the disconnect message from the server, if any. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>pointer to the message, or NULL. Do not attempt to free the pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="308" column="14" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="308" bodyend="311"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gad19e368e35d48e02ba95970a7d1e87f5" compoundref="session_8c" startline="810" endline="826">ssh_get_disconnect_message</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1ab935e41beab3db33bccf5dd8f23a6886" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh::Session::getError</definition>
        <argsstring>()</argsstring>
        <name>getError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="315" column="14" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="315" bodyend="317"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" compoundref="error_8c" startline="128" endline="132">ssh_get_error</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1aa48f704e1f62335eef378efef5215257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getErrorCode</definition>
        <argsstring>()</argsstring>
        <name>getErrorCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="321" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="321" bodyend="323"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__error_1ga036433b7bf3d4ca94206253f58d136f9" compoundref="error_8c" startline="148" endline="152">ssh_get_error_code</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a30c021f6138124d785f151583e5656bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
        <definition>socket_t ssh::Session::getSocket</definition>
        <argsstring>()</argsstring>
        <name>getSocket</name>
        <briefdescription>
<para>returns the file descriptor used for the communication </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the file descriptor </para>
</simplesect>
<simplesect kind="warning"><para>if a proxycommand is used, this function will only return one of the two file descriptors being used </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gafe509fcea47714b5cd277d1e35e83276" kindref="member">ssh_get_fd</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="330" column="12" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="330" bodyend="332"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gafe509fcea47714b5cd277d1e35e83276" compoundref="session_8c" startline="566" endline="572">ssh_get_fd</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a9969ed8dcaccef321ac519271758b406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ssh::Session::getIssueBanner</definition>
        <argsstring>()</argsstring>
        <name>getIssueBanner</name>
        <briefdescription>
<para>gets the Issue banner from the ssh server </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the issue banner. This is generally a MOTD from server </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga89864d4d5cc6d3d6ef1c39652f2a688f" kindref="member">ssh_get_issue_banner</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="337" column="15" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="337" bodyend="345"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1ga89864d4d5cc6d3d6ef1c39652f2a688f" compoundref="client_8c" startline="632" endline="638">ssh_get_issue_banner</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a9e0af590062a73a0927bb513bc19dd8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getOpensshVersion</definition>
        <argsstring>()</argsstring>
        <name>getOpensshVersion</name>
        <briefdescription>
<para>returns the OpenSSH version (server) if possible </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>openssh version code </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gac55d2895467a1e898ee75b4710d836a5" kindref="member">ssh_get_openssh_version</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="350" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="350" bodyend="352"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gac55d2895467a1e898ee75b4710d836a5" compoundref="client_8c" startline="658" endline="664">ssh_get_openssh_version</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a5d7b4df57ed97f2592893b0493336b88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getVersion</definition>
        <argsstring>()</argsstring>
        <name>getVersion</name>
        <briefdescription>
<para>returns the version of the SSH protocol being used </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the SSH protocol version </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga8467735e4735165336f68ee82e24de0e" kindref="member">ssh_get_version</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="357" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="357" bodyend="359"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1ga8467735e4735165336f68ee82e24de0e" compoundref="session_8c" startline="835" endline="841">ssh_get_version</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a0b7055cb236685a9c18cb79c5492b40f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::isServerKnown</definition>
        <argsstring>()</argsstring>
        <name>isServerKnown</name>
        <briefdescription>
<para>verifies that the server is known </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Integer value depending on the knowledge of the server key </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga958fdd1aedcd85a5c496c0aa22362d34" kindref="member">ssh_session_update_known_hosts</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="366" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="366" bodyend="370"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gacbc5d04fe66beee863a0c61a93fdf765" compoundref="src_2knownhosts_8c" startline="1255" endline="1258">ssh_session_is_known_server</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a00ef8e842d49d238122cbdd3dece60a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::log</definition>
        <argsstring>(int priority, const char *format,...)</argsstring>
        <name>log</name>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="371" column="8" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="371" bodyend="379"/>
        <references refid="libssh_8h_1abeb21d156cdd5fe9b681804847ed0837">_ssh_log</references>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1ac95e750dc93d77fe463cbd054a87934a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::optionsCopy</definition>
        <argsstring>(const Session &amp;source)</argsstring>
        <name>optionsCopy</name>
        <param>
          <type>const <ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>copies options from a session to another </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" kindref="member">ssh_options_copy</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="385" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="385" bodyend="388"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="65" endline="218">ssh_options_copy</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1af19a7b347ddc520d027d94c4d8073aaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::optionsParseConfig</definition>
        <argsstring>(const char *file)</argsstring>
        <name>optionsParseConfig</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>parses a configuration file for options </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>configuration file name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" kindref="member">ssh_options_parse_config</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="394" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="394" bodyend="397"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" compoundref="options_8c" startline="1375" endline="1418">ssh_options_parse_config</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a15b2a58607cc42628e17c94c8f7eb793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::silentDisconnect</definition>
        <argsstring>()</argsstring>
        <name>silentDisconnect</name>
        <briefdescription>
<para>silently disconnect from remote host </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" kindref="member">ssh_silent_disconnect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="401" column="8" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="401" bodyend="403"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" compoundref="session_8c" startline="465" endline="473">ssh_silent_disconnect</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1ae55f054025dcbe4ceeaec87c9ca064c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::writeKnownhost</definition>
        <argsstring>()</argsstring>
        <name>writeKnownhost</name>
        <briefdescription>
<para>Writes the known host file with current host key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" kindref="member">ssh_write_knownhost</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="409" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="409" bodyend="413"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="group__libssh__session_1ga958fdd1aedcd85a5c496c0aa22362d34" compoundref="src_2knownhosts_8c" startline="965" endline="1038">ssh_session_update_known_hosts</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a6cd5318d71a3850a87b87bdfd89a5983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> *</type>
        <definition>Channel * ssh::Session::acceptForward</definition>
        <argsstring>(int timeout_ms)</argsstring>
        <name>acceptForward</name>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>accept an incoming forward connection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for waiting, in ms </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new <ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> pointer on the forward connection </para>
</simplesect>
<simplesect kind="return"><para>NULL in case of error </para>
</simplesect>
<simplesect kind="warning"><para>you have to delete this pointer after use </para>
</simplesect>
<simplesect kind="see"><para>ssh_channel_forward_accept </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classssh_1_1Session_1aa4ab8dfd40f13bb72ef8ef65a48be861" kindref="member">Session::listenForward</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="423" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="672" bodyend="678"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="classssh_1_1Session_1ac47342240f21ce36f47485e4ab41a10d" compoundref="libsshpp_8hpp" startline="127">Channel</references>
        <references refid="group__libssh__channel_1ga490e4b0a7adc022507b7f165b336afe4" compoundref="channels_8c" startline="2428" endline="2430">ssh_channel_accept_forward</references>
        <references refid="libsshpp_8hpp_1a455b65381a2052c070c52846ac5d3704" compoundref="libsshpp_8hpp" startline="108">ssh_throw_null</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a70f29e5f12fea442dfd0bff3ec51d3a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::cancelForward</definition>
        <argsstring>(const char *address, int port)</argsstring>
        <name>cancelForward</name>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="426" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="426" bodyend="430"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="sshnetcat_8c_1ad723da1801ae1586eb330380e2d9a912" compoundref="sshnetcat_8c" startline="39">port</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga3bff751afc5ecb5bbf9d6447e4e5370f" compoundref="channels_8c" startline="2447" endline="2476">ssh_channel_cancel_forward</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1aa4ab8dfd40f13bb72ef8ef65a48be861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Session::listenForward</definition>
        <argsstring>(const char *address, int port, int &amp;boundport)</argsstring>
        <name>listenForward</name>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>boundport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="432" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="432" bodyend="437"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <references refid="sshnetcat_8c_1ad723da1801ae1586eb330380e2d9a912" compoundref="sshnetcat_8c" startline="39">port</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga758cda957227751870c8772df46e5b39" compoundref="channels_8c" startline="2365" endline="2404">ssh_channel_listen_forward</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1ad48854aa3c5a7bd564ea487c1afddf2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
        <definition>ssh_session ssh::Session::getCSession</definition>
        <argsstring>()</argsstring>
        <name>getCSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="439" column="15" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="439" bodyend="441"/>
        <references refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" compoundref="libsshpp_8hpp" startline="444">c_session</references>
        <referencedby refid="classssh_1_1Channel_1aac8846105c4978af1313feb90f30d95e" compoundref="libsshpp_8hpp" startline="649" endline="651">ssh::Channel::getCSession</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classssh_1_1Session_1ae0783aca57bb2f4d54e6bb3ae377b173" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ssh::Session::Session</definition>
        <argsstring>(const Session &amp;)</argsstring>
        <name>Session</name>
        <param>
          <type>const <ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="448" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Session_1a982ab959144c8e42bb970a59e6a3bfaa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
        <definition>Session&amp; ssh::Session::operator=</definition>
        <argsstring>(const Session &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="449" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classssh_1_1Session" kindref="compound">ssh::Session</ref> class contains the state of a SSH connection. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="25">
        <label>ssh_agent_struct</label>
        <link refid="structssh__agent__struct"/>
        <childnode refid="8" relation="usage">
          <edgelabel>channel</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>sock</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>count</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>ident</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>chacha20_poly1305_keysched</label>
        <link refid="structchacha20__poly1305__keysched"/>
        <childnode refid="32" relation="usage">
          <edgelabel>k1</edgelabel>
          <edgelabel>k2</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>ssh_gssapi_struct</label>
        <link refid="structssh__gssapi__struct"/>
        <childnode refid="4" relation="usage">
          <edgelabel>canonic_user</edgelabel>
          <edgelabel>service</edgelabel>
          <edgelabel>user</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>chacha_ctx</label>
        <link refid="structchacha__ctx"/>
      </node>
      <node id="18">
        <label>ssh_socket_struct</label>
        <link refid="structssh__socket__struct"/>
        <childnode refid="15" relation="usage">
          <edgelabel>callbacks</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>in_buffer</edgelabel>
          <edgelabel>out_buffer</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>poll_handle</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>packet_struct</label>
        <link refid="structpacket__struct"/>
      </node>
      <node id="1">
        <label>ssh::Session</label>
        <link refid="classssh_1_1Session"/>
        <childnode refid="2" relation="usage">
          <edgelabel>c_session</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>ssh_callbacks_struct</label>
        <link refid="structssh__callbacks__struct"/>
        <childnode refid="8" relation="usage">
          <edgelabel>channel_open_request_auth_agent_function</edgelabel>
          <edgelabel>channel_open_request_x11_function</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>global_request_function</edgelabel>
          <edgelabel>log_function</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>auth_function</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>ssh_kex_struct</label>
        <link refid="structssh__kex__struct"/>
        <childnode refid="4" relation="usage">
          <edgelabel>methods</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>cookie</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ssh_kbdint_struct</label>
        <link refid="structssh__kbdint__struct"/>
        <childnode refid="4" relation="usage">
          <edgelabel>answers</edgelabel>
          <edgelabel>instruction</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>prompts</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>echo</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>ssh_poll_ctx_struct</label>
        <link refid="structssh__poll__ctx__struct"/>
        <childnode refid="21" relation="usage">
          <edgelabel>pollfds</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>pollptrs</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>ssh_buffer_struct</label>
        <link refid="structssh__buffer__struct"/>
      </node>
      <node id="15">
        <label>ssh_socket_callbacks_struct</label>
        <link refid="structssh__socket__callbacks__struct"/>
        <childnode refid="11" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>ssh_channel_struct</label>
        <link refid="structssh__channel__struct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>callbacks</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>counter</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>stderr_buffer</edgelabel>
          <edgelabel>stdout_buffer</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>ssh_iterator</label>
        <link refid="structssh__iterator"/>
        <childnode refid="10" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>ssh_agent_state_struct</label>
        <link refid="structssh__agent__state__struct"/>
        <childnode refid="4" relation="usage">
          <edgelabel>comment</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>pubkey</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>ssh_key_struct</label>
        <link refid="structssh__key__struct"/>
        <childnode refid="23" relation="usage">
          <edgelabel>sk_application</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>type_c</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>ssh_timestamp</label>
        <link refid="structssh__timestamp"/>
      </node>
      <node id="29">
        <label>dh_keypair</label>
        <link refid="structdh__keypair"/>
      </node>
      <node id="2">
        <label>ssh_session_struct</label>
        <link refid="structssh__session__struct"/>
        <childnode refid="3" relation="usage">
          <edgelabel>kbdint</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>common</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>socket_callbacks</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>gssapi</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>in_packet</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>socket</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>dsa_key</edgelabel>
          <edgelabel>ecdsa_key</edgelabel>
          <edgelabel>ed25519_key</edgelabel>
          <edgelabel>rsa_key</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>banner</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ProxyCommand</edgelabel>
          <edgelabel>bindaddr</edgelabel>
          <edgelabel>clientbanner</edgelabel>
          <edgelabel>compressionlevel</edgelabel>
          <edgelabel>custombanner</edgelabel>
          <edgelabel>discon_msg</edgelabel>
          <edgelabel>global_knownhosts</edgelabel>
          <edgelabel>gss_client_identity</edgelabel>
          <edgelabel>gss_server_identity</edgelabel>
          <edgelabel>host</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>server_callbacks</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>agent</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>channels</edgelabel>
          <edgelabel>identity</edgelabel>
          <edgelabel>out_queue</edgelabel>
          <edgelabel>packet_callbacks</edgelabel>
          <edgelabel>ssh_message_list</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>current_crypto</edgelabel>
          <edgelabel>next_crypto</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>raw_counter</edgelabel>
          <edgelabel>socket_counter</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>default_poll_ctx</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>timeout</edgelabel>
          <edgelabel>timeout_usec</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>auto_state</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>agent_state</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>in_buffer</edgelabel>
          <edgelabel>in_hashbuf</edgelabel>
          <edgelabel>out_buffer</edgelabel>
          <edgelabel>out_hashbuf</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>last_rekey_time</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>default_packet_callbacks</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>error_struct</label>
        <link refid="structerror__struct"/>
        <childnode refid="4" relation="usage">
          <edgelabel>error_buffer</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>ssh_cipher_struct</label>
        <link refid="structssh__cipher__struct"/>
        <childnode refid="31" relation="usage">
          <edgelabel>chacha20_schedule</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>blocksize</edgelabel>
          <edgelabel>keysize</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>const</label>
      </node>
      <node id="33">
        <label>ssh_auth_auto_state_struct</label>
        <link refid="structssh__auth__auto__state__struct"/>
        <childnode refid="22" relation="usage">
          <edgelabel>privkey</edgelabel>
          <edgelabel>pubkey</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>it</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>ssh_packet_callbacks_struct</label>
        <link refid="structssh__packet__callbacks__struct"/>
      </node>
      <node id="19">
        <label>ssh_poll_handle_struct</label>
        <link refid="structssh__poll__handle__struct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>ssh_counter_struct</label>
        <link refid="structssh__counter__struct"/>
      </node>
      <node id="21">
        <label>ssh_pollfd_struct</label>
        <link refid="structssh__pollfd__struct"/>
      </node>
      <node id="23">
        <label>ssh_string_struct</label>
        <link refid="structssh__string__struct"/>
        <childnode refid="5" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>unsigned</label>
      </node>
      <node id="6">
        <label>ssh_common_struct</label>
        <link refid="structssh__common__struct"/>
        <childnode refid="7" relation="usage">
          <edgelabel>callbacks</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>error</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>ssh_list</label>
        <link refid="structssh__list"/>
        <childnode refid="10" relation="usage">
          <edgelabel>end</edgelabel>
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>char</label>
      </node>
      <node id="24">
        <label>ssh_server_callbacks_struct</label>
        <link refid="structssh__server__callbacks__struct"/>
        <childnode refid="8" relation="usage">
          <edgelabel>channel_open_request_session_function</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>auth_gssapi_mic_function</edgelabel>
          <edgelabel>auth_none_function</edgelabel>
          <edgelabel>auth_password_function</edgelabel>
          <edgelabel>auth_pubkey_function</edgelabel>
          <edgelabel>gssapi_accept_sec_ctx_function</edgelabel>
          <edgelabel>gssapi_verify_mic_function</edgelabel>
          <edgelabel>service_request_function</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>gssapi_select_oid_function</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>dh_ctx</label>
        <link refid="structdh__ctx"/>
        <childnode refid="29" relation="usage">
          <edgelabel>keypair</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>ssh_crypto_struct</label>
        <link refid="structssh__crypto__struct"/>
        <childnode refid="27" relation="usage">
          <edgelabel>client_kex</edgelabel>
          <edgelabel>server_kex</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>kex_methods</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>server_pubkey</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>dh_server_signature</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>dh_ctx</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>in_cipher</edgelabel>
          <edgelabel>out_cipher</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>decryptIV</edgelabel>
          <edgelabel>decryptMAC</edgelabel>
          <edgelabel>decryptkey</edgelabel>
          <edgelabel>encryptIV</edgelabel>
          <edgelabel>encryptMAC</edgelabel>
          <edgelabel>encryptkey</edgelabel>
          <edgelabel>hmacbuf</edgelabel>
          <edgelabel>secret_hash</edgelabel>
          <edgelabel>session_id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="126" column="1" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="126" bodyend="450"/>
    <listofallmembers>
      <member refid="classssh_1_1Session_1a6cd5318d71a3850a87b87bdfd89a5983" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>acceptForward</name></member>
      <member refid="classssh_1_1Session_1a8f3f99647f051239b3d1ba87b0dd6969" prot="protected" virt="non-virtual"><scope>ssh::Session</scope><name>c_session</name></member>
      <member refid="classssh_1_1Session_1a70f29e5f12fea442dfd0bff3ec51d3a8" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>cancelForward</name></member>
      <member refid="classssh_1_1Session_1ac47342240f21ce36f47485e4ab41a10d" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>Channel</name></member>
      <member refid="classssh_1_1Session_1a6d0498cf7e029e6beadb8b5f591ec472" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>connect</name></member>
      <member refid="classssh_1_1Session_1aaa6972fe2757370a0cf2b90576eb6edc" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>disconnect</name></member>
      <member refid="classssh_1_1Session_1a08d70b5cdb5bd1a2a8f5f9ebbdf67b3b" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getAuthList</name></member>
      <member refid="classssh_1_1Session_1ad48854aa3c5a7bd564ea487c1afddf2b" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getCSession</name></member>
      <member refid="classssh_1_1Session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getDisconnectMessage</name></member>
      <member refid="classssh_1_1Session_1ab935e41beab3db33bccf5dd8f23a6886" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getError</name></member>
      <member refid="classssh_1_1Session_1aa48f704e1f62335eef378efef5215257" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getErrorCode</name></member>
      <member refid="classssh_1_1Session_1a9969ed8dcaccef321ac519271758b406" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getIssueBanner</name></member>
      <member refid="classssh_1_1Session_1a9e0af590062a73a0927bb513bc19dd8e" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getOpensshVersion</name></member>
      <member refid="classssh_1_1Session_1a30c021f6138124d785f151583e5656bd" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getSocket</name></member>
      <member refid="classssh_1_1Session_1a5d7b4df57ed97f2592893b0493336b88" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getVersion</name></member>
      <member refid="classssh_1_1Session_1a0b7055cb236685a9c18cb79c5492b40f" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>isServerKnown</name></member>
      <member refid="classssh_1_1Session_1aa4ab8dfd40f13bb72ef8ef65a48be861" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>listenForward</name></member>
      <member refid="classssh_1_1Session_1a00ef8e842d49d238122cbdd3dece60a1" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>log</name></member>
      <member refid="classssh_1_1Session_1a982ab959144c8e42bb970a59e6a3bfaa" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>operator=</name></member>
      <member refid="classssh_1_1Session_1ac95e750dc93d77fe463cbd054a87934a" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>optionsCopy</name></member>
      <member refid="classssh_1_1Session_1af19a7b347ddc520d027d94c4d8073aaa" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>optionsParseConfig</name></member>
      <member refid="classssh_1_1Session_1a19f9c19d925bb991401fe4503305fea1" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>Session</name></member>
      <member refid="classssh_1_1Session_1ae0783aca57bb2f4d54e6bb3ae377b173" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>Session</name></member>
      <member refid="classssh_1_1Session_1a5b1840081e321b82cd19af1b3f98e069" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>setOption</name></member>
      <member refid="classssh_1_1Session_1a21e712ae0b5446e84af31e011a59463c" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>setOption</name></member>
      <member refid="classssh_1_1Session_1a4f037f88f67365ddd1b099e631fb7682" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>setOption</name></member>
      <member refid="classssh_1_1Session_1a15b2a58607cc42628e17c94c8f7eb793" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>silentDisconnect</name></member>
      <member refid="classssh_1_1Session_1a0ea9676a938f2410177b2bfb3e8bf427" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthKbdint</name></member>
      <member refid="classssh_1_1Session_1a0bf86917b042bd96896768fe089c3f39" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthKbdintGetNPrompts</name></member>
      <member refid="classssh_1_1Session_1a71ba225d12071f5290b49f8ac24c0f2d" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthKbdintSetAnswer</name></member>
      <member refid="classssh_1_1Session_1a988398835fc131b0eb5a83a4adaec532" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthNone</name></member>
      <member refid="classssh_1_1Session_1ac2d10826877bec6598961614eb62f0f7" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPassword</name></member>
      <member refid="classssh_1_1Session_1a6dd49ee38bf24c31c5e0e28dc2af07b7" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPublickey</name></member>
      <member refid="classssh_1_1Session_1a651141f9bcf5792644f6d411ab2cc0c5" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPublickeyAuto</name></member>
      <member refid="classssh_1_1Session_1afb635d7f84b000bbabb09a86ad5ad074" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthTryPublickey</name></member>
      <member refid="classssh_1_1Session_1ae55f054025dcbe4ceeaec87c9ca064c7" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>writeKnownhost</name></member>
      <member refid="classssh_1_1Session_1ae07d004bb4cee8a4c1a73f829363893d" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>~Session</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
