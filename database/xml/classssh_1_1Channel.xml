<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classssh_1_1Channel" kind="class" language="C++" prot="public">
    <compoundname>ssh::Channel</compoundname>
    <includes refid="libsshpp_8hpp" local="no">libsshpp.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classssh_1_1Channel_1afbdd63a566878ce30072e785ca7e7740" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Session</definition>
        <argsstring></argsstring>
        <name>Session</name>
        <param>
          <type><ref refid="classssh_1_1Session" kindref="compound">Session</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="457" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="457" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classssh_1_1Channel_1a71d7d99293107c7e0bee53d4af0700ee" prot="protected" static="no" mutable="no">
        <type><ref refid="classssh_1_1Session" kindref="compound">Session</ref> *</type>
        <definition>Session* ssh::Channel::session</definition>
        <argsstring></argsstring>
        <name>session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="658" column="11" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="658" bodyend="-1"/>
        <referencedby refid="classssh_1_1Channel_1a7f3db6b167f4cf9844b494ca32a74432" compoundref="libsshpp_8hpp" startline="459" endline="462">Channel</referencedby>
        <referencedby refid="classssh_1_1Channel_1aac8846105c4978af1313feb90f30d95e" compoundref="libsshpp_8hpp" startline="649" endline="651">getCSession</referencedby>
        <referencedby refid="classssh_1_1Channel_1a1c60382b561193baebb1d68be1219500" compoundref="libsshpp_8hpp" startline="506" endline="508">getSession</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" prot="protected" static="no" mutable="no">
        <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
        <definition>ssh_channel ssh::Channel::channel</definition>
        <argsstring></argsstring>
        <name>channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="659" column="15" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="659" bodyend="-1"/>
        <referencedby refid="classssh_1_1Channel_1a62000c16999e74525d296f0a1cb19c95" compoundref="libsshpp_8hpp" startline="476" endline="481">acceptX11</referencedby>
        <referencedby refid="classssh_1_1Channel_1a3adc48275cf34d211fb18514288f7c6f" compoundref="libsshpp_8hpp" startline="488" endline="492">changePtySize</referencedby>
        <referencedby refid="classssh_1_1Channel_1a7f3db6b167f4cf9844b494ca32a74432" compoundref="libsshpp_8hpp" startline="459" endline="462">Channel</referencedby>
        <referencedby refid="classssh_1_1Channel_1a383618db99c0ccd5c33b5e7bcd992e80" compoundref="libsshpp_8hpp" startline="498" endline="501">close</referencedby>
        <referencedby refid="classssh_1_1Channel_1acafe95cdd1e6ecf766e8f356d5db43ee" compoundref="libsshpp_8hpp" startline="653" endline="655">getCChannel</referencedby>
        <referencedby refid="classssh_1_1Channel_1aa9bd03b50afa6f6c0126fe490e17112e" compoundref="libsshpp_8hpp" startline="503" endline="505">getExitStatus</referencedby>
        <referencedby refid="classssh_1_1Channel_1a38880d18d0fc357be0f4f8b8ef1c92ef" compoundref="libsshpp_8hpp" startline="512" endline="514">isClosed</referencedby>
        <referencedby refid="classssh_1_1Channel_1a3bb4131d82cc033d75f65a5137053532" compoundref="libsshpp_8hpp" startline="518" endline="520">isEof</referencedby>
        <referencedby refid="classssh_1_1Channel_1aa2794c09f819f3132b241aa6b72b0664" compoundref="libsshpp_8hpp" startline="524" endline="526">isOpen</referencedby>
        <referencedby refid="classssh_1_1Channel_1ac5408b11bfb79ec58456660b8c8d98d8" compoundref="libsshpp_8hpp" startline="527" endline="533">openForward</referencedby>
        <referencedby refid="classssh_1_1Channel_1ab2764dbcf8b9c3168963536ba8b0ea1b" compoundref="libsshpp_8hpp" startline="535" endline="539">openSession</referencedby>
        <referencedby refid="classssh_1_1Channel_1a661394ceb03e65bb7c02e040d23d6fc8" compoundref="libsshpp_8hpp" startline="540" endline="544">poll</referencedby>
        <referencedby refid="classssh_1_1Channel_1a5bfcd6a3986d8a88128a806c062bbf3a" compoundref="libsshpp_8hpp" startline="545" endline="553">read</referencedby>
        <referencedby refid="classssh_1_1Channel_1aef42ee6d77142e1a8369e06173ea550d" compoundref="libsshpp_8hpp" startline="572" endline="580">readNonblocking</referencedby>
        <referencedby refid="classssh_1_1Channel_1a1493e5c618e62d41a0213e7d8ef1223b" compoundref="libsshpp_8hpp" startline="581" endline="585">requestEnv</referencedby>
        <referencedby refid="classssh_1_1Channel_1a4fd026ccfef501034741a206ec207329" compoundref="libsshpp_8hpp" startline="587" endline="591">requestExec</referencedby>
        <referencedby refid="classssh_1_1Channel_1aa0598bb62bba61428d2785a4e92b0b70" compoundref="libsshpp_8hpp" startline="592" endline="600">requestPty</referencedby>
        <referencedby refid="classssh_1_1Channel_1a9124161a6c69d544593b4f505c71813e" compoundref="libsshpp_8hpp" startline="607" endline="611">requestSendSignal</referencedby>
        <referencedby refid="classssh_1_1Channel_1a72bc638030fc1ffce0319fb037d8bfcb" compoundref="libsshpp_8hpp" startline="602" endline="606">requestShell</referencedby>
        <referencedby refid="classssh_1_1Channel_1afb6dc7a15ec6e68c8cfd12b66273260f" compoundref="libsshpp_8hpp" startline="612" endline="616">requestSubsystem</referencedby>
        <referencedby refid="classssh_1_1Channel_1a7421cfbdc01d05f999a55e05af9a593c" compoundref="libsshpp_8hpp" startline="617" endline="623">requestX11</referencedby>
        <referencedby refid="classssh_1_1Channel_1aba2abb07a061bb1c8509f159c284bc55" compoundref="libsshpp_8hpp" startline="624" endline="628">sendEof</referencedby>
        <referencedby refid="classssh_1_1Channel_1a06cf7ffd971eff87783a169444fa09a2" compoundref="libsshpp_8hpp" startline="638" endline="647">write</referencedby>
        <referencedby refid="classssh_1_1Channel_1a10dc8f6c498117bfb4be5f3cdafd0a02" compoundref="libsshpp_8hpp" startline="463" endline="466">~Channel</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classssh_1_1Channel_1a7f3db6b167f4cf9844b494ca32a74432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::Channel</definition>
        <argsstring>(Session &amp;ssh_session)</argsstring>
        <name>Channel</name>
        <param>
          <type><ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
          <declname>ssh_session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="459" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="459" bodyend="462"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="classssh_1_1Channel_1a71d7d99293107c7e0bee53d4af0700ee" compoundref="libsshpp_8hpp" startline="658">session</references>
        <references refid="group__libssh__channel_1gada8ccda7bf65165fe145d3096a252dcc" compoundref="channels_8c" startline="80" endline="129">ssh_channel_new</references>
        <referencedby refid="classssh_1_1Channel_1a62000c16999e74525d296f0a1cb19c95" compoundref="libsshpp_8hpp" startline="476" endline="481">acceptX11</referencedby>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a10dc8f6c498117bfb4be5f3cdafd0a02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::~Channel</definition>
        <argsstring>()</argsstring>
        <name>~Channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="463" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="463" bodyend="466"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gad1417f9eae8928fed20faafe2d9dbfff" compoundref="channels_8c" startline="1123" endline="1167">ssh_channel_free</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a62000c16999e74525d296f0a1cb19c95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> *</type>
        <definition>Channel* ssh::Channel::acceptX11</definition>
        <argsstring>(int timeout_ms)</argsstring>
        <name>acceptX11</name>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>accept an incoming X11 connection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for waiting, in ms </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new <ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> pointer on the X11 connection </para>
</simplesect>
<simplesect kind="return"><para>NULL in case of error </para>
</simplesect>
<simplesect kind="warning"><para>you have to delete this pointer after use </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1ga548bd0f77a50b7c8180942544b375866" kindref="member">ssh_channel_accept_x11</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classssh_1_1Channel_1a7421cfbdc01d05f999a55e05af9a593c" kindref="member">Channel::requestX11</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="476" column="11" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="476" bodyend="481"/>
        <references refid="classssh_1_1Channel_1a7f3db6b167f4cf9844b494ca32a74432" compoundref="libsshpp_8hpp" startline="459" endline="462">Channel</references>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="classssh_1_1Channel_1aac8846105c4978af1313feb90f30d95e" compoundref="libsshpp_8hpp" startline="649" endline="651">getCSession</references>
        <references refid="classssh_1_1Channel_1a1c60382b561193baebb1d68be1219500" compoundref="libsshpp_8hpp" startline="506" endline="508">getSession</references>
        <references refid="group__libssh__channel_1ga548bd0f77a50b7c8180942544b375866" compoundref="channels_8c" startline="2158" endline="2160">ssh_channel_accept_x11</references>
        <references refid="libsshpp_8hpp_1a455b65381a2052c070c52846ac5d3704" compoundref="libsshpp_8hpp" startline="108">ssh_throw_null</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a3adc48275cf34d211fb18514288f7c6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::changePtySize</definition>
        <argsstring>(int cols, int rows)</argsstring>
        <name>changePtySize</name>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
<para>change the size of a pseudoterminal </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cols</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1gaf5d55c90f3d98c583df23d21905c1127" kindref="member">ssh_channel_change_pty_size</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="488" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="488" bodyend="492"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1gaf5d55c90f3d98c583df23d21905c1127" compoundref="channels_8c" startline="1880" endline="1907">ssh_channel_change_pty_size</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a383618db99c0ccd5c33b5e7bcd992e80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>closes a channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" kindref="member">ssh_channel_close</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="498" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="498" bodyend="501"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" compoundref="channels_8c" startline="1285" endline="1336">ssh_channel_close</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1aa9bd03b50afa6f6c0126fe490e17112e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::getExitStatus</definition>
        <argsstring>()</argsstring>
        <name>getExitStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="503" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="503" bodyend="505"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1ga9eea019dd0bbaa8a817fff2c762d1a2d" compoundref="channels_8c" startline="3180" endline="3193">ssh_channel_get_exit_status</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a1c60382b561193baebb1d68be1219500" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
        <definition>Session&amp; ssh::Channel::getSession</definition>
        <argsstring>()</argsstring>
        <name>getSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="506" column="11" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="506" bodyend="508"/>
        <references refid="classssh_1_1Channel_1a71d7d99293107c7e0bee53d4af0700ee" compoundref="libsshpp_8hpp" startline="658">session</references>
        <referencedby refid="classssh_1_1Channel_1a62000c16999e74525d296f0a1cb19c95" compoundref="libsshpp_8hpp" startline="476" endline="481">acceptX11</referencedby>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a38880d18d0fc357be0f4f8b8ef1c92ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh::Channel::isClosed</definition>
        <argsstring>()</argsstring>
        <name>isClosed</name>
        <briefdescription>
<para>returns true if channel is in closed state </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__channel_1gab2720b44cb7f1dfe2b38ffe07c2f45c7" kindref="member">ssh_channel_is_closed</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="512" column="8" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="512" bodyend="514"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gab2720b44cb7f1dfe2b38ffe07c2f45c7" compoundref="channels_8c" startline="1582" endline="1587">ssh_channel_is_closed</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a3bb4131d82cc033d75f65a5137053532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh::Channel::isEof</definition>
        <argsstring>()</argsstring>
        <name>isEof</name>
        <briefdescription>
<para>returns true if channel is in EOF state </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__channel_1gab535264029443d77214c0615a0788b0a" kindref="member">ssh_channel_is_eof</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="518" column="8" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="518" bodyend="520"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gab535264029443d77214c0615a0788b0a" compoundref="channels_8c" startline="1596" endline="1608">ssh_channel_is_eof</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1aa2794c09f819f3132b241aa6b72b0664" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh::Channel::isOpen</definition>
        <argsstring>()</argsstring>
        <name>isOpen</name>
        <briefdescription>
<para>returns true if channel is in open state </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__channel_1gaaafcda943c96ddb91e5c28c0bdee7045" kindref="member">ssh_channel_is_open</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="524" column="8" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="524" bodyend="526"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gaaafcda943c96ddb91e5c28c0bdee7045" compoundref="channels_8c" startline="1566" endline="1571">ssh_channel_is_open</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1ac5408b11bfb79ec58456660b8c8d98d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::openForward</definition>
        <argsstring>(const char *remotehost, int remoteport, const char *sourcehost=NULL, int localport=0)</argsstring>
        <name>openForward</name>
        <param>
          <type>const char *</type>
          <declname>remotehost</declname>
        </param>
        <param>
          <type>int</type>
          <declname>remoteport</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sourcehost</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>localport</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="527" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="527" bodyend="533"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gae86b0704a1f2bdebb268b55567f7f47b" compoundref="channels_8c" startline="985" endline="1031">ssh_channel_open_forward</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1ab2764dbcf8b9c3168963536ba8b0ea1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::openSession</definition>
        <argsstring>()</argsstring>
        <name>openSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="535" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="535" bodyend="539"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1gaf051dd30d75bf6dc45d1a5088cf970bd" compoundref="channels_8c" startline="920" endline="930">ssh_channel_open_session</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a661394ceb03e65bb7c02e040d23d6fc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::poll</definition>
        <argsstring>(bool is_stderr=false)</argsstring>
        <name>poll</name>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="540" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="540" bodyend="544"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1ga157f7d1df5de07ec6c6976e2034ba6e2" compoundref="channels_8c" startline="3038" endline="3069">ssh_channel_poll</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a5bfcd6a3986d8a88128a806c062bbf3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::read</definition>
        <argsstring>(void *dest, size_t count)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="545" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="545" bodyend="553"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1ga2f4e02cb3b3adbc30a534623164068fd" compoundref="channels_8c" startline="2863" endline="2960">ssh_channel_read_timeout</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a5a03a0f25f2e7044bcc97df338f57c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::read</definition>
        <argsstring>(void *dest, size_t count, int timeout)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="554" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="554" bodyend="562"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1ga2f4e02cb3b3adbc30a534623164068fd" compoundref="channels_8c" startline="2863" endline="2960">ssh_channel_read_timeout</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a046e390e41453a66cd442a687efd6695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::read</definition>
        <argsstring>(void *dest, size_t count, bool is_stderr=false, int timeout=-1)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="563" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="563" bodyend="571"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1ga2f4e02cb3b3adbc30a534623164068fd" compoundref="channels_8c" startline="2863" endline="2960">ssh_channel_read_timeout</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1aef42ee6d77142e1a8369e06173ea550d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::readNonblocking</definition>
        <argsstring>(void *dest, size_t count, bool is_stderr=false)</argsstring>
        <name>readNonblocking</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="572" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="572" bodyend="580"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gaaca5a3fbe9839c3ffb37b746afc35f4c" compoundref="channels_8c" startline="2983" endline="3022">ssh_channel_read_nonblocking</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a1493e5c618e62d41a0213e7d8ef1223b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::requestEnv</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>requestEnv</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="581" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="581" bodyend="585"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="samplesshd-kbdint_8c" startline="186">name</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga7aede2f9af4c494ff9e41fc08a4572f1" compoundref="channels_8c" startline="2498" endline="2535">ssh_channel_request_env</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a4fd026ccfef501034741a206ec207329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::requestExec</definition>
        <argsstring>(const char *cmd)</argsstring>
        <name>requestExec</name>
        <param>
          <type>const char *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="587" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="587" bodyend="591"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga567d509183ade0a77190f390e2b5747d" compoundref="channels_8c" startline="2568" endline="2603">ssh_channel_request_exec</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1aa0598bb62bba61428d2785a4e92b0b70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::requestPty</definition>
        <argsstring>(const char *term=NULL, int cols=0, int rows=0)</argsstring>
        <name>requestPty</name>
        <param>
          <type>const char *</type>
          <declname>term</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="592" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="592" bodyend="600"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga37c1cec33fe5a2f184768aba52e3a0db" compoundref="channels_8c" startline="1861" endline="1863">ssh_channel_request_pty</references>
        <references refid="group__libssh__channel_1gabb175414352256e1602286e0ab50886c" compoundref="channels_8c" startline="1798" endline="1847">ssh_channel_request_pty_size</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a72bc638030fc1ffce0319fb037d8bfcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::requestShell</definition>
        <argsstring>()</argsstring>
        <name>requestShell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="602" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="602" bodyend="606"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1gaed4c5fb30c9df2b2548421ccf4e81bf1" compoundref="channels_8c" startline="1919" endline="1925">ssh_channel_request_shell</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a9124161a6c69d544593b4f505c71813e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::requestSendSignal</definition>
        <argsstring>(const char *signum)</argsstring>
        <name>requestSendSignal</name>
        <param>
          <type>const char *</type>
          <declname>signum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="607" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="607" bodyend="611"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1gaa98315fca818b561970a6950683f4053" compoundref="channels_8c" startline="2638" endline="2666">ssh_channel_request_send_signal</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1afb6dc7a15ec6e68c8cfd12b66273260f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::requestSubsystem</definition>
        <argsstring>(const char *subsystem)</argsstring>
        <name>requestSubsystem</name>
        <param>
          <type>const char *</type>
          <declname>subsystem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="612" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="612" bodyend="616"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga06024b070f9b2a3d6964b79ae36695b7" compoundref="channels_8c" startline="1941" endline="1976">ssh_channel_request_subsystem</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a7421cfbdc01d05f999a55e05af9a593c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::requestX11</definition>
        <argsstring>(bool single_connection, const char *protocol, const char *cookie, int screen_number)</argsstring>
        <name>requestX11</name>
        <param>
          <type>bool</type>
          <declname>single_connection</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="617" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="617" bodyend="623"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1gadfa34624c28164bd73453cd04aa64c1f" compoundref="channels_8c" startline="2042" endline="2091">ssh_channel_request_x11</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1aba2abb07a061bb1c8509f159c284bc55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libsshpp_8hpp_1ab9acc9af093140b577db1fb909d3dfc7" kindref="member">void_throwable</ref></type>
        <definition>void_throwable ssh::Channel::sendEof</definition>
        <argsstring>()</argsstring>
        <name>sendEof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="624" column="18" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="624" bodyend="628"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="libsshpp_8hpp_1a18f6c5bc2da0f766b93242d7ba61122a" compoundref="libsshpp_8hpp" startline="110">return_throwable</references>
        <references refid="group__libssh__channel_1ga072f82fdf3e50514f747653af2c99004" compoundref="channels_8c" startline="1224" endline="1270">ssh_channel_send_eof</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a06cf7ffd971eff87783a169444fa09a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::write</definition>
        <argsstring>(const void *data, size_t len, bool is_stderr=false)</argsstring>
        <name>write</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes on a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_stderr</parametername>
</parameternamelist>
<parameterdescription>
<para>write should be done on the stderr channel (server only) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes written </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1SshException" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>in case of error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="legacy_8c_1ac202e79c44c789daccc66d1ad647ee26" kindref="member">channel_write</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__server_1ga4df894b92717afb7f8791182f21a9a6c" kindref="member">channel_write_stderr</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="638" column="7" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="638" bodyend="647"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
        <references refid="group__libssh__channel_1ga5d658df773ba854b35ff9f905341e2fb" compoundref="channels_8c" startline="1553" endline="1555">ssh_channel_write</references>
        <references refid="group__libssh__channel_1ga7ebd0ed490ee4485c6d5feb7d22bc162" compoundref="channels_8c" startline="3438" endline="3440">ssh_channel_write_stderr</references>
        <references refid="libsshpp_8hpp_1add7a9fec3256573741515271612fdbe4" compoundref="libsshpp_8hpp" startline="107">ssh_throw</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1aac8846105c4978af1313feb90f30d95e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
        <definition>ssh_session ssh::Channel::getCSession</definition>
        <argsstring>()</argsstring>
        <name>getCSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="649" column="15" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="649" bodyend="651"/>
        <references refid="classssh_1_1Session_1ad48854aa3c5a7bd564ea487c1afddf2b" compoundref="libsshpp_8hpp" startline="439" endline="441">ssh::Session::getCSession</references>
        <references refid="classssh_1_1Channel_1a71d7d99293107c7e0bee53d4af0700ee" compoundref="libsshpp_8hpp" startline="658">session</references>
        <referencedby refid="classssh_1_1Channel_1a62000c16999e74525d296f0a1cb19c95" compoundref="libsshpp_8hpp" startline="476" endline="481">acceptX11</referencedby>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1acafe95cdd1e6ecf766e8f356d5db43ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
        <definition>ssh_channel ssh::Channel::getCChannel</definition>
        <argsstring>()</argsstring>
        <name>getCChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="653" column="15" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="653" bodyend="655"/>
        <references refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" compoundref="libsshpp_8hpp" startline="659">channel</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classssh_1_1Channel_1a8a3c7d02c2a74bc3450978e12857c79c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::Channel</definition>
        <argsstring>(Session &amp;ssh_session, ssh_channel c_channel)</argsstring>
        <name>Channel</name>
        <param>
          <type><ref refid="classssh_1_1Session" kindref="compound">Session</ref> &amp;</type>
          <declname>ssh_session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>c_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="662" column="3" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="662" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1a43421cc29c20fbdc3f39a50381922343" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::Channel</definition>
        <argsstring>(const Channel &amp;)</argsstring>
        <name>Channel</name>
        <param>
          <type>const <ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="667" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1Channel_1ab6a037db0c2be962bcccff1ebde62b9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> &amp;</type>
        <definition>Channel&amp; ssh::Channel::operator=</definition>
        <argsstring>(const Channel &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classssh_1_1Channel" kindref="compound">Channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="668" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the <ref refid="classssh_1_1Channel" kindref="compound">ssh::Channel</ref> class describes the state of an SSH channel. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="22">
        <label>ssh_agent_struct</label>
        <link refid="structssh__agent__struct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>sock</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>count</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>ident</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>chacha20_poly1305_keysched</label>
        <link refid="structchacha20__poly1305__keysched"/>
        <childnode refid="31" relation="usage">
          <edgelabel>k1</edgelabel>
          <edgelabel>k2</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>ssh_gssapi_struct</label>
        <link refid="structssh__gssapi__struct"/>
        <childnode refid="5" relation="usage">
          <edgelabel>canonic_user</edgelabel>
          <edgelabel>service</edgelabel>
          <edgelabel>user</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>chacha_ctx</label>
        <link refid="structchacha__ctx"/>
      </node>
      <node id="14">
        <label>ssh_socket_struct</label>
        <link refid="structssh__socket__struct"/>
        <childnode refid="11" relation="usage">
          <edgelabel>callbacks</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>in_buffer</edgelabel>
          <edgelabel>out_buffer</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>poll_handle</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>packet_struct</label>
        <link refid="structpacket__struct"/>
      </node>
      <node id="37">
        <label>ssh::Session</label>
        <link refid="classssh_1_1Session"/>
        <childnode refid="3" relation="usage">
          <edgelabel>c_session</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>ssh_callbacks_struct</label>
        <link refid="structssh__callbacks__struct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_open_request_auth_agent_function</edgelabel>
          <edgelabel>channel_open_request_x11_function</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>global_request_function</edgelabel>
          <edgelabel>log_function</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>auth_function</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>ssh_kex_struct</label>
        <link refid="structssh__kex__struct"/>
        <childnode refid="5" relation="usage">
          <edgelabel>methods</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>cookie</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>ssh_kbdint_struct</label>
        <link refid="structssh__kbdint__struct"/>
        <childnode refid="5" relation="usage">
          <edgelabel>answers</edgelabel>
          <edgelabel>instruction</edgelabel>
          <edgelabel>name</edgelabel>
          <edgelabel>prompts</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>echo</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>ssh_poll_ctx_struct</label>
        <link refid="structssh__poll__ctx__struct"/>
        <childnode refid="18" relation="usage">
          <edgelabel>pollfds</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>pollptrs</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>ssh_buffer_struct</label>
        <link refid="structssh__buffer__struct"/>
      </node>
      <node id="11">
        <label>ssh_socket_callbacks_struct</label>
        <link refid="structssh__socket__callbacks__struct"/>
        <childnode refid="9" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>ssh_channel_struct</label>
        <link refid="structssh__channel__struct"/>
        <childnode refid="3" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>callbacks</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>counter</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>stderr_buffer</edgelabel>
          <edgelabel>stdout_buffer</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>ssh_iterator</label>
        <link refid="structssh__iterator"/>
        <childnode refid="24" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>ssh::Channel</label>
        <link refid="classssh_1_1Channel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>ssh_agent_state_struct</label>
        <link refid="structssh__agent__state__struct"/>
        <childnode refid="5" relation="usage">
          <edgelabel>comment</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>pubkey</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>ssh_key_struct</label>
        <link refid="structssh__key__struct"/>
        <childnode refid="20" relation="usage">
          <edgelabel>sk_application</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>type_c</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>ssh_timestamp</label>
        <link refid="structssh__timestamp"/>
      </node>
      <node id="28">
        <label>dh_keypair</label>
        <link refid="structdh__keypair"/>
      </node>
      <node id="3">
        <label>ssh_session_struct</label>
        <link refid="structssh__session__struct"/>
        <childnode refid="4" relation="usage">
          <edgelabel>kbdint</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>common</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>socket_callbacks</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>gssapi</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>in_packet</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>socket</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>dsa_key</edgelabel>
          <edgelabel>ecdsa_key</edgelabel>
          <edgelabel>ed25519_key</edgelabel>
          <edgelabel>rsa_key</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>banner</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ProxyCommand</edgelabel>
          <edgelabel>bindaddr</edgelabel>
          <edgelabel>clientbanner</edgelabel>
          <edgelabel>compressionlevel</edgelabel>
          <edgelabel>custombanner</edgelabel>
          <edgelabel>discon_msg</edgelabel>
          <edgelabel>global_knownhosts</edgelabel>
          <edgelabel>gss_client_identity</edgelabel>
          <edgelabel>gss_server_identity</edgelabel>
          <edgelabel>host</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>server_callbacks</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>agent</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>channels</edgelabel>
          <edgelabel>identity</edgelabel>
          <edgelabel>out_queue</edgelabel>
          <edgelabel>packet_callbacks</edgelabel>
          <edgelabel>ssh_message_list</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>current_crypto</edgelabel>
          <edgelabel>next_crypto</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>raw_counter</edgelabel>
          <edgelabel>socket_counter</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>default_poll_ctx</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>port</edgelabel>
          <edgelabel>timeout</edgelabel>
          <edgelabel>timeout_usec</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>auto_state</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>agent_state</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>in_buffer</edgelabel>
          <edgelabel>in_hashbuf</edgelabel>
          <edgelabel>out_buffer</edgelabel>
          <edgelabel>out_hashbuf</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>last_rekey_time</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>default_packet_callbacks</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>error_struct</label>
        <link refid="structerror__struct"/>
        <childnode refid="5" relation="usage">
          <edgelabel>error_buffer</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>ssh_cipher_struct</label>
        <link refid="structssh__cipher__struct"/>
        <childnode refid="30" relation="usage">
          <edgelabel>chacha20_schedule</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>blocksize</edgelabel>
          <edgelabel>keysize</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>const</label>
      </node>
      <node id="33">
        <label>ssh_auth_auto_state_struct</label>
        <link refid="structssh__auth__auto__state__struct"/>
        <childnode refid="19" relation="usage">
          <edgelabel>privkey</edgelabel>
          <edgelabel>pubkey</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>it</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>ssh_packet_callbacks_struct</label>
        <link refid="structssh__packet__callbacks__struct"/>
      </node>
      <node id="16">
        <label>ssh_poll_handle_struct</label>
        <link refid="structssh__poll__handle__struct"/>
        <childnode refid="3" relation="usage">
          <edgelabel>session</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>ctx</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>cb</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>ssh_counter_struct</label>
        <link refid="structssh__counter__struct"/>
      </node>
      <node id="18">
        <label>ssh_pollfd_struct</label>
        <link refid="structssh__pollfd__struct"/>
      </node>
      <node id="20">
        <label>ssh_string_struct</label>
        <link refid="structssh__string__struct"/>
        <childnode refid="6" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>unsigned</label>
      </node>
      <node id="7">
        <label>ssh_common_struct</label>
        <link refid="structssh__common__struct"/>
        <childnode refid="8" relation="usage">
          <edgelabel>callbacks</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>error</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>ssh_list</label>
        <link refid="structssh__list"/>
        <childnode refid="24" relation="usage">
          <edgelabel>end</edgelabel>
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>char</label>
      </node>
      <node id="21">
        <label>ssh_server_callbacks_struct</label>
        <link refid="structssh__server__callbacks__struct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>channel_open_request_session_function</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>auth_gssapi_mic_function</edgelabel>
          <edgelabel>auth_none_function</edgelabel>
          <edgelabel>auth_password_function</edgelabel>
          <edgelabel>auth_pubkey_function</edgelabel>
          <edgelabel>gssapi_accept_sec_ctx_function</edgelabel>
          <edgelabel>gssapi_verify_mic_function</edgelabel>
          <edgelabel>service_request_function</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>gssapi_select_oid_function</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>dh_ctx</label>
        <link refid="structdh__ctx"/>
        <childnode refid="28" relation="usage">
          <edgelabel>keypair</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>ssh_crypto_struct</label>
        <link refid="structssh__crypto__struct"/>
        <childnode refid="26" relation="usage">
          <edgelabel>client_kex</edgelabel>
          <edgelabel>server_kex</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>kex_methods</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>server_pubkey</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>dh_server_signature</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>dh_ctx</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>in_cipher</edgelabel>
          <edgelabel>out_cipher</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>decryptIV</edgelabel>
          <edgelabel>decryptMAC</edgelabel>
          <edgelabel>decryptkey</edgelabel>
          <edgelabel>encryptIV</edgelabel>
          <edgelabel>encryptMAC</edgelabel>
          <edgelabel>encryptkey</edgelabel>
          <edgelabel>hmacbuf</edgelabel>
          <edgelabel>secret_hash</edgelabel>
          <edgelabel>session_id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libssh-mirror/include/libssh/libsshpp.hpp" line="456" column="1" bodyfile="libssh-mirror/include/libssh/libsshpp.hpp" bodystart="456" bodyend="669"/>
    <listofallmembers>
      <member refid="classssh_1_1Channel_1a62000c16999e74525d296f0a1cb19c95" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>acceptX11</name></member>
      <member refid="classssh_1_1Channel_1a3adc48275cf34d211fb18514288f7c6f" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>changePtySize</name></member>
      <member refid="classssh_1_1Channel_1aa806495a09335ebaaf972957952300c2" prot="protected" virt="non-virtual"><scope>ssh::Channel</scope><name>channel</name></member>
      <member refid="classssh_1_1Channel_1a7f3db6b167f4cf9844b494ca32a74432" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>Channel</name></member>
      <member refid="classssh_1_1Channel_1a8a3c7d02c2a74bc3450978e12857c79c" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>Channel</name></member>
      <member refid="classssh_1_1Channel_1a43421cc29c20fbdc3f39a50381922343" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>Channel</name></member>
      <member refid="classssh_1_1Channel_1a383618db99c0ccd5c33b5e7bcd992e80" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>close</name></member>
      <member refid="classssh_1_1Channel_1acafe95cdd1e6ecf766e8f356d5db43ee" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>getCChannel</name></member>
      <member refid="classssh_1_1Channel_1aac8846105c4978af1313feb90f30d95e" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>getCSession</name></member>
      <member refid="classssh_1_1Channel_1aa9bd03b50afa6f6c0126fe490e17112e" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>getExitStatus</name></member>
      <member refid="classssh_1_1Channel_1a1c60382b561193baebb1d68be1219500" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>getSession</name></member>
      <member refid="classssh_1_1Channel_1a38880d18d0fc357be0f4f8b8ef1c92ef" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>isClosed</name></member>
      <member refid="classssh_1_1Channel_1a3bb4131d82cc033d75f65a5137053532" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>isEof</name></member>
      <member refid="classssh_1_1Channel_1aa2794c09f819f3132b241aa6b72b0664" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>isOpen</name></member>
      <member refid="classssh_1_1Channel_1ac5408b11bfb79ec58456660b8c8d98d8" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>openForward</name></member>
      <member refid="classssh_1_1Channel_1ab2764dbcf8b9c3168963536ba8b0ea1b" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>openSession</name></member>
      <member refid="classssh_1_1Channel_1ab6a037db0c2be962bcccff1ebde62b9f" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>operator=</name></member>
      <member refid="classssh_1_1Channel_1a661394ceb03e65bb7c02e040d23d6fc8" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>poll</name></member>
      <member refid="classssh_1_1Channel_1a5bfcd6a3986d8a88128a806c062bbf3a" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>read</name></member>
      <member refid="classssh_1_1Channel_1a5a03a0f25f2e7044bcc97df338f57c62" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>read</name></member>
      <member refid="classssh_1_1Channel_1a046e390e41453a66cd442a687efd6695" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>read</name></member>
      <member refid="classssh_1_1Channel_1aef42ee6d77142e1a8369e06173ea550d" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>readNonblocking</name></member>
      <member refid="classssh_1_1Channel_1a1493e5c618e62d41a0213e7d8ef1223b" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestEnv</name></member>
      <member refid="classssh_1_1Channel_1a4fd026ccfef501034741a206ec207329" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestExec</name></member>
      <member refid="classssh_1_1Channel_1aa0598bb62bba61428d2785a4e92b0b70" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestPty</name></member>
      <member refid="classssh_1_1Channel_1a9124161a6c69d544593b4f505c71813e" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestSendSignal</name></member>
      <member refid="classssh_1_1Channel_1a72bc638030fc1ffce0319fb037d8bfcb" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestShell</name></member>
      <member refid="classssh_1_1Channel_1afb6dc7a15ec6e68c8cfd12b66273260f" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestSubsystem</name></member>
      <member refid="classssh_1_1Channel_1a7421cfbdc01d05f999a55e05af9a593c" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestX11</name></member>
      <member refid="classssh_1_1Channel_1aba2abb07a061bb1c8509f159c284bc55" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>sendEof</name></member>
      <member refid="classssh_1_1Channel_1afbdd63a566878ce30072e785ca7e7740" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>Session</name></member>
      <member refid="classssh_1_1Channel_1a71d7d99293107c7e0bee53d4af0700ee" prot="protected" virt="non-virtual"><scope>ssh::Channel</scope><name>session</name></member>
      <member refid="classssh_1_1Channel_1a06cf7ffd971eff87783a169444fa09a2" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>write</name></member>
      <member refid="classssh_1_1Channel_1a10dc8f6c498117bfb4be5f3cdafd0a02" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>~Channel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
