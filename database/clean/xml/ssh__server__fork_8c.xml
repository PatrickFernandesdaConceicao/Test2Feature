<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ssh__server__fork_8c" kind="file" language="C++">
    <compoundname>ssh_server_fork.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="callbacks_8h" local="no">libssh/callbacks.h</includes>
    <includes refid="server_8h" local="no">libssh/server.h</includes>
    <includes refid="poll_8h" local="no">poll.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="21">
        <label>sys/stat.h</label>
      </node>
      <node id="8">
        <label>sys/select.h</label>
      </node>
      <node id="12">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="13">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>fcntl.h</label>
      </node>
      <node id="19">
        <label>sys/ioctl.h</label>
      </node>
      <node id="3">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>netdb.h</label>
      </node>
      <node id="7">
        <label>sys/types.h</label>
      </node>
      <node id="5">
        <label>unistd.h</label>
      </node>
      <node id="18">
        <label>signal.h</label>
      </node>
      <node id="1">
        <label>examples/ssh_server_fork.c</label>
        <link refid="ssh__server__fork_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>sys/wait.h</label>
      </node>
      <node id="4">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="22">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structchannel__data__struct" prot="public">channel_data_struct</innerclass>
    <innerclass refid="structsession__data__struct" prot="public">session_data_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" prot="public" static="no">
        <name>KEYS_FOLDER</name>
        <initializer>&quot;/etc/ssh/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="47" column="10" bodyfile="examples/ssh_server_fork.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssh__server__fork_8c_1a8bfbbf31b7d3c07215440d18a064b7f4" prot="public" static="no">
        <name>USER</name>
        <initializer>&quot;myuser&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="51" column="9" bodyfile="examples/ssh_server_fork.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssh__server__fork_8c_1aba5c54fadff8d880b1945dde87496e31" prot="public" static="no">
        <name>PASS</name>
        <initializer>&quot;mypassword&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="52" column="9" bodyfile="examples/ssh_server_fork.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" prot="public" static="no">
        <name>BUF_SIZE</name>
        <initializer>1048576</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="53" column="9" bodyfile="examples/ssh_server_fork.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssh__server__fork_8c_1a0bf82e1e80abb2904fc728e4f31c7f1f" prot="public" static="no">
        <name>SESSION_END</name>
        <initializer>(<ref refid="libssh_8h_1a3e86357d61758d53c8cb5d304597e7ec" kindref="member">SSH_CLOSED</ref> | <ref refid="libssh_8h_1a7d19d717827a40f33e5e58ef2b12fc1e" kindref="member">SSH_CLOSED_ERROR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="54" column="9" bodyfile="examples/ssh_server_fork.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssh__server__fork_8c_1a303b817c0b1acd54ff2a28f490f5a790" prot="public" static="no">
        <name>SFTP_SERVER_PATH</name>
        <initializer>&quot;/usr/lib/sftp-server&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="55" column="9" bodyfile="examples/ssh_server_fork.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ssh__server__fork_8c_1abb174a30bfb2b0af6014afcd8a2a256a" prot="public" static="no">
        <name>DEF_STR_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="76" column="9" bodyfile="examples/ssh_server_fork.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char authorizedkeys[DEF_STR_SIZE]</definition>
        <argsstring>[DEF_STR_SIZE]</argsstring>
        <name>authorizedkeys</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="77" column="6" bodyfile="examples/ssh_server_fork.c" bodystart="77" bodyend="-1"/>
        <referencedby refid="ssh__server__fork_8c_1a3189cc40d6bcad5ea3c2c1edf9327672" compoundref="ssh__server__fork_8c" startline="452" endline="497">auth_publickey</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ssh__server__fork_8c_1a582f7d74a4b101bb623693ede8bf29c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_default_keys</definition>
        <argsstring>(ssh_bind sshbind, int rsa_already_set, int dsa_already_set, int ecdsa_already_set)</argsstring>
        <name>set_default_keys</name>
        <param>
          <type><ref refid="group__libssh__server_1ga78a45672ca20ee757e09baf12ff458e4" kindref="member">ssh_bind</ref></type>
          <declname>sshbind</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rsa_already_set</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dsa_already_set</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ecdsa_already_set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="57" column="13" bodyfile="examples/ssh_server_fork.c" bodystart="57" bodyend="75"/>
        <references refid="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" compoundref="ssh__server__fork_8c" startline="47">KEYS_FOLDER</references>
        <references refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a774bda12cf0f9116d270c3b2ff8046d6" compoundref="server_8h" startline="43">SSH_BIND_OPTIONS_DSAKEY</references>
        <references refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a3f65d490316ddd6e27c668ee30f99093" compoundref="server_8h" startline="48">SSH_BIND_OPTIONS_ECDSAKEY</references>
        <references refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8ae77da31d38bc5ed42085f38ff2b83d85" compoundref="server_8h" startline="42">SSH_BIND_OPTIONS_HOSTKEY</references>
        <references refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a1d0f9a21e9c265587b2e63ef73adfa7b" compoundref="server_8h" startline="44">SSH_BIND_OPTIONS_RSAKEY</references>
        <references refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2">ssh_bind_options_set</references>
        <referencedby refid="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="ssh__server__fork_8c" startline="687" endline="775">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a2880309d25b1193ae10fd707547de1f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int data_function</definition>
        <argsstring>(ssh_session session, ssh_channel channel, void *data, uint32_t len, int is_stderr, void *userdata)</argsstring>
        <name>data_function</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_stderr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="257" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="257" bodyend="270"/>
        <references refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" compoundref="ssh__server__fork_8c" startline="239">channel_data_struct::child_stdin</references>
        <references refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" compoundref="ssh__server__fork_8c" startline="234">channel_data_struct::pid</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1af79e4f6282f26e5584625d457a45057d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pty_request</definition>
        <argsstring>(ssh_session session, ssh_channel channel, const char *term, int cols, int rows, int py, int px, void *userdata)</argsstring>
        <name>pty_request</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>term</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="272" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="272" bodyend="292"/>
        <references refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" compoundref="ssh__server__fork_8c" startline="236">channel_data_struct::pty_master</references>
        <references refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" compoundref="ssh__server__fork_8c" startline="237">channel_data_struct::pty_slave</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" compoundref="ssh__server__fork_8c" startline="246">channel_data_struct::winsize</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a3b5e6b26e560cc32e16b96f79d367a22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pty_resize</definition>
        <argsstring>(ssh_session session, ssh_channel channel, int cols, int rows, int py, int px, void *userdata)</argsstring>
        <name>pty_resize</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="294" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="294" bodyend="311"/>
        <references refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" compoundref="ssh__server__fork_8c" startline="236">channel_data_struct::pty_master</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" compoundref="ssh__server__fork_8c" startline="246">channel_data_struct::winsize</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int exec_pty</definition>
        <argsstring>(const char *mode, const char *command, struct channel_data_struct *cdata)</argsstring>
        <name>exec_pty</name>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>struct <ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref> *</type>
          <declname>cdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="313" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="313" bodyend="334"/>
        <references refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" compoundref="ssh__server__fork_8c" startline="239">channel_data_struct::child_stdin</references>
        <references refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" compoundref="ssh__server__fork_8c" startline="240">channel_data_struct::child_stdout</references>
        <references refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" compoundref="ssh__server__fork_8c" startline="234">channel_data_struct::pid</references>
        <references refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" compoundref="ssh__server__fork_8c" startline="236">channel_data_struct::pty_master</references>
        <references refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" compoundref="ssh__server__fork_8c" startline="237">channel_data_struct::pty_slave</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" compoundref="ssh__server__fork_8c" startline="392" endline="408">exec_request</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a6c7f69cc6520d8836124a5bcf846011b" compoundref="ssh__server__fork_8c" startline="410" endline="426">shell_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1aeee27e85b824b4c286ccd8a814494759" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int exec_nopty</definition>
        <argsstring>(const char *command, struct channel_data_struct *cdata)</argsstring>
        <name>exec_nopty</name>
        <param>
          <type>const char *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>struct <ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref> *</type>
          <declname>cdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="336" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="336" bodyend="390"/>
        <references refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" compoundref="ssh__server__fork_8c" startline="242">channel_data_struct::child_stderr</references>
        <references refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" compoundref="ssh__server__fork_8c" startline="239">channel_data_struct::child_stdin</references>
        <references refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" compoundref="ssh__server__fork_8c" startline="240">channel_data_struct::child_stdout</references>
        <references refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" compoundref="ssh__server__fork_8c" startline="234">channel_data_struct::pid</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" compoundref="ssh__server__fork_8c" startline="392" endline="408">exec_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int exec_request</definition>
        <argsstring>(ssh_session session, ssh_channel channel, const char *command, void *userdata)</argsstring>
        <name>exec_request</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="392" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="392" bodyend="408"/>
        <references refid="ssh__server__fork_8c_1aeee27e85b824b4c286ccd8a814494759" compoundref="ssh__server__fork_8c" startline="336" endline="390">exec_nopty</references>
        <references refid="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" compoundref="ssh__server__fork_8c" startline="313" endline="334">exec_pty</references>
        <references refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" compoundref="ssh__server__fork_8c" startline="234">channel_data_struct::pid</references>
        <references refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" compoundref="ssh__server__fork_8c" startline="236">channel_data_struct::pty_master</references>
        <references refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" compoundref="ssh__server__fork_8c" startline="237">channel_data_struct::pty_slave</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
        <referencedby refid="ssh__server__fork_8c_1aa3d77e94b509a13916fdbd3159355525" compoundref="ssh__server__fork_8c" startline="428" endline="435">subsystem_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a6c7f69cc6520d8836124a5bcf846011b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int shell_request</definition>
        <argsstring>(ssh_session session, ssh_channel channel, void *userdata)</argsstring>
        <name>shell_request</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="410" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="410" bodyend="426"/>
        <references refid="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" compoundref="ssh__server__fork_8c" startline="313" endline="334">exec_pty</references>
        <references refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" compoundref="ssh__server__fork_8c" startline="234">channel_data_struct::pid</references>
        <references refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" compoundref="ssh__server__fork_8c" startline="236">channel_data_struct::pty_master</references>
        <references refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" compoundref="ssh__server__fork_8c" startline="237">channel_data_struct::pty_slave</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1aa3d77e94b509a13916fdbd3159355525" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int subsystem_request</definition>
        <argsstring>(ssh_session session, ssh_channel channel, const char *subsystem, void *userdata)</argsstring>
        <name>subsystem_request</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>subsystem</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="428" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="428" bodyend="435"/>
        <references refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" compoundref="ssh__server__fork_8c" startline="392" endline="408">exec_request</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="ssh__server__fork_8c_1a303b817c0b1acd54ff2a28f490f5a790" compoundref="ssh__server__fork_8c" startline="55">SFTP_SERVER_PATH</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a76f0bec07ca6cdd84a803285d6bbe6f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int auth_password</definition>
        <argsstring>(ssh_session session, const char *user, const char *pass, void *userdata)</argsstring>
        <name>auth_password</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="437" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="437" bodyend="450"/>
        <references refid="structsession__data__struct_1ad38bd1d438b324a7e2eac78ca4671f26" compoundref="ssh__server__fork_8c" startline="253">session_data_struct::auth_attempts</references>
        <references refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" compoundref="ssh__server__fork_8c" startline="254">session_data_struct::authenticated</references>
        <references refid="ssh__server__fork_8c_1aba5c54fadff8d880b1945dde87496e31" compoundref="ssh__server__fork_8c" startline="52">PASS</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ac3d2d6d092a7adc147b7f859a0b252d2" compoundref="libssh_8h" startline="163">SSH_AUTH_DENIED</references>
        <references refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ab145398ebf554c3cc5d6acfb241c5235" compoundref="libssh_8h" startline="162">SSH_AUTH_SUCCESS</references>
        <references refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" compoundref="ssh__client_8c" startline="48">user</references>
        <references refid="ssh__server__fork_8c_1a8bfbbf31b7d3c07215440d18a064b7f4" compoundref="ssh__server__fork_8c" startline="51">USER</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a3189cc40d6bcad5ea3c2c1edf9327672" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int auth_publickey</definition>
        <argsstring>(ssh_session session, const char *user, struct ssh_key_struct *pubkey, char signature_state, void *userdata)</argsstring>
        <name>auth_publickey</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__key__struct" kindref="compound">ssh_key_struct</ref> *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>char</type>
          <declname>signature_state</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="452" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="452" bodyend="497"/>
        <references refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" compoundref="ssh__server__fork_8c" startline="254">session_data_struct::authenticated</references>
        <references refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" compoundref="ssh__server__fork_8c" startline="77">authorizedkeys</references>
        <references refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" compoundref="torture__crypto_8c" startline="9">key</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ac3d2d6d092a7adc147b7f859a0b252d2" compoundref="libssh_8h" startline="163">SSH_AUTH_DENIED</references>
        <references refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ab145398ebf554c3cc5d6acfb241c5235" compoundref="libssh_8h" startline="162">SSH_AUTH_SUCCESS</references>
        <references refid="group__libssh__pki_1ga4dc33945294c2bbd671365a9d3db8e2f" compoundref="pki_8c" startline="655" endline="690">ssh_key_cmp</references>
        <references refid="libssh_8h_1ad6ae03e8cb7f93c664a1af5d5a899f62ac0b1cce609c3a8935c8e633ad3ce7aec" compoundref="libssh_8h" startline="314">SSH_KEY_CMP_PUBLIC</references>
        <references refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" compoundref="pki_8c" startline="205" endline="210">ssh_key_free</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__pki_1gaffb08168b870fb9e86cc7649c8987eb0" compoundref="pki_8c" startline="1717" endline="1823">ssh_pki_import_pubkey_file</references>
        <references refid="libssh_8h_1a678ab8f3594510db5765fc626ed91e0ea3377056d987d34789b6104357ba7bfae" compoundref="libssh_8h" startline="217">SSH_PUBLICKEY_STATE_NONE</references>
        <references refid="libssh_8h_1a678ab8f3594510db5765fc626ed91e0ea8e0493fe8cfc727e755d8b18075170f6" compoundref="libssh_8h" startline="218">SSH_PUBLICKEY_STATE_VALID</references>
        <references refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" compoundref="ssh__client_8c" startline="48">user</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1abe10df22f22204a031b0ee56aa0b81bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref></type>
        <definition>static ssh_channel channel_open</definition>
        <argsstring>(ssh_session session, void *userdata)</argsstring>
        <name>channel_open</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="499" column="20" bodyfile="examples/ssh_server_fork.c" bodystart="499" bodyend="504"/>
        <references refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" compoundref="ssh__server__fork_8c" startline="252">session_data_struct::channel</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__channel_1gada8ccda7bf65165fe145d3096a252dcc" compoundref="channels_8c" startline="80" endline="129">ssh_channel_new</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a23b914ec9abba5d8d17b30e5cee99174" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int process_stdout</definition>
        <argsstring>(socket_t fd, int revents, void *userdata)</argsstring>
        <name>process_stdout</name>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="506" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="506" bodyend="519"/>
        <references refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" compoundref="ssh__server__fork_8c" startline="53">BUF_SIZE</references>
        <references refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" compoundref="ssh__server__fork_8c" startline="252">session_data_struct::channel</references>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="group__libssh__channel_1ga5d658df773ba854b35ff9f905341e2fb" compoundref="channels_8c" startline="1553" endline="1555">ssh_channel_write</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a592df9fe9f0aa8be394e01cd6ddb94ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int process_stderr</definition>
        <argsstring>(socket_t fd, int revents, void *userdata)</argsstring>
        <name>process_stderr</name>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="521" column="12" bodyfile="examples/ssh_server_fork.c" bodystart="521" bodyend="534"/>
        <references refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" compoundref="ssh__server__fork_8c" startline="53">BUF_SIZE</references>
        <references refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" compoundref="ssh__server__fork_8c" startline="252">session_data_struct::channel</references>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="group__libssh__channel_1ga7ebd0ed490ee4485c6d5feb7d22bc162" compoundref="channels_8c" startline="3438" endline="3440">ssh_channel_write_stderr</references>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_session</definition>
        <argsstring>(ssh_event event, ssh_session session)</argsstring>
        <name>handle_session</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="536" column="13" bodyfile="examples/ssh_server_fork.c" bodystart="536" bodyend="679"/>
        <references refid="structsession__data__struct_1ad38bd1d438b324a7e2eac78ca4671f26" compoundref="ssh__server__fork_8c" startline="253">session_data_struct::auth_attempts</references>
        <references refid="ssh__server__fork_8c_1a76f0bec07ca6cdd84a803285d6bbe6f6" compoundref="ssh__server__fork_8c" startline="437" endline="450">auth_password</references>
        <references refid="structssh__server__callbacks__struct_1aa83333fc0103df7852b3577f3debc2a4" compoundref="callbacks_8h" startline="329">ssh_server_callbacks_struct::auth_pubkey_function</references>
        <references refid="ssh__server__fork_8c_1a3189cc40d6bcad5ea3c2c1edf9327672" compoundref="ssh__server__fork_8c" startline="452" endline="497">auth_publickey</references>
        <references refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" compoundref="ssh__server__fork_8c" startline="254">session_data_struct::authenticated</references>
        <references refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" compoundref="ssh__server__fork_8c" startline="77">authorizedkeys</references>
        <references refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" compoundref="ssh__server__fork_8c" startline="252">session_data_struct::channel</references>
        <references refid="proxy_8c_1ab1ac2a91d14c557598f168f66ba130eb" compoundref="proxy_8c" startline="94">channel_cb</references>
        <references refid="ssh__server__fork_8c_1abe10df22f22204a031b0ee56aa0b81bf" compoundref="ssh__server__fork_8c" startline="499" endline="504">channel_open</references>
        <references refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" compoundref="ssh__server__fork_8c" startline="242">channel_data_struct::child_stderr</references>
        <references refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" compoundref="ssh__server__fork_8c" startline="239">channel_data_struct::child_stdin</references>
        <references refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" compoundref="ssh__server__fork_8c" startline="240">channel_data_struct::child_stdout</references>
        <references refid="ssh__server__fork_8c_1a2880309d25b1193ae10fd707547de1f2" compoundref="ssh__server__fork_8c" startline="257" endline="270">data_function</references>
        <references refid="structchannel__data__struct_1a53477d2c4dfdc9921803f90d40b8cbdf" compoundref="ssh__server__fork_8c" startline="244">channel_data_struct::event</references>
        <references refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" compoundref="ssh__server__fork_8c" startline="392" endline="408">exec_request</references>
        <references refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" compoundref="ssh__server__fork_8c" startline="234">channel_data_struct::pid</references>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="ssh__server__fork_8c_1a592df9fe9f0aa8be394e01cd6ddb94ca" compoundref="ssh__server__fork_8c" startline="521" endline="534">process_stderr</references>
        <references refid="ssh__server__fork_8c_1a23b914ec9abba5d8d17b30e5cee99174" compoundref="ssh__server__fork_8c" startline="506" endline="519">process_stdout</references>
        <references refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" compoundref="ssh__server__fork_8c" startline="236">channel_data_struct::pty_master</references>
        <references refid="ssh__server__fork_8c_1af79e4f6282f26e5584625d457a45057d" compoundref="ssh__server__fork_8c" startline="272" endline="292">pty_request</references>
        <references refid="ssh__server__fork_8c_1a3b5e6b26e560cc32e16b96f79d367a22" compoundref="ssh__server__fork_8c" startline="294" endline="311">pty_resize</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="ssh__server__fork_8c_1a0bf82e1e80abb2904fc728e4f31c7f1f" compoundref="ssh__server__fork_8c" startline="54">SESSION_END</references>
        <references refid="ssh__server__fork_8c_1a6c7f69cc6520d8836124a5bcf846011b" compoundref="ssh__server__fork_8c" startline="410" endline="426">shell_request</references>
        <references refid="libssh_8h_1ad10dd2f5826e2d92a30bd8af3404574d" compoundref="libssh_8h" startline="173">SSH_AUTH_METHOD_PASSWORD</references>
        <references refid="libssh_8h_1aff27d66c1f5ba3871e72b5a61573f44a" compoundref="libssh_8h" startline="174">SSH_AUTH_METHOD_PUBLICKEY</references>
        <references refid="group__libssh__callbacks_1gafe09b81e5346f0babe288dc38113d289" compoundref="callbacks_8h" startline="423">ssh_callbacks_init</references>
        <references refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" compoundref="channels_8c" startline="1285" endline="1336">ssh_channel_close</references>
        <references refid="group__libssh__channel_1gaaafcda943c96ddb91e5c28c0bdee7045" compoundref="channels_8c" startline="1566" endline="1571">ssh_channel_is_open</references>
        <references refid="group__libssh__server_1ga7325dd7617635e99f6e62921cb4e0406">ssh_channel_request_send_exit_status</references>
        <references refid="group__libssh__channel_1ga072f82fdf3e50514f747653af2c99004" compoundref="channels_8c" startline="1224" endline="1270">ssh_channel_send_eof</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" compoundref="poll_8c" startline="815" endline="845">ssh_event_add_fd</references>
        <references refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" compoundref="poll_8c" startline="884" endline="923">ssh_event_add_session</references>
        <references refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" compoundref="poll_8c" startline="957" endline="965">ssh_event_dopoll</references>
        <references refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" compoundref="poll_8c" startline="976" endline="1011">ssh_event_remove_fd</references>
        <references refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" compoundref="error_8c" startline="128" endline="132">ssh_get_error</references>
        <references refid="group__libssh__session_1gac199314d1646372c566ef14b9b6dca53" compoundref="session_8c" startline="752" endline="778">ssh_get_status</references>
        <references refid="group__libssh__server_1gab60c37350653eb3b65a99ac089c55830" compoundref="server_8c" startline="528" endline="563">ssh_handle_key_exchange</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__server_1gabbfb96c938e33a8dddebaff29f25e0c6" compoundref="server_8c" startline="521" endline="525">ssh_set_auth_methods</references>
        <references refid="group__libssh__callbacks_1gacea52d1373970a4922bf60e6b1680919" compoundref="callbacks_8c" startline="104" endline="107">ssh_set_channel_callbacks</references>
        <references refid="group__libssh__callbacks_1gaa321f33172cfa54eb50baaa963457a17" compoundref="callbacks_8c" startline="133" endline="147">ssh_set_server_callbacks</references>
        <references refid="ssh__server__fork_8c_1aa3d77e94b509a13916fdbd3159355525" compoundref="ssh__server__fork_8c" startline="428" endline="435">subsystem_request</references>
        <references refid="structssh__server__callbacks__struct_1ae9c5d78a7486a4a91c0ae0e863b2f776" compoundref="callbacks_8h" startline="310">ssh_server_callbacks_struct::userdata</references>
        <references refid="structssh__channel__callbacks__struct_1ae7a7877dfb4eca2a39e5f281832c15f0" compoundref="callbacks_8h" startline="789">ssh_channel_callbacks_struct::userdata</references>
        <referencedby refid="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="ssh__server__fork_8c" startline="687" endline="775">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a3abee2584deb5e89d9c92c58d033e422" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sigchld_handler</definition>
        <argsstring>(int signo)</argsstring>
        <name>sigchld_handler</name>
        <param>
          <type>int</type>
          <declname>signo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="682" column="13" bodyfile="examples/ssh_server_fork.c" bodystart="682" bodyend="685"/>
        <referencedby refid="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="ssh__server__fork_8c" startline="687" endline="775">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/ssh_server_fork.c" line="687" column="5" bodyfile="examples/ssh_server_fork.c" bodystart="687" bodyend="775"/>
        <references refid="keygen2_8c_1ab70c96531b1b652d70c221cfaf3207f3" compoundref="keygen2_8c" startline="290">argp</references>
        <references refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="ssh__server__fork_8c_1a582f7d74a4b101bb623693ede8bf29c3" compoundref="ssh__server__fork_8c" startline="57" endline="75">set_default_keys</references>
        <references refid="ssh__server__fork_8c_1a3abee2584deb5e89d9c92c58d033e422" compoundref="ssh__server__fork_8c" startline="682" endline="685">sigchld_handler</references>
        <references refid="group__libssh__server_1ga6609243446f1650243101e0a779dc822" compoundref="bind_8c" startline="553" endline="581">ssh_bind_accept</references>
        <references refid="group__libssh__server_1gaa7650d22d982a82bf328345c04948cdf" compoundref="bind_8c" startline="382" endline="421">ssh_bind_free</references>
        <references refid="group__libssh__server_1gaee5406f486d73aad765cab4c445f2f63" compoundref="bind_8c" startline="251" endline="300">ssh_bind_listen</references>
        <references refid="group__libssh__server_1ga4e4edf0cfd185a335d08e6e610aed77e" compoundref="bind_8c" startline="133" endline="145">ssh_bind_new</references>
        <references refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="672" endline="750">ssh_disconnect</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" compoundref="poll_8c" startline="1089" endline="1118">ssh_event_free</references>
        <references refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" compoundref="poll_8c" startline="760" endline="785">ssh_event_new</references>
        <references refid="group__libssh_1ga94a851d00248acde9cd7da084b491242" compoundref="init_8c" startline="218" endline="220">ssh_finalize</references>
        <references refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</references>
        <references refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" compoundref="error_8c" startline="128" endline="132">ssh_get_error</references>
        <references refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" compoundref="init_8c" startline="147" endline="149">ssh_init</references>
        <references refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>sample<sp/>implementation<sp/>of<sp/>a<sp/>libssh<sp/>based<sp/>SSH<sp/>server<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>2014<sp/>Audrius<sp/>Butkevicius</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>SSH<sp/>Library</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">You<sp/>are<sp/>free<sp/>to<sp/>copy<sp/>this<sp/>file,<sp/>modify<sp/>it<sp/>in<sp/>any<sp/>way,<sp/>consider<sp/>it<sp/>being<sp/>public</highlight></codeline>
<codeline lineno="8"><highlight class="comment">domain.<sp/>This<sp/>does<sp/>not<sp/>apply<sp/>to<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>library<sp/>though,<sp/>but<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment">allowed<sp/>to<sp/>cut-and-paste<sp/>working<sp/>code<sp/>from<sp/>this<sp/>file<sp/>to<sp/>any<sp/>license<sp/>of</highlight></codeline>
<codeline lineno="10"><highlight class="comment">program.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">The<sp/>goal<sp/>is<sp/>to<sp/>show<sp/>the<sp/>API<sp/>in<sp/>action.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="callbacks_8h" kindref="compound">libssh/callbacks.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="server_8h" kindref="compound">libssh/server.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="poll_8h" kindref="compound">poll.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ARGP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;argp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBUTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libutil.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PTY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pty.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UTMP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utmp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KEYS_FOLDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEYS_FOLDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEYS_FOLDER<sp/>&quot;/etc/ssh/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="ssh__server__fork_8c_1a8bfbbf31b7d3c07215440d18a064b7f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USER<sp/>&quot;myuser&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="ssh__server__fork_8c_1aba5c54fadff8d880b1945dde87496e31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PASS<sp/>&quot;mypassword&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUF_SIZE<sp/>1048576</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="ssh__server__fork_8c_1a0bf82e1e80abb2904fc728e4f31c7f1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SESSION_END<sp/>(SSH_CLOSED<sp/>|<sp/>SSH_CLOSED_ERROR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="ssh__server__fork_8c_1a303b817c0b1acd54ff2a28f490f5a790" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SFTP_SERVER_PATH<sp/>&quot;/usr/lib/sftp-server&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="ssh__server__fork_8c_1a582f7d74a4b101bb623693ede8bf29c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a582f7d74a4b101bb623693ede8bf29c3" kindref="member">set_default_keys</ref>(<ref refid="structssh__bind__struct" kindref="compound">ssh_bind</ref><sp/>sshbind,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rsa_already_set,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dsa_already_set,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ecdsa_already_set)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rsa_already_set)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a1d0f9a21e9c265587b2e63ef73adfa7b" kindref="member">SSH_BIND_OPTIONS_RSAKEY</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" kindref="member">KEYS_FOLDER</ref><sp/></highlight><highlight class="stringliteral">&quot;ssh_host_rsa_key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dsa_already_set)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a774bda12cf0f9116d270c3b2ff8046d6" kindref="member">SSH_BIND_OPTIONS_DSAKEY</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" kindref="member">KEYS_FOLDER</ref><sp/></highlight><highlight class="stringliteral">&quot;ssh_host_dsa_key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ecdsa_already_set)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a3f65d490316ddd6e27c668ee30f99093" kindref="member">SSH_BIND_OPTIONS_ECDSAKEY</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" kindref="member">KEYS_FOLDER</ref><sp/></highlight><highlight class="stringliteral">&quot;ssh_host_ecdsa_key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8ae77da31d38bc5ed42085f38ff2b83d85" kindref="member">SSH_BIND_OPTIONS_HOSTKEY</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a8ce5909282adcd9f949ad90e4af7d1bf" kindref="member">KEYS_FOLDER</ref><sp/></highlight><highlight class="stringliteral">&quot;ssh_host_ed25519_key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76" refid="ssh__server__fork_8c_1abb174a30bfb2b0af6014afcd8a2a256a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEF_STR_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>[<ref refid="ssh__server__fork_8c_1abb174a30bfb2b0af6014afcd8a2a256a" kindref="member">DEF_STR_SIZE</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ARGP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argp_program_version<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;libssh<sp/>server<sp/>example<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="libssh_8h_1a9ed5c4abd116001eb5ffedc39bf1f677" kindref="member">SSH_STRINGIFY</ref>(<ref refid="libssh_8h_1ae62377c24279c9870c0893bd845c7636" kindref="member">LIBSSH_VERSION</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argp_program_bug_address<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;libssh@libssh.org&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Program<sp/>documentation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="keygen2_8c_1af6164deb8a824f8cb2b9147cfc3174f5" kindref="member">doc</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;libssh<sp/>--<sp/>a<sp/>Secure<sp/>Shell<sp/>protocol<sp/>implementation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>description<sp/>of<sp/>the<sp/>arguments<sp/>we<sp/>accept.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>args_doc[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BINDADDR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>options<sp/>we<sp/>understand.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">argp_option<sp/><ref refid="structoptions" kindref="compound">options</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;port&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PORT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>port<sp/>to<sp/>bind.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hostkey&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>a<sp/>host<sp/>key.<sp/><sp/>Can<sp/>be<sp/>used<sp/>multiple<sp/>times.<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Implies<sp/>no<sp/>default<sp/>keys.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dsakey&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>dsa<sp/>key.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rsakey&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>rsa<sp/>key.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ecdsakey&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>ecdsa<sp/>key.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;authorizedkeys&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>authorized<sp/>keys<sp/>file.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;no-default-keys&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>set<sp/>default<sp/>key<sp/>locations.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.key<sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arg<sp/><sp/><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flags<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.doc<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Get<sp/>verbose<sp/>output.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.group<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{NULL,<sp/>0,<sp/>NULL,<sp/>0,<sp/>NULL,<sp/>0}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Parse<sp/>a<sp/>single<sp/>option.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>error_t<sp/><ref refid="keygen2_8c_1a35ee63236273ebb9325c444cacf00159" kindref="member">parse_opt</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>argp_state<sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>input<sp/>argument<sp/>from<sp/>argp_parse,<sp/>which<sp/>we</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>know<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>our<sp/>arguments<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__bind__struct" kindref="compound">ssh_bind</ref><sp/>sshbind<sp/>=<sp/>state-&gt;input;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no_default_keys<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rsa_already_set<sp/>=<sp/>0,<sp/>dsa_already_set<sp/>=<sp/>0,<sp/>ecdsa_already_set<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_default_keys<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a92818fd916f09f3d7bd49bfd8405db0d" kindref="member">SSH_BIND_OPTIONS_BINDPORT_STR</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a774bda12cf0f9116d270c3b2ff8046d6" kindref="member">SSH_BIND_OPTIONS_DSAKEY</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsa_already_set<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8ae77da31d38bc5ed42085f38ff2b83d85" kindref="member">SSH_BIND_OPTIONS_HOSTKEY</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can&apos;t<sp/>track<sp/>the<sp/>types<sp/>of<sp/>keys<sp/>being<sp/>added<sp/>with<sp/>this</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option,<sp/>so<sp/>let&apos;s<sp/>ensure<sp/>we<sp/>keep<sp/>the<sp/>keys<sp/>we&apos;re<sp/>adding</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>just<sp/>not<sp/>setting<sp/>the<sp/>default<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_default_keys<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a1d0f9a21e9c265587b2e63ef73adfa7b" kindref="member">SSH_BIND_OPTIONS_RSAKEY</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsa_already_set<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a3f65d490316ddd6e27c668ee30f99093" kindref="member">SSH_BIND_OPTIONS_ECDSAKEY</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ecdsa_already_set<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(<ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>,<sp/>arg,<sp/><ref refid="ssh__server__fork_8c_1abb174a30bfb2b0af6014afcd8a2a256a" kindref="member">DEF_STR_SIZE</ref>-1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8afe55cd745cf47eff7da6e1d5188946b7" kindref="member">SSH_BIND_OPTIONS_LOG_VERBOSITY_STR</ref>,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ARGP_KEY_ARG:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;arg_num<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Too<sp/>many<sp/>arguments.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argp_usage<sp/>(state);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga44466ff79106eb04e66d60d64b76d7e2" kindref="member">ssh_bind_options_set</ref>(sshbind,<sp/><ref refid="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a8e8c977e8e36dacf2e201cc23676276a" kindref="member">SSH_BIND_OPTIONS_BINDADDR</ref>,<sp/>arg);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ARGP_KEY_END:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;arg_num<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>enough<sp/>arguments.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argp_usage<sp/>(state);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!no_default_keys)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a582f7d74a4b101bb623693ede8bf29c3" kindref="member">set_default_keys</ref>(sshbind,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsa_already_set,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsa_already_set,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ecdsa_already_set);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ARGP_ERR_UNKNOWN;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Our<sp/>argp<sp/>parser.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="keygen2_8c_1ab70c96531b1b652d70c221cfaf3207f3" kindref="member">argp</ref><sp/><ref refid="keygen2_8c_1ab70c96531b1b652d70c221cfaf3207f3" kindref="member">argp</ref><sp/>=<sp/>{<ref refid="test__ssh__bind__accept__fd_8c_1ae9872726570c0d0d80fd77fd4b1de0b1" kindref="member">options</ref>,<sp/><ref refid="keygen2_8c_1a35ee63236273ebb9325c444cacf00159" kindref="member">parse_opt</ref>,<sp/>args_doc,<sp/><ref refid="keygen2_8c_1af6164deb8a824f8cb2b9147cfc3174f5" kindref="member">doc</ref>,<sp/>NULL,<sp/>NULL,<sp/>NULL};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_ARGP_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>userdata<sp/>struct<sp/>for<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="structchannel__data__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pid<sp/>of<sp/>the<sp/>child<sp/>process<sp/>the<sp/>channel<sp/>will<sp/>spawn.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/><ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>PTY<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>;</highlight></codeline>
<codeline lineno="237" refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>communication<sp/>with<sp/>the<sp/>child<sp/>process.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" kindref="member">child_stdin</ref>;</highlight></codeline>
<codeline lineno="240" refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>used<sp/>for<sp/>subsystem<sp/>and<sp/>exec<sp/>requests.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" kindref="member">child_stderr</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Event<sp/>which<sp/>is<sp/>used<sp/>to<sp/>poll<sp/>the<sp/>above<sp/>descriptors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structchannel__data__struct_1a53477d2c4dfdc9921803f90d40b8cbdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/><ref refid="structchannel__data__struct_1a53477d2c4dfdc9921803f90d40b8cbdf" kindref="member">event</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Terminal<sp/>size<sp/>struct.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref><sp/>*<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>userdata<sp/>struct<sp/>for<sp/>session.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="structsession__data__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>channel<sp/>the<sp/>session<sp/>will<sp/>allocate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/><ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>;</highlight></codeline>
<codeline lineno="253" refid="structsession__data__struct_1ad38bd1d438b324a7e2eac78ca4671f26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsession__data__struct_1ad38bd1d438b324a7e2eac78ca4671f26" kindref="member">auth_attempts</ref>;</highlight></codeline>
<codeline lineno="254" refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" kindref="member">authenticated</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="ssh__server__fork_8c_1a2880309d25b1193ae10fd707547de1f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a2880309d25b1193ae10fd707547de1f2" kindref="member">data_function</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_stderr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*)<sp/>userdata;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>channel;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>is_stderr;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0<sp/>||<sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>&lt;<sp/>1<sp/>||<sp/>kill(cdata-&gt;<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref>,<sp/>0)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write(cdata-&gt;<ref refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" kindref="member">child_stdin</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>data,<sp/>len);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="ssh__server__fork_8c_1af79e4f6282f26e5584625d457a45057d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1af79e4f6282f26e5584625d457a45057d" kindref="member">pty_request</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/>channel,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*term,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*)userdata;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>channel;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>term;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_row<sp/>=<sp/>rows;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_col<sp/>=<sp/>cols;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_xpixel<sp/>=<sp/>px;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_ypixel<sp/>=<sp/>py;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openpty(&amp;cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>,<sp/>&amp;cdata-&gt;<ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref>,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>pty\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="ssh__server__fork_8c_1a3b5e6b26e560cc32e16b96f79d367a22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a3b5e6b26e560cc32e16b96f79d367a22" kindref="member">pty_resize</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/>channel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*)userdata;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>channel;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_row<sp/>=<sp/>rows;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_col<sp/>=<sp/>cols;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_xpixel<sp/>=<sp/>px;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>-&gt;ws_ypixel<sp/>=<sp/>py;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ioctl(cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>,<sp/>TIOCSWINSZ,<sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a0e99694a19ac084c53021189001f52dd" kindref="member">winsize</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" kindref="member">exec_pty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(cdata-&gt;<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>=<sp/>fork())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(cdata-&gt;<ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fork\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(login_tty(cdata-&gt;<ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execl(</highlight><highlight class="stringliteral">&quot;/bin/sh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sh&quot;</highlight><highlight class="normal">,<sp/>mode,<sp/>command,<sp/>NULL);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(cdata-&gt;<ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pty<sp/>fd<sp/>is<sp/>bi-directional<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref><sp/>=<sp/>cdata-&gt;<ref refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" kindref="member">child_stdin</ref><sp/>=<sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="ssh__server__fork_8c_1aeee27e85b824b4c286ccd8a814494759" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1aeee27e85b824b4c286ccd8a814494759" kindref="member">exec_nopty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in[2],<sp/>out[2],<sp/>err[2];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>the<sp/>plumbing<sp/>to<sp/>be<sp/>able<sp/>to<sp/>talk<sp/>with<sp/>the<sp/>child<sp/>process.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe(in)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>stdin_failed;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe(out)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>stdout_failed;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe(err)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>stderr_failed;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(cdata-&gt;<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>=<sp/>fork())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fork_failed;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finish<sp/>the<sp/>plumbing<sp/>in<sp/>the<sp/>child<sp/>process.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(in[1]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(out[0]);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(err[0]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2(in[0],<sp/>STDIN_FILENO);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2(out[1],<sp/>STDOUT_FILENO);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2(err[1],<sp/>STDERR_FILENO);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(in[0]);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(out[1]);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(err[1]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>exec<sp/>the<sp/>requested<sp/>command.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execl(</highlight><highlight class="stringliteral">&quot;/bin/sh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,<sp/>command,<sp/>NULL);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>close(in[0]);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>close(out[1]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>close(err[1]);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" kindref="member">child_stdin</ref><sp/>=<sp/>in[1];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref><sp/>=<sp/>out[0];</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" kindref="member">child_stderr</ref><sp/>=<sp/>err[0];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">fork_failed:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>close(err[0]);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>close(err[1]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">stderr_failed:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>close(out[0]);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>close(out[1]);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">stdout_failed:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>close(in[0]);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>close(in[1]);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">stdin_failed:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" kindref="member">exec_request</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/>channel,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*)<sp/>userdata;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>channel;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdata-&gt;<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref><sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>cdata-&gt;<ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" kindref="member">exec_pty</ref>(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,<sp/>command,<sp/>cdata);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1aeee27e85b824b4c286ccd8a814494759" kindref="member">exec_nopty</ref>(command,<sp/>cdata);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="ssh__server__fork_8c_1a6c7f69cc6520d8836124a5bcf846011b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a6c7f69cc6520d8836124a5bcf846011b" kindref="member">shell_request</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/>channel,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*cdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>*)<sp/>userdata;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>channel;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdata-&gt;<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata-&gt;<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref><sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>cdata-&gt;<ref refid="structchannel__data__struct_1af78aae52dc150e76d8e39b60c3662016" kindref="member">pty_slave</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a9b8c7dac389188a5ea4fbd3087e2356b" kindref="member">exec_pty</ref>(</highlight><highlight class="stringliteral">&quot;-l&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>cdata);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Client<sp/>requested<sp/>a<sp/>shell<sp/>without<sp/>a<sp/>pty,<sp/>let&apos;s<sp/>pretend<sp/>we<sp/>allow<sp/>that<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="ssh__server__fork_8c_1aa3d77e94b509a13916fdbd3159355525" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1aa3d77e94b509a13916fdbd3159355525" kindref="member">subsystem_request</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/>channel,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*subsystem,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>subsystem<sp/>requests<sp/>behave<sp/>simillarly<sp/>to<sp/>exec<sp/>requests.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(subsystem,<sp/></highlight><highlight class="stringliteral">&quot;sftp&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" kindref="member">exec_request</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/>channel,<sp/><ref refid="ssh__server__fork_8c_1a303b817c0b1acd54ff2a28f490f5a790" kindref="member">SFTP_SERVER_PATH</ref>,<sp/>userdata);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="ssh__server__fork_8c_1a76f0bec07ca6cdd84a803285d6bbe6f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a76f0bec07ca6cdd84a803285d6bbe6f6" kindref="member">auth_password</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pass,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>*sdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>*)<sp/>userdata;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>,<sp/><ref refid="ssh__server__fork_8c_1a8bfbbf31b7d3c07215440d18a064b7f4" kindref="member">USER</ref>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>strcmp(pass,<sp/><ref refid="ssh__server__fork_8c_1aba5c54fadff8d880b1945dde87496e31" kindref="member">PASS</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdata-&gt;<ref refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" kindref="member">authenticated</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ab145398ebf554c3cc5d6acfb241c5235" kindref="member">SSH_AUTH_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>sdata-&gt;<ref refid="structsession__data__struct_1ad38bd1d438b324a7e2eac78ca4671f26" kindref="member">auth_attempts</ref>++;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ac3d2d6d092a7adc147b7f859a0b252d2" kindref="member">SSH_AUTH_DENIED</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="ssh__server__fork_8c_1a3189cc40d6bcad5ea3c2c1edf9327672" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a3189cc40d6bcad5ea3c2c1edf9327672" kindref="member">auth_publickey</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__key__struct" kindref="compound">ssh_key_struct</ref><sp/>*<ref refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" kindref="member">pubkey</ref>,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>signature_state,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>*sdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>*)<sp/>userdata;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" kindref="member">user</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signature_state<sp/>==<sp/><ref refid="libssh_8h_1a678ab8f3594510db5765fc626ed91e0ea3377056d987d34789b6104357ba7bfae" kindref="member">SSH_PUBLICKEY_STATE_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ab145398ebf554c3cc5d6acfb241c5235" kindref="member">SSH_AUTH_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signature_state<sp/>!=<sp/><ref refid="libssh_8h_1a678ab8f3594510db5765fc626ed91e0ea8e0493fe8cfc727e755d8b18075170f6" kindref="member">SSH_PUBLICKEY_STATE_VALID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ac3d2d6d092a7adc147b7f859a0b252d2" kindref="member">SSH_AUTH_DENIED</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>valid<sp/>so<sp/>far.<sp/><sp/>Now<sp/>look<sp/>through<sp/>authorized<sp/>keys<sp/>for<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structssh__key__struct" kindref="compound">ssh_key</ref><sp/><ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(<ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>,<sp/>&amp;buf)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__libssh__pki_1gaffb08168b870fb9e86cc7649c8987eb0" kindref="member">ssh_pki_import_pubkey_file</ref>(<sp/><ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>,<sp/>&amp;<ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref><sp/>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>)<sp/>||<sp/>(<ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref>==NULL))<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>import<sp/>public<sp/>key<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__libssh__pki_1ga4dc33945294c2bbd671365a9d3db8e2f" kindref="member">ssh_key_cmp</ref>(<sp/><ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref>,<sp/><ref refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" kindref="member">pubkey</ref>,<sp/><ref refid="libssh_8h_1ad6ae03e8cb7f93c664a1af5d5a899f62ac0b1cce609c3a8935c8e633ad3ce7aec" kindref="member">SSH_KEY_CMP_PUBLIC</ref><sp/>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" kindref="member">ssh_key_free</ref>(<ref refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdata-&gt;<ref refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" kindref="member">authenticated</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ab145398ebf554c3cc5d6acfb241c5235" kindref="member">SSH_AUTH_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>sdata-&gt;<ref refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" kindref="member">authenticated</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a5b35a5038ad8eac4a4e4c00c6239e6e2ac3d2d6d092a7adc147b7f859a0b252d2" kindref="member">SSH_AUTH_DENIED</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="ssh__server__fork_8c_1abe10df22f22204a031b0ee56aa0b81bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/><ref refid="ssh__server__fork_8c_1abe10df22f22204a031b0ee56aa0b81bf" kindref="member">channel_open</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>*sdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>*)<sp/>userdata;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>sdata-&gt;<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>=<sp/><ref refid="group__libssh__channel_1gada8ccda7bf65165fe145d3096a252dcc" kindref="member">ssh_channel_new</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdata-&gt;<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="ssh__server__fork_8c_1a23b914ec9abba5d8d17b30e5cee99174" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a23b914ec9abba5d8d17b30e5cee99174" kindref="member">process_stdout</ref>(<ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>revents,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/><ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>=<sp/>(<ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref>)<sp/>userdata;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(revents<sp/>&amp;<sp/><ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>read(fd,<sp/>buf,<sp/><ref refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga5d658df773ba854b35ff9f905341e2fb" kindref="member">ssh_channel_write</ref>(<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>,<sp/>buf,<sp/>n);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="ssh__server__fork_8c_1a592df9fe9f0aa8be394e01cd6ddb94ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a592df9fe9f0aa8be394e01cd6ddb94ca" kindref="member">process_stderr</ref>(<ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>revents,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<ref refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__channel__struct" kindref="compound">ssh_channel</ref><sp/><ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>=<sp/>(<ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref>)<sp/>userdata;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(revents<sp/>&amp;<sp/><ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>read(fd,<sp/>buf,<sp/><ref refid="ssh__server__fork_8c_1a6821bafc3c88dfb2e433a095df9940c6" kindref="member">BUF_SIZE</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga7ebd0ed490ee4485c6d5feb7d22bc162" kindref="member">ssh_channel_write_stderr</ref>(<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>,<sp/>buf,<sp/>n);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" kindref="member">handle_session</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Structure<sp/>for<sp/>storing<sp/>the<sp/>pty<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">winsize<sp/>wsize<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ws_row<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ws_col<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ws_xpixel<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ws_ypixel<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Our<sp/>struct<sp/>holding<sp/>information<sp/>about<sp/>the<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structchannel__data__struct" kindref="compound">channel_data_struct</ref><sp/>cdata<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pty_master<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pty_slave<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.child_stdin<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.child_stdout<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.child_stderr<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.event<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.winsize<sp/>=<sp/>&amp;wsize</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Our<sp/>struct<sp/>holding<sp/>information<sp/>about<sp/>the<sp/>session.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsession__data__struct" kindref="compound">session_data_struct</ref><sp/>sdata<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.auth_attempts<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.authenticated<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__channel__callbacks__struct" kindref="compound">ssh_channel_callbacks_struct</ref><sp/><ref refid="proxy_8c_1ab1ac2a91d14c557598f168f66ba130eb" kindref="member">channel_cb</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structssh__channel__callbacks__struct_1ae7a7877dfb4eca2a39e5f281832c15f0" kindref="member">userdata</ref><sp/>=<sp/>&amp;cdata,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_pty_request_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1af79e4f6282f26e5584625d457a45057d" kindref="member">pty_request</ref>,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_pty_window_change_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1a3b5e6b26e560cc32e16b96f79d367a22" kindref="member">pty_resize</ref>,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_shell_request_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1a6c7f69cc6520d8836124a5bcf846011b" kindref="member">shell_request</ref>,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_exec_request_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1a3c55edc4d5c216ee698b1d427752a54f" kindref="member">exec_request</ref>,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_data_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1a2880309d25b1193ae10fd707547de1f2" kindref="member">data_function</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_subsystem_request_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1aa3d77e94b509a13916fdbd3159355525" kindref="member">subsystem_request</ref></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__server__callbacks__struct" kindref="compound">ssh_server_callbacks_struct</ref><sp/>server_cb<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structssh__server__callbacks__struct_1ae9c5d78a7486a4a91c0ae0e863b2f776" kindref="member">userdata</ref><sp/>=<sp/>&amp;sdata,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.auth_password_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1a76f0bec07ca6cdd84a803285d6bbe6f6" kindref="member">auth_password</ref>,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.channel_open_request_session_function<sp/>=<sp/><ref refid="ssh__server__fork_8c_1abe10df22f22204a031b0ee56aa0b81bf" kindref="member">channel_open</ref>,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ssh__server__fork_8c_1a97eb023b380f06b9ab9aa38bdffc90d3" kindref="member">authorizedkeys</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_cb.<ref refid="structssh__server__callbacks__struct_1aa83333fc0103df7852b3577f3debc2a4" kindref="member">auth_pubkey_function</ref><sp/>=<sp/><ref refid="ssh__server__fork_8c_1a3189cc40d6bcad5ea3c2c1edf9327672" kindref="member">auth_publickey</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1gabbfb96c938e33a8dddebaff29f25e0c6" kindref="member">ssh_set_auth_methods</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1ad10dd2f5826e2d92a30bd8af3404574d" kindref="member">SSH_AUTH_METHOD_PASSWORD</ref><sp/>|<sp/><ref refid="libssh_8h_1aff27d66c1f5ba3871e72b5a61573f44a" kindref="member">SSH_AUTH_METHOD_PUBLICKEY</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1gabbfb96c938e33a8dddebaff29f25e0c6" kindref="member">ssh_set_auth_methods</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/><ref refid="libssh_8h_1ad10dd2f5826e2d92a30bd8af3404574d" kindref="member">SSH_AUTH_METHOD_PASSWORD</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__callbacks_1gafe09b81e5346f0babe288dc38113d289" kindref="member">ssh_callbacks_init</ref>(&amp;server_cb);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__callbacks_1gafe09b81e5346f0babe288dc38113d289" kindref="member">ssh_callbacks_init</ref>(&amp;<ref refid="proxy_8c_1ab1ac2a91d14c557598f168f66ba130eb" kindref="member">channel_cb</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__callbacks_1gaa321f33172cfa54eb50baaa963457a17" kindref="member">ssh_set_server_callbacks</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>,<sp/>&amp;server_cb);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__server_1gab60c37350653eb3b65a99ac089c55830" kindref="member">ssh_handle_key_exchange</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>!=<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" kindref="member">ssh_get_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" kindref="member">ssh_event_add_session</ref>(event,<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sdata.<ref refid="structsession__data__struct_1ae3add9b6b67b021d287949200420dc39" kindref="member">authenticated</ref><sp/>==<sp/>0<sp/>||<sp/>sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>user<sp/>has<sp/>used<sp/>up<sp/>all<sp/>attempts,<sp/>or<sp/>if<sp/>he<sp/>hasn&apos;t<sp/>been<sp/>able<sp/>to</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>authenticate<sp/>in<sp/>10<sp/>seconds<sp/>(n<sp/>*<sp/>100ms),<sp/>disconnect.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdata.<ref refid="structsession__data__struct_1ad38bd1d438b324a7e2eac78ca4671f26" kindref="member">auth_attempts</ref><sp/>&gt;=<sp/>3<sp/>||<sp/>n<sp/>&gt;=<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" kindref="member">ssh_event_dopoll</ref>(event,<sp/>100)<sp/>==<sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" kindref="member">ssh_get_error</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__callbacks_1gacea52d1373970a4922bf60e6b1680919" kindref="member">ssh_set_channel_callbacks</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>,<sp/>&amp;<ref refid="proxy_8c_1ab1ac2a91d14c557598f168f66ba130eb" kindref="member">channel_cb</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Poll<sp/>the<sp/>main<sp/>event<sp/>which<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>session,<sp/>the<sp/>channel<sp/>and</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>even<sp/>our<sp/>child<sp/>process&apos;s<sp/>stdout/stderr<sp/>(once<sp/>it&apos;s<sp/>started).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" kindref="member">ssh_event_dopoll</ref>(event,<sp/>-1)<sp/>==<sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" kindref="member">ssh_channel_close</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>child<sp/>process&apos;s<sp/>stdout/stderr<sp/>has<sp/>been<sp/>registered<sp/>with<sp/>the<sp/>event,</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>the<sp/>child<sp/>process<sp/>hasn&apos;t<sp/>started<sp/>yet,<sp/>continue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata.<ref refid="structchannel__data__struct_1a53477d2c4dfdc9921803f90d40b8cbdf" kindref="member">event</ref><sp/>!=<sp/>NULL<sp/>||<sp/>cdata.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Executed<sp/>only<sp/>once,<sp/>once<sp/>the<sp/>child<sp/>process<sp/>starts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdata.<ref refid="structchannel__data__struct_1a53477d2c4dfdc9921803f90d40b8cbdf" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>stdout<sp/>valid,<sp/>add<sp/>stdout<sp/>to<sp/>be<sp/>monitored<sp/>by<sp/>the<sp/>poll<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata.<ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" kindref="member">ssh_event_add_fd</ref>(event,<sp/>cdata.<ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref>,<sp/><ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref>,<sp/><ref refid="ssh__server__fork_8c_1a23b914ec9abba5d8d17b30e5cee99174" kindref="member">process_stdout</ref>,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>)<sp/>!=<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>register<sp/>stdout<sp/>to<sp/>poll<sp/>context\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" kindref="member">ssh_channel_close</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>stderr<sp/>valid,<sp/>add<sp/>stderr<sp/>to<sp/>be<sp/>monitored<sp/>by<sp/>the<sp/>poll<sp/>event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata.<ref refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" kindref="member">child_stderr</ref><sp/>!=<sp/>-1){</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" kindref="member">ssh_event_add_fd</ref>(event,<sp/>cdata.<ref refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" kindref="member">child_stderr</ref>,<sp/><ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref>,<sp/><ref refid="ssh__server__fork_8c_1a592df9fe9f0aa8be394e01cd6ddb94ca" kindref="member">process_stderr</ref>,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>)<sp/>!=<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>register<sp/>stderr<sp/>to<sp/>poll<sp/>context\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" kindref="member">ssh_channel_close</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="group__libssh__channel_1gaaafcda943c96ddb91e5c28c0bdee7045" kindref="member">ssh_channel_is_open</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cdata.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>==<sp/>0<sp/>||<sp/>waitpid(cdata.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref>,<sp/>&amp;<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/>WNOHANG)<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>close(cdata.<ref refid="structchannel__data__struct_1a64a9bcbe3244d90fb131fe5a0b8da36e" kindref="member">pty_master</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>close(cdata.<ref refid="structchannel__data__struct_1acef35428a7d34b325bbe0d957c1092b3" kindref="member">child_stdin</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>close(cdata.<ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>close(cdata.<ref refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" kindref="member">child_stderr</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>descriptors<sp/>from<sp/>the<sp/>polling<sp/>context,<sp/>since<sp/>they<sp/>are<sp/>now</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>closed,<sp/>they<sp/>will<sp/>always<sp/>trigger<sp/>during<sp/>the<sp/>poll<sp/>calls.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" kindref="member">ssh_event_remove_fd</ref>(event,<sp/>cdata.<ref refid="structchannel__data__struct_1ae3c68ee824a79f48226a4a91930923fd" kindref="member">child_stdout</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" kindref="member">ssh_event_remove_fd</ref>(event,<sp/>cdata.<ref refid="structchannel__data__struct_1a5547024527f70d0e0c660dbc94dd41b6" kindref="member">child_stderr</ref>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>child<sp/>process<sp/>exited.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kill(cdata.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref>,<sp/>0)<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>WIFEXITED(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>))<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>WEXITSTATUS(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1ga7325dd7617635e99f6e62921cb4e0406" kindref="member">ssh_channel_request_send_exit_status</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>,<sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>client<sp/>terminated<sp/>the<sp/>channel<sp/>or<sp/>the<sp/>process<sp/>did<sp/>not<sp/>exit<sp/>nicely,</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>only<sp/>if<sp/>something<sp/>has<sp/>been<sp/>forked.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kill(cdata.<ref refid="structchannel__data__struct_1a41ec5aa80dab7780ce2ecc4934731d7b" kindref="member">pid</ref>,<sp/>SIGKILL);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga072f82fdf3e50514f747653af2c99004" kindref="member">ssh_channel_send_eof</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" kindref="member">ssh_channel_close</ref>(sdata.<ref refid="structsession__data__struct_1aa665273835df3b9971a19113b0e0b0fe" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>up<sp/>to<sp/>5<sp/>seconds<sp/>for<sp/>the<sp/>client<sp/>to<sp/>terminate<sp/>the<sp/>session.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>50<sp/>&amp;&amp;<sp/>(<ref refid="group__libssh__session_1gac199314d1646372c566ef14b9b6dca53" kindref="member">ssh_get_status</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>&amp;<sp/><ref refid="ssh__server__fork_8c_1a0bf82e1e80abb2904fc728e4f31c7f1f" kindref="member">SESSION_END</ref>)<sp/>==<sp/>0;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" kindref="member">ssh_event_dopoll</ref>(event,<sp/>100);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SIGCHLD<sp/>handler<sp/>for<sp/>cleaning<sp/>up<sp/>dead<sp/>children.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="ssh__server__fork_8c_1a3abee2584deb5e89d9c92c58d033e422" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a3abee2584deb5e89d9c92c58d033e422" kindref="member">sigchld_handler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signo)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>signo;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(waitpid(-1,<sp/>NULL,<sp/>WNOHANG)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__bind__struct" kindref="compound">ssh_bind</ref><sp/>sshbind;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sa;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>SIGCHLD<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>sa.sa_handler<sp/>=<sp/><ref refid="ssh__server__fork_8c_1a3abee2584deb5e89d9c92c58d033e422" kindref="member">sigchld_handler</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;sa.sa_mask);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>sa.sa_flags<sp/>=<sp/>SA_RESTART<sp/>|<sp/>SA_NOCLDSTOP;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigaction(SIGCHLD,<sp/>&amp;sa,<sp/>NULL)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>register<sp/>SIGCHLD<sp/>handler\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" kindref="member">ssh_init</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;ssh_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>sshbind<sp/>=<sp/><ref refid="group__libssh__server_1ga4e4edf0cfd185a335d08e6e610aed77e" kindref="member">ssh_bind_new</ref>();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sshbind<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;ssh_bind_new<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ARGP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>argp_parse(&amp;<ref refid="keygen2_8c_1ab70c96531b1b652d70c221cfaf3207f3" kindref="member">argp</ref>,<sp/>argc,<sp/>argv,<sp/>0,<sp/>0,<sp/>sshbind);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>argc;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>argv;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a582f7d74a4b101bb623693ede8bf29c3" kindref="member">set_default_keys</ref>(sshbind,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_ARGP_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__libssh__server_1gaee5406f486d73aad765cab4c445f2f63" kindref="member">ssh_bind_listen</ref>(sshbind)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" kindref="member">ssh_get_error</ref>(sshbind));</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref><sp/>=<sp/><ref refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" kindref="member">ssh_new</ref>();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>session\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Blocks<sp/>until<sp/>there<sp/>is<sp/>a<sp/>new<sp/>incoming<sp/>connection.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__libssh__server_1ga6609243446f1650243101e0a779dc822" kindref="member">ssh_bind_accept</ref>(sshbind,<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>!=<sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(fork())<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>SIGCHLD<sp/>handler<sp/>inherited<sp/>from<sp/>parent.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa.sa_handler<sp/>=<sp/>SIG_DFL;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigaction(SIGCHLD,<sp/>&amp;sa,<sp/>NULL);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>socket<sp/>binding,<sp/>which<sp/>allows<sp/>us<sp/>to<sp/>restart<sp/>the</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>parent<sp/>process,<sp/>without<sp/>terminating<sp/>existing<sp/>sessions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1gaa7650d22d982a82bf328345c04948cdf" kindref="member">ssh_bind_free</ref>(sshbind);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" kindref="member">ssh_event_new</ref>();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Blocks<sp/>until<sp/>the<sp/>SSH<sp/>session<sp/>ends<sp/>by<sp/>either</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>child<sp/>process<sp/>exiting,<sp/>or<sp/>client<sp/>disconnecting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" kindref="member">handle_session</ref>(event,<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" kindref="member">ssh_event_free</ref>(event);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>polling<sp/>context\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" kindref="member">ssh_free</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fork\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" kindref="member">ssh_get_error</ref>(sshbind));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>session<sp/>has<sp/>been<sp/>passed<sp/>to<sp/>a<sp/>child<sp/>fork,<sp/>do<sp/>some<sp/>cleaning</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>up<sp/>at<sp/>the<sp/>parent<sp/>process.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" kindref="member">ssh_free</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__server_1gaa7650d22d982a82bf328345c04948cdf" kindref="member">ssh_bind_free</ref>(sshbind);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh_1ga94a851d00248acde9cd7da084b491242" kindref="member">ssh_finalize</ref>();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="examples/ssh_server_fork.c"/>
  </compounddef>
</doxygen>
