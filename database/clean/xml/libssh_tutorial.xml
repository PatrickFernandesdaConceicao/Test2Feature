<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="libssh_tutorial" kind="page">
    <compoundname>libssh_tutorial</compoundname>
    <title>The Tutorial</title>
    <innerpage refid="libssh_tutor_guided_tour">Chapter 1: A typical SSH session</innerpage>
    <innerpage refid="libssh_tutor_authentication">Chapter 2: A deeper insight on authentication</innerpage>
    <innerpage refid="libssh_tutor_shell">Chapter 3: Opening a remote shell</innerpage>
    <innerpage refid="libssh_tutor_command">Chapter 4: Passing a remote command</innerpage>
    <innerpage refid="libssh_tutor_sftp">Chapter 5: The SFTP subsystem</innerpage>
    <innerpage refid="libssh_tutor_scp">Chapter 6: The SCP subsystem</innerpage>
    <innerpage refid="libssh_tutor_forwarding">Chapter 7: Forwarding connections (tunnel)</innerpage>
    <innerpage refid="libssh_tutor_threads">Chapter 8: Threads with libssh</innerpage>
    <innerpage refid="libssh_tutor_todo">To be done</innerpage>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="libssh_tutorial_1introduction">
<title>Introduction</title>
<para>libssh is a C library that enables you to write a program that uses the SSH protocol. With it, you can remotely execute programs, transfer files, or use a secure and transparent tunnel for your remote programs. The SSH protocol is encrypted, ensures data integrity, and provides strong means of authenticating both the server of the client. The library hides a lot of technical details from the SSH protocol, but this does not mean that you should not try to know about and understand these details.</para>
<para>libssh is a Free Software / Open Source project. The libssh library is distributed under LGPL license. The libssh project has nothing to do with &quot;libssh2&quot;, which is a completely different and independent project.</para>
<para>libssh can run on top of either libgcrypt or libcrypto, two general-purpose cryptographic libraries.</para>
<para>This tutorial concentrates for its main part on the &quot;client&quot; side of libssh. To learn how to accept incoming SSH connections (how to write a SSH server), you&apos;ll have to jump to the end of this document.</para>
<para>This tutorial describes libssh version 0.5.0. This version is a little different from the 0.4.X series. However, the examples should work with little changes on versions like 0.4.2 and later.</para>
<para>Table of contents:</para>
<para><ref refid="libssh_tutor_guided_tour" kindref="compound">Chapter 1: A typical SSH session</ref></para>
<para><ref refid="libssh_tutor_authentication" kindref="compound">Chapter 2: A deeper insight on authentication</ref></para>
<para><ref refid="libssh_tutor_shell" kindref="compound">Chapter 3: Opening a remote shell</ref></para>
<para><ref refid="libssh_tutor_command" kindref="compound">Chapter 4: Passing a remote command</ref></para>
<para><ref refid="libssh_tutor_sftp" kindref="compound">Chapter 5: The SFTP subsystem</ref></para>
<para><ref refid="libssh_tutor_scp" kindref="compound">Chapter 6: The SCP subsystem</ref></para>
<para><ref refid="libssh_tutor_forwarding" kindref="compound">Chapter 7: Forwarding connections (tunnel)</ref></para>
<para><ref refid="libssh_tutor_threads" kindref="compound">Chapter 8: Threads with libssh</ref></para>
<para><ref refid="libssh_tutor_todo" kindref="compound">To be done</ref> </para>
</sect1>
    </detaileddescription>
    <location file="doc/introduction.dox"/>
  </compounddef>
</doxygen>
