<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="threads_8h" kind="file" language="C++">
    <compoundname>threads.h</compoundname>
    <includes refid="libssh_8h" local="no">libssh/libssh.h</includes>
    <includes refid="callbacks_8h" local="no">libssh/callbacks.h</includes>
    <includedby refid="client_8c" local="yes">src/client.c</includedby>
    <includedby refid="init_8c" local="yes">src/init.c</includedby>
    <includedby refid="threads_2libcrypto_8c" local="yes">src/threads/libcrypto.c</includedby>
    <includedby refid="threads_2libgcrypt_8c" local="yes">src/threads/libgcrypt.c</includedby>
    <includedby refid="mbedtls_8c" local="yes">src/threads/mbedtls.c</includedby>
    <includedby refid="noop_8c" local="yes">src/threads/noop.c</includedby>
    <includedby refid="pthread_8c" local="yes">src/threads/pthread.c</includedby>
    <includedby refid="winlocks_8c" local="yes">src/threads/winlocks.c</includedby>
    <includedby refid="threads_8c" local="yes">src/threads.c</includedby>
    <incdepgraph>
      <node id="6">
        <label>sys/select.h</label>
      </node>
      <node id="11">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>netdb.h</label>
      </node>
      <node id="5">
        <label>sys/types.h</label>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="2">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/libssh/threads.h</label>
        <link refid="threads_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>src/threads/winlocks.c</label>
        <link refid="winlocks_8c"/>
      </node>
      <node id="2">
        <label>src/client.c</label>
        <link refid="client_8c"/>
      </node>
      <node id="3">
        <label>src/init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="6">
        <label>src/threads/mbedtls.c</label>
        <link refid="mbedtls_8c"/>
      </node>
      <node id="10">
        <label>src/threads.c</label>
        <link refid="threads_8c"/>
      </node>
      <node id="5">
        <label>src/threads/libgcrypt.c</label>
        <link refid="threads_2libgcrypt_8c"/>
      </node>
      <node id="4">
        <label>src/threads/libcrypto.c</label>
        <link refid="threads_2libcrypto_8c"/>
      </node>
      <node id="8">
        <label>src/threads/pthread.c</label>
        <link refid="pthread_8c"/>
      </node>
      <node id="1">
        <label>include/libssh/threads.h</label>
        <link refid="threads_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/threads/noop.c</label>
        <link refid="noop_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="threads_8h_1a9f6ff98ba0f86df8541d59abebb4ecca" prot="public" static="no">
        <name>SSH_MUTEX</name>
        <initializer>void *</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="47" column="10" bodyfile="include/libssh/threads.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="threads_8h_1a6c8ebc8ff34715ac61df6788f61740ed" prot="public" static="no">
        <name>SSH_MUTEX_STATIC_INIT</name>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="48" column="9" bodyfile="include/libssh/threads.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__threads_1ga93b7aed4984dbd58a270f1f7eb37f5cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_threads_init</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="52" column="5" bodyfile="src/threads.c" bodystart="42" bodyend="64" declfile="include/libssh/threads.h" declline="52" declcolumn="5"/>
        <references refid="threads_8h_1afd0bbff265662efc9c2d58696c1ab964" compoundref="threads_2libcrypto_8c" startline="69" endline="108">crypto_thread_init</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="callbacks_8h_1a25ff5f57d28805c38a3b3c2a0195294f" compoundref="noop_8c" startline="65" endline="68">ssh_threads_get_default</references>
        <references refid="group__libssh__threads_1gadb5d9b7e2606d95be69a5ad23fc4d073" compoundref="threads_8c" startline="36">user_callbacks</references>
        <referencedby refid="init_8c_1a0e416b0a7b37b1617da57235bbe4f8f9" compoundref="init_8c" startline="56" endline="102">libssh_constructor</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1ga892b23f2f4ffe4e33290a83802faa265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_threads_finalize</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_finalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="53" column="6" bodyfile="src/threads.c" bodystart="66" bodyend="69" declfile="include/libssh/threads.h" declline="53" declcolumn="6"/>
        <references refid="threads_8h_1a0dd4a730d1a2d370ea7e10392d2abc70" compoundref="threads_2libcrypto_8c" startline="110" endline="131">crypto_thread_finalize</references>
        <referencedby refid="group__libssh_1ga9cd03971bbbc8003c357f74881ac8812" compoundref="init_8c" startline="151" endline="183">_ssh_finalize</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gac9431f068584276377498dea938cf951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_threads_get_type</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_get_type</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="54" column="12" bodyfile="src/threads.c" bodystart="87" bodyend="93" declfile="include/libssh/threads.h" declline="54" declcolumn="12"/>
        <references refid="structssh__threads__callbacks__struct_1a2def4dea77cca2a4e12db84c42590a0c" compoundref="callbacks_8h" startline="928">ssh_threads_callbacks_struct::type</references>
        <references refid="group__libssh__threads_1gadb5d9b7e2606d95be69a5ad23fc4d073" compoundref="threads_8c" startline="36">user_callbacks</references>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
      </memberdef>
      <memberdef kind="function" id="threads_8h_1a7e6e0bd6f7d7607f0ddd2e85d0cf5be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_mutex_lock</definition>
        <argsstring>(SSH_MUTEX *mutex)</argsstring>
        <name>ssh_mutex_lock</name>
        <param>
          <type><ref refid="threads_8h_1a9f6ff98ba0f86df8541d59abebb4ecca" kindref="member">SSH_MUTEX</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="56" column="6" bodyfile="src/threads/noop.c" bodystart="51" bodyend="56" declfile="include/libssh/threads.h" declline="56" declcolumn="6"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <referencedby refid="group__libssh_1ga9cd03971bbbc8003c357f74881ac8812" compoundref="init_8c" startline="151" endline="183">_ssh_finalize</referencedby>
        <referencedby refid="init_8c_1a0e416b0a7b37b1617da57235bbe4f8f9" compoundref="init_8c" startline="56" endline="102">libssh_constructor</referencedby>
      </memberdef>
      <memberdef kind="function" id="threads_8h_1a0bddf62c454d664389e5b672eb94270d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_mutex_unlock</definition>
        <argsstring>(SSH_MUTEX *mutex)</argsstring>
        <name>ssh_mutex_unlock</name>
        <param>
          <type><ref refid="threads_8h_1a9f6ff98ba0f86df8541d59abebb4ecca" kindref="member">SSH_MUTEX</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="57" column="6" bodyfile="src/threads/noop.c" bodystart="58" bodyend="63" declfile="include/libssh/threads.h" declline="57" declcolumn="6"/>
        <referencedby refid="group__libssh_1ga9cd03971bbbc8003c357f74881ac8812" compoundref="init_8c" startline="151" endline="183">_ssh_finalize</referencedby>
        <referencedby refid="init_8c_1a0e416b0a7b37b1617da57235bbe4f8f9" compoundref="init_8c" startline="56" endline="102">libssh_constructor</referencedby>
      </memberdef>
      <memberdef kind="function" id="threads_8h_1ae82446dfb825a472a4fbff79d305b213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__threads__callbacks__struct" kindref="compound">ssh_threads_callbacks_struct</ref> *</type>
        <definition>struct ssh_threads_callbacks_struct* ssh_threads_get_default</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_get_default</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a pointer to the appropriate callbacks structure for the environment, to be used with ssh_threads_set_callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to a <ref refid="structssh__threads__callbacks__struct" kindref="compound">ssh_threads_callbacks_struct</ref> to be used with ssh_threads_set_callbacks.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__threads_1gaf473af3fbae6f1bb0e249fd1d079ff68" kindref="member">ssh_threads_set_callbacks</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="59" column="35" bodyfile="src/threads/noop.c" bodystart="65" bodyend="68" declfile="include/libssh/threads.h" declline="59" declcolumn="35"/>
        <references refid="winlocks_8c_1a5582a77620a83e2e3ba8969a4130e61c" compoundref="winlocks_8c" startline="70">ssh_threads_winlock</references>
      </memberdef>
      <memberdef kind="function" id="threads_8h_1afd0bbff265662efc9c2d58696c1ab964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int crypto_thread_init</definition>
        <argsstring>(struct ssh_threads_callbacks_struct *user_callbacks)</argsstring>
        <name>crypto_thread_init</name>
        <param>
          <type>struct <ref refid="structssh__threads__callbacks__struct" kindref="compound">ssh_threads_callbacks_struct</ref> *</type>
          <declname>user_callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="60" column="5" bodyfile="src/threads/libcrypto.c" bodystart="69" bodyend="108" declfile="include/libssh/threads.h" declline="60" declcolumn="5"/>
        <references refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" compoundref="ssh__client_8c" startline="69">cb</references>
        <references refid="threads_2libcrypto_8c_1a0dd4a730d1a2d370ea7e10392d2abc70" compoundref="threads_2libcrypto_8c" startline="110" endline="131">crypto_thread_finalize</references>
        <references refid="threads_2libgcrypt_8c_1a4c0b4588cabda2587aa9c1d1981ddf75" compoundref="threads_2libgcrypt_8c" startline="41">gcrypt_threads_callbacks</references>
        <references refid="threads_2libcrypto_8c_1a3d540b23375b07ba3035bdf924c010e2" compoundref="threads_2libcrypto_8c" startline="48" endline="58">libcrypto_lock_callback</references>
        <references refid="threads_2libcrypto_8c_1a721baef37bce744f820cd2ae598615bb" compoundref="threads_2libcrypto_8c" startline="44">libcrypto_mutexes</references>
        <references refid="structssh__threads__callbacks__struct_1a663775d1473e2db5633617fd5cb1bea1" compoundref="callbacks_8h" startline="930">ssh_threads_callbacks_struct::mutex_destroy</references>
        <references refid="structssh__threads__callbacks__struct_1a65f82f117f07c8751c8b4efc88a2fc73" compoundref="callbacks_8h" startline="929">ssh_threads_callbacks_struct::mutex_init</references>
        <references refid="structssh__threads__callbacks__struct_1ae35475609fb2bfb059bbffeec2dba118" compoundref="callbacks_8h" startline="931">ssh_threads_callbacks_struct::mutex_lock</references>
        <references refid="structssh__threads__callbacks__struct_1adb4af663da1b9ac9896e41e09b507eda" compoundref="callbacks_8h" startline="932">ssh_threads_callbacks_struct::mutex_unlock</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="structssh__threads__callbacks__struct_1ae662453842916aeb417f6f13a48a1855" compoundref="callbacks_8h" startline="933">ssh_threads_callbacks_struct::thread_id</references>
        <references refid="structssh__threads__callbacks__struct_1a2def4dea77cca2a4e12db84c42590a0c" compoundref="callbacks_8h" startline="928">ssh_threads_callbacks_struct::type</references>
        <references refid="threads_2libcrypto_8c_1adb5d9b7e2606d95be69a5ad23fc4d073" compoundref="threads_2libcrypto_8c" startline="42">user_callbacks</references>
        <referencedby refid="group__libssh__threads_1ga93b7aed4984dbd58a270f1f7eb37f5cd" compoundref="threads_8c" startline="42" endline="64">ssh_threads_init</referencedby>
        <referencedby refid="group__libssh__threads_1gaf473af3fbae6f1bb0e249fd1d079ff68" compoundref="threads_8c" startline="71" endline="85">ssh_threads_set_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="threads_8h_1a0dd4a730d1a2d370ea7e10392d2abc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crypto_thread_finalize</definition>
        <argsstring>(void)</argsstring>
        <name>crypto_thread_finalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/threads.h" line="61" column="6" bodyfile="src/threads/libcrypto.c" bodystart="110" bodyend="131" declfile="include/libssh/threads.h" declline="61" declcolumn="6"/>
        <references refid="threads_2libcrypto_8c_1a721baef37bce744f820cd2ae598615bb" compoundref="threads_2libcrypto_8c" startline="44">libcrypto_mutexes</references>
        <references refid="structssh__threads__callbacks__struct_1a663775d1473e2db5633617fd5cb1bea1" compoundref="callbacks_8h" startline="930">ssh_threads_callbacks_struct::mutex_destroy</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="threads_2libcrypto_8c_1adb5d9b7e2606d95be69a5ad23fc4d073" compoundref="threads_2libcrypto_8c" startline="42">user_callbacks</references>
        <referencedby refid="threads_8h_1afd0bbff265662efc9c2d58696c1ab964" compoundref="threads_2libcrypto_8c" startline="69" endline="108">crypto_thread_init</referencedby>
        <referencedby refid="group__libssh__threads_1ga892b23f2f4ffe4e33290a83802faa265" compoundref="threads_8c" startline="66" endline="69">ssh_threads_finalize</referencedby>
        <referencedby refid="group__libssh__threads_1gaf473af3fbae6f1bb0e249fd1d079ff68" compoundref="threads_8c" startline="71" endline="85">ssh_threads_set_callbacks</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>SSH<sp/>Library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>by<sp/>Aris<sp/>Adamantiadis</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>THREADS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREADS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libssh_8h" kindref="compound">libssh/libssh.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="callbacks_8h" kindref="compound">libssh/callbacks.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_PTHREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_MUTEX<sp/>pthread_mutex_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_MUTEX_STATIC_INIT<sp/>PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_MUTEX_STATIC_INIT<sp/>PTHREAD_MUTEX_INITIALIZER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined<sp/>_WIN32)<sp/>||<sp/>(defined<sp/>_WIN64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winbase.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_MUTEX<sp/>CRITICAL_SECTION<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_MUTEX_STATIC_INIT<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="threads_8h_1a9f6ff98ba0f86df8541d59abebb4ecca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SSH_MUTEX<sp/>void<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="threads_8h_1a6c8ebc8ff34715ac61df6788f61740ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_MUTEX_STATIC_INIT<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__threads_1ga93b7aed4984dbd58a270f1f7eb37f5cd" kindref="member">ssh_threads_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__threads_1ga892b23f2f4ffe4e33290a83802faa265" kindref="member">ssh_threads_finalize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__libssh__threads_1gac9431f068584276377498dea938cf951" kindref="member">ssh_threads_get_type</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_8h_1a7e6e0bd6f7d7607f0ddd2e85d0cf5be6" kindref="member">ssh_mutex_lock</ref>(<ref refid="threads_8h_1a9f6ff98ba0f86df8541d59abebb4ecca" kindref="member">SSH_MUTEX</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_8h_1a0bddf62c454d664389e5b672eb94270d" kindref="member">ssh_mutex_unlock</ref>(<ref refid="threads_8h_1a9f6ff98ba0f86df8541d59abebb4ecca" kindref="member">SSH_MUTEX</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__threads__callbacks__struct" kindref="compound">ssh_threads_callbacks_struct</ref><sp/>*<ref refid="threads_8h_1ae82446dfb825a472a4fbff79d305b213" kindref="member">ssh_threads_get_default</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="threads_8h_1afd0bbff265662efc9c2d58696c1ab964" kindref="member">crypto_thread_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__threads__callbacks__struct" kindref="compound">ssh_threads_callbacks_struct</ref><sp/>*<ref refid="threads_2libcrypto_8c_1adb5d9b7e2606d95be69a5ad23fc4d073" kindref="member">user_callbacks</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="threads_8h_1a0dd4a730d1a2d370ea7e10392d2abc70" kindref="member">crypto_thread_finalize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>THREADS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/libssh/threads.h"/>
  </compounddef>
</doxygen>
