<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="torture__bytearray_8c" kind="file" language="C++">
    <compoundname>torture_bytearray.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="torture_8h" local="yes">torture.h</includes>
    <includes refid="bytearray_8h" local="yes">libssh/bytearray.h</includes>
    <incdepgraph>
      <node id="27">
        <label>libssh/packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="16">
        <label>sys/select.h</label>
      </node>
      <node id="10">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>setjmp.h</label>
      </node>
      <node id="4">
        <label>torture.h</label>
        <link refid="torture_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libssh/misc.h</label>
        <link refid="misc_8h"/>
      </node>
      <node id="23">
        <label>torture_cmocka.h</label>
        <link refid="torture__cmocka_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libssh/sftp.h</label>
        <link refid="sftp_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>netdb.h</label>
      </node>
      <node id="26">
        <label>libssh/kex.h</label>
        <link refid="kex_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libssh/libmbedcrypto.h</label>
        <link refid="libmbedcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libssh/channels.h</label>
        <link refid="channels_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/types.h</label>
      </node>
      <node id="38">
        <label>libssh/bytearray.h</label>
        <link refid="bytearray_8h"/>
      </node>
      <node id="30">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
      <node id="35">
        <label>libssh/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cmocka.h</label>
      </node>
      <node id="13">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="33">
        <label>libssh/auth.h</label>
        <link refid="auth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tests_config.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>tests/unittests/torture_bytearray.c</label>
        <link refid="torture__bytearray_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>libssh/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="torture__bytearray_8c_1a6f5083bb695c307d46392a3787333c01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_pull_le_u8</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_pull_le_u8</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="8" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="8" bodyend="34"/>
        <references refid="bytearray_8h_1ad3a1c4a14703d47da026109acec04b4e" compoundref="bytearray_8h" startline="33">PULL_LE_U8</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1ac048840a6c57a34528fb38cbb82523b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_pull_le_u16</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_pull_le_u16</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="36" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="36" bodyend="65"/>
        <references refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" compoundref="bytearray_8h" startline="36">PULL_LE_U16</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1afacc0f208f00d765f9a71e9d7327f8e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_pull_le_u32</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_pull_le_u32</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="67" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="67" bodyend="118"/>
        <references refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" compoundref="bytearray_8h" startline="39">PULL_LE_U32</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1ac64c223133fde5bb693b6b82f017025e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_le_u8</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_le_u8</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="120" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="120" bodyend="132"/>
        <references refid="bytearray_8h_1abf664aaf2b4d7498efd515d56e8f6154" compoundref="bytearray_8h" startline="46">PUSH_LE_U8</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1ab4df1d8a6915e68bd596f09c95e572f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_le_u16</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_le_u16</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="134" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="134" bodyend="151"/>
        <references refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" compoundref="bytearray_8h" startline="36">PULL_LE_U16</references>
        <references refid="bytearray_8h_1a17f35d325deebd7ee4fff852c099174d" compoundref="bytearray_8h" startline="49">PUSH_LE_U16</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a32efeb351e4c2c9594984bc6c70eb125" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_le_u32</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_le_u32</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="153" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="153" bodyend="174"/>
        <references refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" compoundref="bytearray_8h" startline="39">PULL_LE_U32</references>
        <references refid="bytearray_8h_1a5a3fd63f87f236c7c759099e99276cb5" compoundref="bytearray_8h" startline="52">PUSH_LE_U32</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a903baf795c29baac69136b7da161d42d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_le_u64</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_le_u64</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="176" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="176" bodyend="192"/>
        <references refid="bytearray_8h_1a78e25aa27414512d33a37c5dd1143860" compoundref="bytearray_8h" startline="42">PULL_LE_U64</references>
        <references refid="bytearray_8h_1a37c77be7a7ff557815d8f85bb477e229" compoundref="bytearray_8h" startline="55">PUSH_LE_U64</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1ae127be5784fe93b3b957a12f11cb4570" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_pull_be_u8</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_pull_be_u8</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="196" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="196" bodyend="222"/>
        <references refid="bytearray_8h_1af4b95a03c272fb8116ac36a1e1b8143e" compoundref="bytearray_8h" startline="64">PULL_BE_U8</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a955a2771ab93912b228b0d86d050f0a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_pull_be_u16</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_pull_be_u16</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="224" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="224" bodyend="253"/>
        <references refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" compoundref="bytearray_8h" startline="67">PULL_BE_U16</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a3bd65ae9cfe5fd8576eaddf57f6be1d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_pull_be_u32</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_pull_be_u32</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="255" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="255" bodyend="306"/>
        <references refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" compoundref="bytearray_8h" startline="70">PULL_BE_U32</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a57eef5e3cbdfa36bb66677eb7682f41b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_be_u8</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_be_u8</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="308" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="308" bodyend="320"/>
        <references refid="bytearray_8h_1a4aef7c717c87afad42f450be636eefd7" compoundref="bytearray_8h" startline="78">PUSH_BE_U8</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a48b49614202d0835547bbcaa8684b2c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_be_u16</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_be_u16</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="322" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="322" bodyend="339"/>
        <references refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" compoundref="bytearray_8h" startline="67">PULL_BE_U16</references>
        <references refid="bytearray_8h_1a28a501547ef7ae03a4b0c435e1997600" compoundref="bytearray_8h" startline="81">PUSH_BE_U16</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1ada9b26b71da4e3e6e316d2753475cf48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_be_u32</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_be_u32</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="341" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="341" bodyend="362"/>
        <references refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" compoundref="bytearray_8h" startline="70">PULL_BE_U32</references>
        <references refid="bytearray_8h_1a3bd053f9b249edd7b46f6d7282c5d6e6" compoundref="bytearray_8h" startline="84">PUSH_BE_U32</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a7c89330c8d763a1024f79c768ecb93ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_push_be_u64</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_push_be_u64</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="364" column="13" bodyfile="tests/unittests/torture_bytearray.c" bodystart="364" bodyend="380"/>
        <references refid="bytearray_8h_1a72e8468942d3e26e6eecd1e2ccf7f7dd" compoundref="bytearray_8h" startline="73">PULL_BE_U64</references>
        <references refid="bytearray_8h_1a78e25aa27414512d33a37c5dd1143860" compoundref="bytearray_8h" startline="42">PULL_LE_U64</references>
        <references refid="bytearray_8h_1a6c1ba7966b4392c4de12b10d73248ec1" compoundref="bytearray_8h" startline="87">PUSH_BE_U64</references>
        <references refid="bytearray_8h_1a37c77be7a7ff557815d8f85bb477e229" compoundref="bytearray_8h" startline="55">PUSH_LE_U64</references>
        <referencedby refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__bytearray_8c" startline="382" endline="410">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int torture_run_tests</definition>
        <argsstring>(void)</argsstring>
        <name>torture_run_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_bytearray.c" line="382" column="5" bodyfile="tests/unittests/torture_bytearray.c" bodystart="382" bodyend="410"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture_8h_1a83a80a48ac2740bea8d15d95aec7e966" compoundref="torture_8h" startline="120">torture_filter_tests</references>
        <references refid="torture__bytearray_8c_1a955a2771ab93912b228b0d86d050f0a5" compoundref="torture__bytearray_8c" startline="224" endline="253">torture_pull_be_u16</references>
        <references refid="torture__bytearray_8c_1a3bd65ae9cfe5fd8576eaddf57f6be1d2" compoundref="torture__bytearray_8c" startline="255" endline="306">torture_pull_be_u32</references>
        <references refid="torture__bytearray_8c_1ae127be5784fe93b3b957a12f11cb4570" compoundref="torture__bytearray_8c" startline="196" endline="222">torture_pull_be_u8</references>
        <references refid="torture__bytearray_8c_1ac048840a6c57a34528fb38cbb82523b0" compoundref="torture__bytearray_8c" startline="36" endline="65">torture_pull_le_u16</references>
        <references refid="torture__bytearray_8c_1afacc0f208f00d765f9a71e9d7327f8e2" compoundref="torture__bytearray_8c" startline="67" endline="118">torture_pull_le_u32</references>
        <references refid="torture__bytearray_8c_1a6f5083bb695c307d46392a3787333c01" compoundref="torture__bytearray_8c" startline="8" endline="34">torture_pull_le_u8</references>
        <references refid="torture__bytearray_8c_1a48b49614202d0835547bbcaa8684b2c2" compoundref="torture__bytearray_8c" startline="322" endline="339">torture_push_be_u16</references>
        <references refid="torture__bytearray_8c_1ada9b26b71da4e3e6e316d2753475cf48" compoundref="torture__bytearray_8c" startline="341" endline="362">torture_push_be_u32</references>
        <references refid="torture__bytearray_8c_1a7c89330c8d763a1024f79c768ecb93ae" compoundref="torture__bytearray_8c" startline="364" endline="380">torture_push_be_u64</references>
        <references refid="torture__bytearray_8c_1a57eef5e3cbdfa36bb66677eb7682f41b" compoundref="torture__bytearray_8c" startline="308" endline="320">torture_push_be_u8</references>
        <references refid="torture__bytearray_8c_1ab4df1d8a6915e68bd596f09c95e572f9" compoundref="torture__bytearray_8c" startline="134" endline="151">torture_push_le_u16</references>
        <references refid="torture__bytearray_8c_1a32efeb351e4c2c9594984bc6c70eb125" compoundref="torture__bytearray_8c" startline="153" endline="174">torture_push_le_u32</references>
        <references refid="torture__bytearray_8c_1a903baf795c29baac69136b7da161d42d" compoundref="torture__bytearray_8c" startline="176" endline="192">torture_push_le_u64</references>
        <references refid="torture__bytearray_8c_1ac64c223133fde5bb693b6b82f017025e" compoundref="torture__bytearray_8c" startline="120" endline="132">torture_push_le_u8</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="torture_8h" kindref="compound">torture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bytearray_8h" kindref="compound">libssh/bytearray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="torture__bytearray_8c_1a6f5083bb695c307d46392a3787333c01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a6f5083bb695c307d46392a3787333c01" kindref="member">torture_pull_le_u8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[2]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1ad3a1c4a14703d47da026109acec04b4e" kindref="member">PULL_LE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1ad3a1c4a14703d47da026109acec04b4e" kindref="member">PULL_LE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xf;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1ad3a1c4a14703d47da026109acec04b4e" kindref="member">PULL_LE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xf);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1ad3a1c4a14703d47da026109acec04b4e" kindref="member">PULL_LE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1ad3a1c4a14703d47da026109acec04b4e" kindref="member">PULL_LE_U8</ref>(data,<sp/>1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="torture__bytearray_8c_1ac048840a6c57a34528fb38cbb82523b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1ac048840a6c57a34528fb38cbb82523b0" kindref="member">torture_pull_le_u16</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[2]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>result;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0x00ff);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff00);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xffff);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="torture__bytearray_8c_1afacc0f208f00d765f9a71e9d7327f8e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1afacc0f208f00d765f9a71e9d7327f8e2" kindref="member">torture_pull_le_u32</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[4]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>result;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0x00ff);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff00);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff0000);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff000000);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xffffffff);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="torture__bytearray_8c_1ac64c223133fde5bb693b6b82f017025e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1ac64c223133fde5bb693b6b82f017025e" kindref="member">torture_push_le_u8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[4]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data2[4]<sp/>=<sp/>{42,<sp/>42,<sp/>42,<sp/>42};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1abf664aaf2b4d7498efd515d56e8f6154" kindref="member">PUSH_LE_U8</ref>(data,<sp/>0,<sp/>42);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1abf664aaf2b4d7498efd515d56e8f6154" kindref="member">PUSH_LE_U8</ref>(data,<sp/>1,<sp/>42);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1abf664aaf2b4d7498efd515d56e8f6154" kindref="member">PUSH_LE_U8</ref>(data,<sp/>2,<sp/>42);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1abf664aaf2b4d7498efd515d56e8f6154" kindref="member">PUSH_LE_U8</ref>(data,<sp/>3,<sp/>42);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(data,<sp/>data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="torture__bytearray_8c_1ab4df1d8a6915e68bd596f09c95e572f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1ab4df1d8a6915e68bd596f09c95e572f9" kindref="member">torture_push_le_u16</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[4]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data2[4]<sp/>=<sp/>{0xa6,<sp/>0x7f,<sp/>0x2a,<sp/>0x00};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>result;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a17f35d325deebd7ee4fff852c099174d" kindref="member">PUSH_LE_U16</ref>(data,<sp/>0,<sp/>32678);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a17f35d325deebd7ee4fff852c099174d" kindref="member">PUSH_LE_U16</ref>(data,<sp/>2,<sp/>42);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(data,<sp/>data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a28715dd938bb25451502d7a112a63c5b" kindref="member">PULL_LE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>32678);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="torture__bytearray_8c_1a32efeb351e4c2c9594984bc6c70eb125" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a32efeb351e4c2c9594984bc6c70eb125" kindref="member">torture_push_le_u32</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[8]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data2[8]<sp/>=<sp/>{0xa6,<sp/>0x7f,<sp/>0x00,<sp/>0x00,<sp/>0x2a,<sp/>0x00,<sp/>0x00,<sp/>0x00};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>result;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a5a3fd63f87f236c7c759099e99276cb5" kindref="member">PUSH_LE_U32</ref>(data,<sp/>0,<sp/>32678);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a5a3fd63f87f236c7c759099e99276cb5" kindref="member">PUSH_LE_U32</ref>(data,<sp/>4,<sp/>42);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(data,<sp/>data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>4);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>32678);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a5a3fd63f87f236c7c759099e99276cb5" kindref="member">PUSH_LE_U32</ref>(data,<sp/>0,<sp/>0xfffefffe);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1aa1796af5933f98885942d8e1fb9c6039" kindref="member">PULL_LE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xfffefffe);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="torture__bytearray_8c_1a903baf795c29baac69136b7da161d42d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a903baf795c29baac69136b7da161d42d" kindref="member">torture_push_le_u64</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>result;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a37c77be7a7ff557815d8f85bb477e229" kindref="member">PUSH_LE_U64</ref>(data,<sp/>0,<sp/>32678);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a78e25aa27414512d33a37c5dd1143860" kindref="member">PULL_LE_U64</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>32678);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a37c77be7a7ff557815d8f85bb477e229" kindref="member">PUSH_LE_U64</ref>(data,<sp/>0,<sp/>0xfffefffefffefffeUL);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a78e25aa27414512d33a37c5dd1143860" kindref="member">PULL_LE_U64</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xfffefffefffefffeUL);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>BIG<sp/>ENDIAN<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="torture__bytearray_8c_1ae127be5784fe93b3b957a12f11cb4570" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1ae127be5784fe93b3b957a12f11cb4570" kindref="member">torture_pull_be_u8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[2]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1af4b95a03c272fb8116ac36a1e1b8143e" kindref="member">PULL_BE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1af4b95a03c272fb8116ac36a1e1b8143e" kindref="member">PULL_BE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xf;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1af4b95a03c272fb8116ac36a1e1b8143e" kindref="member">PULL_BE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xf);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1af4b95a03c272fb8116ac36a1e1b8143e" kindref="member">PULL_BE_U8</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1af4b95a03c272fb8116ac36a1e1b8143e" kindref="member">PULL_BE_U8</ref>(data,<sp/>1);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="torture__bytearray_8c_1a955a2771ab93912b228b0d86d050f0a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a955a2771ab93912b228b0d86d050f0a5" kindref="member">torture_pull_be_u16</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[2]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>result;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0x00ff);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff00);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xffff);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="torture__bytearray_8c_1a3bd65ae9cfe5fd8576eaddf57f6be1d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a3bd65ae9cfe5fd8576eaddf57f6be1d2" kindref="member">torture_pull_be_u32</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[4]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>result;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x2a;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0x00ff);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff00);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff0000);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xff000000);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xffffffff);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="torture__bytearray_8c_1a57eef5e3cbdfa36bb66677eb7682f41b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a57eef5e3cbdfa36bb66677eb7682f41b" kindref="member">torture_push_be_u8</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[4]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data2[4]<sp/>=<sp/>{42,<sp/>42,<sp/>42,<sp/>42};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a4aef7c717c87afad42f450be636eefd7" kindref="member">PUSH_BE_U8</ref>(data,<sp/>0,<sp/>42);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a4aef7c717c87afad42f450be636eefd7" kindref="member">PUSH_BE_U8</ref>(data,<sp/>1,<sp/>42);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a4aef7c717c87afad42f450be636eefd7" kindref="member">PUSH_BE_U8</ref>(data,<sp/>2,<sp/>42);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a4aef7c717c87afad42f450be636eefd7" kindref="member">PUSH_BE_U8</ref>(data,<sp/>3,<sp/>42);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(data,<sp/>data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="torture__bytearray_8c_1a48b49614202d0835547bbcaa8684b2c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a48b49614202d0835547bbcaa8684b2c2" kindref="member">torture_push_be_u16</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[4]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data2[4]<sp/>=<sp/>{0x7f,<sp/>0xa6,<sp/>0x00,<sp/>0x2a};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>result;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a28a501547ef7ae03a4b0c435e1997600" kindref="member">PUSH_BE_U16</ref>(data,<sp/>0,<sp/>32678);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a28a501547ef7ae03a4b0c435e1997600" kindref="member">PUSH_BE_U16</ref>(data,<sp/>2,<sp/>42);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(data,<sp/>data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>2);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a6d60f16efe7573fb21964556957076a7" kindref="member">PULL_BE_U16</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>32678);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="torture__bytearray_8c_1ada9b26b71da4e3e6e316d2753475cf48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1ada9b26b71da4e3e6e316d2753475cf48" kindref="member">torture_push_be_u32</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[8]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data2[8]<sp/>=<sp/>{0x00,<sp/>0x00,<sp/>0x7f,<sp/>0xa6,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x2a};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>result;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a3bd053f9b249edd7b46f6d7282c5d6e6" kindref="member">PUSH_BE_U32</ref>(data,<sp/>0,<sp/>32678);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a3bd053f9b249edd7b46f6d7282c5d6e6" kindref="member">PUSH_BE_U32</ref>(data,<sp/>4,<sp/>42);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(data,<sp/>data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>4);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>42);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>32678);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a3bd053f9b249edd7b46f6d7282c5d6e6" kindref="member">PUSH_BE_U32</ref>(data,<sp/>0,<sp/>0xfffefffe);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a57d4b95f40e0911596700b72c15698f3" kindref="member">PULL_BE_U32</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xfffefffe);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="torture__bytearray_8c_1a7c89330c8d763a1024f79c768ecb93ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a7c89330c8d763a1024f79c768ecb93ae" kindref="member">torture_push_be_u64</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>result;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)state;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a6c1ba7966b4392c4de12b10d73248ec1" kindref="member">PUSH_BE_U64</ref>(data,<sp/>0,<sp/>32678);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a72e8468942d3e26e6eecd1e2ccf7f7dd" kindref="member">PULL_BE_U64</ref>(data,<sp/>0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>32678);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bytearray_8h_1a37c77be7a7ff557815d8f85bb477e229" kindref="member">PUSH_LE_U64</ref>(data,<sp/>8,<sp/>0xfffefffe);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="bytearray_8h_1a78e25aa27414512d33a37c5dd1143860" kindref="member">PULL_LE_U64</ref>(data,<sp/>8);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(result,<sp/>0xfffefffe);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__bytearray_8c_1a18fee75b27727bcf11e18cceef200834" kindref="member">torture_run_tests</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CMUnitTest<sp/>tests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a6f5083bb695c307d46392a3787333c01" kindref="member">torture_pull_le_u8</ref>),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1ac048840a6c57a34528fb38cbb82523b0" kindref="member">torture_pull_le_u16</ref>),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1afacc0f208f00d765f9a71e9d7327f8e2" kindref="member">torture_pull_le_u32</ref>),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1ac64c223133fde5bb693b6b82f017025e" kindref="member">torture_push_le_u8</ref>),</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1ab4df1d8a6915e68bd596f09c95e572f9" kindref="member">torture_push_le_u16</ref>),</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a32efeb351e4c2c9594984bc6c70eb125" kindref="member">torture_push_le_u32</ref>),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a903baf795c29baac69136b7da161d42d" kindref="member">torture_push_le_u64</ref>),</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BIG<sp/>ENDIAN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1ae127be5784fe93b3b957a12f11cb4570" kindref="member">torture_pull_be_u8</ref>),</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a955a2771ab93912b228b0d86d050f0a5" kindref="member">torture_pull_be_u16</ref>),</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a3bd65ae9cfe5fd8576eaddf57f6be1d2" kindref="member">torture_pull_be_u32</ref>),</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a57eef5e3cbdfa36bb66677eb7682f41b" kindref="member">torture_push_be_u8</ref>),</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a48b49614202d0835547bbcaa8684b2c2" kindref="member">torture_push_be_u16</ref>),</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1ada9b26b71da4e3e6e316d2753475cf48" kindref="member">torture_push_be_u32</ref>),</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__bytearray_8c_1a7c89330c8d763a1024f79c768ecb93ae" kindref="member">torture_push_be_u64</ref>),</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="torture_8h_1a83a80a48ac2740bea8d15d95aec7e966" kindref="member">torture_filter_tests</ref>(tests);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>cmocka_run_group_tests(tests,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/unittests/torture_bytearray.c"/>
  </compounddef>
</doxygen>
