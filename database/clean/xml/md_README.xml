<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_README" kind="page">
    <compoundname>md_README</compoundname>
    <title>README</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ulink url="https://gitlab.com/libssh/libssh-mirror/commits/master"><image type="html" name="https://gitlab.com/libssh/libssh-mirror/badges/master/pipeline.svg" alt="pipeline status" inline="yes"></image>
</ulink></para>
<para><programlisting><codeline><highlight class="normal"><sp/>_<sp/><sp/><sp/>_<sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline><highlight class="normal">(_)<sp/>(_)<sp/>(_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_)</highlight></codeline>
<codeline><highlight class="normal">(_)<sp/><sp/>_<sp/><sp/>(_)<sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/>_<sp/><sp/><sp/>_<sp/><sp/>_<sp/><sp/>(_)<sp/>_</highlight></codeline>
<codeline><highlight class="normal">(_)<sp/>(_)<sp/>(_)(_)<sp/>_<sp/><sp/><sp/><sp/><sp/>(_)(_)<sp/>(_)(_)<sp/>(_)(_)<sp/>_</highlight></codeline>
<codeline><highlight class="normal">(_)<sp/>(_)<sp/>(_)<sp/><sp/><sp/>(_)<sp/><sp/>_<sp/>(_)<sp/><sp/>_<sp/>(_)<sp/><sp/><sp/><sp/>(_)<sp/><sp/><sp/>(_)</highlight></codeline>
<codeline><highlight class="normal">(_)<sp/>(_)<sp/>(_)(_)(_)<sp/>(_)(_)<sp/>(_)(_)<sp/><sp/><sp/><sp/>(_)<sp/><sp/><sp/>(_).org</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>SSH<sp/>library</highlight></codeline>
</programlisting></para>
<sect1 id="md_README_1autotoc_md5">
<title>Why?</title>
<para>Why not ? :) I&apos;ve began to work on my own implementation of the ssh protocol because i didn&apos;t like the currently public ones. Not any allowed you to import and use the functions as a powerful library, and so i worked on a library-based SSH implementation which was non-existing in the free and open source software world.</para>
</sect1>
<sect1 id="md_README_1autotoc_md6">
<title>How/Who?</title>
<para>If you downloaded this file, you must know what it is : a library for accessing ssh client services through C libraries calls in a simple manner. Everybody can use this software under the terms of the LGPL - see the COPYING file</para>
<para>If you ask yourself how to compile libssh, please read INSTALL before anything.</para>
</sect1>
<sect1 id="md_README_1autotoc_md7">
<title>Where ?</title>
<para><ulink url="https://www.libssh.org">https://www.libssh.org</ulink></para>
</sect1>
<sect1 id="md_README_1autotoc_md8">
<title>Contributing</title>
<para>Please read the file &apos;SubmittingPatches&apos; next to this README file. It explains our copyright policy and how you should send patches for upstream inclusion.</para>
<para>Have fun and happy libssh hacking!</para>
<para>The libssh Team </para>
</sect1>
    </detaileddescription>
    <location file="README.md"/>
  </compounddef>
</doxygen>
