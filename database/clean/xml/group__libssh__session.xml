<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__libssh__session" kind="group">
    <compoundname>libssh_session</compoundname>
    <title>The SSH session functions.</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__session_1gafa8d153635a261e97870ab71d570149a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ssh_client_connection_callback</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_client_connection_callback</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="384" column="13" bodyfile="src/client.c" bodystart="384" bodyend="478"/>
        <references refid="structssh__session__struct_1a729d3c7f6ae20cb5a00ac7cd28a630f7" compoundref="session_8h" startline="124">ssh_session_struct::alive</references>
        <references refid="structssh__crypto__struct_1a0fa9919df32b44ccafc551d220fe609b" compoundref="crypto_8h" startline="150">ssh_crypto_struct::client_kex</references>
        <references refid="structssh__session__struct_1a70c6a6c0e1a409047afd7608b5aa40c3" compoundref="session_8h" startline="122">ssh_session_struct::connected</references>
        <references refid="client_8c_1a473363c862d0bf3433aa43eb7276e865" compoundref="client_8c" startline="246" endline="299">dh_handshake</references>
        <references refid="structssh__session__struct_1a6a94fa11eb06ca18d3c0ac22a153f97f" compoundref="session_8h" startline="149">ssh_session_struct::dh_handshake_state</references>
        <references refid="session_8h_1a52a640f6094e9b3d1a88c7da7d08c802a01abdeced4b17007ee1ffdb54f5d70e2" compoundref="session_8h" startline="56">DH_STATE_FINISHED</references>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="structssh__session__struct_1a997060832a3419d8fe884d3da855ef4c" compoundref="session_8h" startline="129">ssh_session_struct::flags</references>
        <references refid="structssh__kex__struct_1a5a8b3f27866bcbfde98a9d66793ae389" compoundref="kex_8h" startline="31">ssh_kex_struct::methods</references>
        <references refid="structssh__session__struct_1a4ea5e4ae5383c6cdb5db9f08bbbfa019" compoundref="session_8h" startline="173">ssh_session_struct::next_crypto</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__crypto__struct_1ac78255bf9406137ac4d400644c348a82" compoundref="crypto_8h" startline="149">ssh_crypto_struct::server_kex</references>
        <references refid="structssh__session__struct_1a9a1f525932e35bb7439abbf121cd8de0" compoundref="session_8h" startline="112">ssh_session_struct::serverbanner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="client_8c_1ae999fe5d95dd5d737af376462d2c59c5" compoundref="client_8c" startline="50">set_status</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="group__libssh__misc_1gae795e33139e9c0ad1611fc4fdf476fbe" compoundref="misc_8c" startline="1221" endline="1310">ssh_analyze_banner</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="kex_8h_1a10fc6e5cb4678972e355e69bfe8e35e4" compoundref="kex_8c" startline="739" endline="801">ssh_kex_select_methods</references>
        <references refid="kex_8h_1a0e79dc09bff165cdc194d729c96d4e0d" compoundref="kex_8c" startline="545" endline="559">ssh_list_kex</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a75fa79e63947b66462db977d9b5ae27c" compoundref="libssh_8h" startline="349">SSH_LOG_PROTOCOL</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="packet_8h_1aca955bacc5c633c212bdb61e1b43a1a2">ssh_packet_register_socket_callback</references>
        <references refid="packet_8h_1a2e88eac5d0547fdb7f03830adce9c4d2" compoundref="packet_8c" startline="1449" endline="1455">ssh_packet_set_default_callbacks</references>
        <references refid="client_8c_1ac4704ca12ecb7fa26c5bee9b02ed63fe" compoundref="client_8c" startline="175" endline="237">ssh_send_banner</references>
        <references refid="kex_8h_1a6c4425f4b80fc393d0c71ef488c240ba" compoundref="kex_8c" startline="805" endline="861">ssh_send_kex</references>
        <references refid="session_8h_1ae54e87f0565e24b25aed1372b3493a2b" compoundref="session_8h" startline="76">SSH_SESSION_FLAG_AUTHENTICATED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992caced7c62fd9f24fe8f6672d50b8219f60" compoundref="session_8h" startline="45">SSH_SESSION_STATE_AUTHENTICATED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca0bf582a8796f77262a1161fabc9a587b" compoundref="session_8h" startline="44">SSH_SESSION_STATE_AUTHENTICATING</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992caa688177b6c71d2eaf7af6b9e3b3dea5b" compoundref="session_8h" startline="40">SSH_SESSION_STATE_BANNER_RECEIVED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992cad7664a3923c57a333c0c5ff14f5d6c1e" compoundref="session_8h" startline="38">SSH_SESSION_STATE_CONNECTING</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca1dcace0fedd97312d6829ecc526d3606" compoundref="session_8h" startline="43">SSH_SESSION_STATE_DH</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca64f98e48c54ec9ae09070b92c1f47659" compoundref="session_8h" startline="41">SSH_SESSION_STATE_INITIAL_KEX</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca336024640ab057d21d87ded010687dc7" compoundref="session_8h" startline="42">SSH_SESSION_STATE_KEXINIT_RECEIVED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca6e96b3ae323d058e27297e97c01c1d7f" compoundref="session_8h" startline="37">SSH_SESSION_STATE_NONE</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca82652ed2dc1cdfd2c8cdb12a3ab6b703" compoundref="session_8h" startline="39">SSH_SESSION_STATE_SOCKET_CONNECTED</references>
        <references refid="kex_8h_1ab792762bc96d5065d4db3ebfe5e3067a" compoundref="kex_8c" startline="663" endline="734">ssh_set_client_kex</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="group__libssh__session_1ga3f1b3c59662464eec3649d3d72a40543" compoundref="session_8c" startline="593" endline="599">ssh_set_fd_towrite</references>
        <references refid="socket_8h_1aaf4853539d6ed1c3508cca5a45d557d6" compoundref="socket_8c" startline="447" endline="487">ssh_socket_close</references>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gabca86e5dcb03e23c150b16f9655cd782" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_connect_termination</definition>
        <argsstring>(void *user)</argsstring>
        <name>ssh_connect_termination</name>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="483" column="12" bodyfile="src/client.c" bodystart="483" bodyend="493"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca0bf582a8796f77262a1161fabc9a587b" compoundref="session_8h" startline="44">SSH_SESSION_STATE_AUTHENTICATING</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca05407079ea8dd73449ac6f9ddbf58084" compoundref="session_8h" startline="47">SSH_SESSION_STATE_DISCONNECTED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" compoundref="ssh__client_8c" startline="48">user</references>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_connect</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_connect</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Connect to the ssh server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to connect.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para>
</simplesect>
<simplesect kind="return"><para>SSH_AGAIN, if the session is in nonblocking mode, and call must be done again.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" kindref="member">ssh_new()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="507" column="5" bodyfile="src/client.c" bodystart="507" bodyend="620"/>
        <references refid="structssh__session__struct_1a729d3c7f6ae20cb5a00ac7cd28a630f7" compoundref="session_8h" startline="124">ssh_session_struct::alive</references>
        <references refid="structssh__session__struct_1aeb04cd35ddee3f87372ed8bd3d9ce244" compoundref="session_8h" startline="212">ssh_session_struct::bindaddr</references>
        <references refid="client_8c_1a4c4c9ace93a9791515090ebc197dd736" compoundref="client_8c" startline="96" endline="164">callback_receive_banner</references>
        <references refid="structssh__session__struct_1a069c421febb9eb1346a9117b5ec2b166" compoundref="session_8h" startline="116">ssh_session_struct::client</references>
        <references refid="structssh__session__struct_1a4804ae72067b9764e26081cd325b1842" compoundref="session_8h" startline="231">ssh_session_struct::config_processed</references>
        <references refid="structssh__socket__callbacks__struct_1a905f6e0260fd5891d4afa9ed229b8479" compoundref="callbacks_8h" startline="402">ssh_socket_callbacks_struct::connected</references>
        <references refid="structssh__socket__callbacks__struct_1a73d09c1b2ae438da96c4b3bbfb99c9ad" compoundref="callbacks_8h" startline="390">ssh_socket_callbacks_struct::data</references>
        <references refid="structssh__socket__callbacks__struct_1ae642ee58e72973ee0802820e46cb777b" compoundref="callbacks_8h" startline="398">ssh_socket_callbacks_struct::exception</references>
        <references refid="structssh__session__struct_1ab215cd999fce8410d28272e2cde4633d" compoundref="session_8h" startline="223">ssh_session_struct::fd</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a5552665043089000065df39c5a5a7094" compoundref="session_8h" startline="146">ssh_session_struct::pending_call_state</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="structssh__session__struct_1a988d47dd297709a12a1b74d35b2b79fb" compoundref="session_8h" startline="218">ssh_session_struct::ProxyCommand</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="client_8c_1ae999fe5d95dd5d737af376462d2c59c5" compoundref="client_8c" startline="50">set_status</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="client_8c_1a60373cf7aa31f7df6bee34eb6103af14" compoundref="client_8c" startline="63" endline="83">socket_callback_connected</references>
        <references refid="structssh__session__struct_1a77c2c8292416988963f37b9723d2f55f" compoundref="session_8h" startline="202">ssh_session_struct::socket_callbacks</references>
        <references refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" compoundref="libssh_8h" startline="331">SSH_AGAIN</references>
        <references refid="group__libssh__session_1gafa8d153635a261e97870ab71d570149a" compoundref="client_8c" startline="384" endline="478">ssh_client_connection_callback</references>
        <references refid="group__libssh__session_1gabca86e5dcb03e23c150b16f9655cd782" compoundref="client_8c" startline="483" endline="493">ssh_connect_termination</references>
        <references refid="structssh__session__struct_1a4fdde3f498bcf3e0f118335278a8ec5a" compoundref="session_8h" startline="199">ssh_session_struct::ssh_connection_callback</references>
        <references refid="group__libssh__session_1gaffbc8276ff57983966ce108998df40bd" compoundref="client_8c" startline="752" endline="758">ssh_copyright</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</references>
        <references refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" compoundref="libssh_8h" startline="140">SSH_INVALID_SOCKET</references>
        <references refid="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" compoundref="session_8c" startline="497" endline="500">ssh_is_blocking</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a6445dfe21592d69d9741d319538b6673" compoundref="libssh_8h" startline="352">SSH_LOG_PACKET</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a75fa79e63947b66462db977d9b5ae27c" compoundref="libssh_8h" startline="349">SSH_LOG_PROTOCOL</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</references>
        <references refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" compoundref="options_8c" startline="1375" endline="1418">ssh_options_parse_config</references>
        <references refid="session_8h_1abb7a4342b889601983497b3f094957e1ae28c93124911e8ec0681459442b5fb62" compoundref="session_8h" startline="61">SSH_PENDING_CALL_CONNECT</references>
        <references refid="session_8h_1abb7a4342b889601983497b3f094957e1a33be3f7cd03fe7fced1eeacd369cad94" compoundref="session_8h" startline="60">SSH_PENDING_CALL_NONE</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992cad7664a3923c57a333c0c5ff14f5d6c1e" compoundref="session_8h" startline="38">SSH_SESSION_STATE_CONNECTING</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca05407079ea8dd73449ac6f9ddbf58084" compoundref="session_8h" startline="47">SSH_SESSION_STATE_DISCONNECTED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca82652ed2dc1cdfd2c8cdb12a3ab6b703" compoundref="session_8h" startline="39">SSH_SESSION_STATE_SOCKET_CONNECTED</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="socket_8h_1ace11b434c7f9edcbbf26cef9334b2ba8" compoundref="socket_8c" startline="839" endline="859">ssh_socket_connect</references>
        <references refid="socket_8h_1a4a6d84c45677fe9f8195b3630338920b" compoundref="socket_8c" startline="914" endline="948">ssh_socket_connect_proxycommand</references>
        <references refid="group__libssh__session_1ga2635562d4c0bb8507e9a9f7274ff4729" compoundref="session_8c" startline="848" endline="860">ssh_socket_exception_callback</references>
        <references refid="socket_8h_1a15a69b474244317cc9401a9a404e7bcc" compoundref="socket_8c" startline="212" endline="215">ssh_socket_set_callbacks</references>
        <references refid="socket_8h_1a1bf2efced17e41fdd72719e1daee8851" compoundref="socket_8c" startline="497" endline="512">ssh_socket_set_fd</references>
        <references refid="group__libssh__threads_1gac9431f068584276377498dea938cf951" compoundref="threads_8c" startline="87" endline="93">ssh_threads_get_type</references>
        <references refid="session_8h_1a5dc7677b987888e7db552768afc9d9c6" compoundref="session_8h" startline="86">SSH_TIMEOUT_NONBLOCKING</references>
        <references refid="structssh__session__struct_1a551386dc1ac438997d8348cbf12983ad" compoundref="session_8h" startline="220">ssh_session_struct::timeout</references>
        <references refid="structssh__session__struct_1afb6ab92b01733c0ba287d01e8cef55bd" compoundref="session_8h" startline="221">ssh_session_struct::timeout_usec</references>
        <references refid="structssh__socket__callbacks__struct_1a21680bc94721a1507e1382e06f731aef" compoundref="callbacks_8h" startline="385">ssh_socket_callbacks_struct::userdata</references>
        <referencedby refid="torture__client__global__requests_8c_1af5545d548930acf58deb2c6d1d830cf9" compoundref="torture__client__global__requests_8c" startline="91" endline="107">authenticate</referencedby>
        <referencedby refid="ssh__client_8c_1a0d3591711bd7d6cb03d42294115721bb" compoundref="ssh__client_8c" startline="318" endline="366">client</referencedby>
        <referencedby refid="classssh_1_1Session_1a6d0498cf7e029e6beadb8b5f591ec472" compoundref="libsshpp_8hpp" startline="170" endline="174">ssh::Session::connect</referencedby>
        <referencedby refid="benchmarks_8c_1aa10487258ce1df1ef42bee98693a777a" compoundref="benchmarks_8c" startline="276" endline="299">connect_host</referencedby>
        <referencedby refid="connect__ssh_8c_1ada855ebf4aac69d9a59afb23a8e338f4" compoundref="connect__ssh_8c" startline="24" endline="67">connect_ssh</referencedby>
        <referencedby refid="test__exec_8c_1acbd4f6c4ecc68d1c4cc45223741be81c" compoundref="test__exec_8c" startline="10" endline="49">do_connect</referencedby>
        <referencedby refid="ssh__client__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__client__fuzzer_8cpp" startline="85" endline="158">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="proxy_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="proxy_8c" startline="215" endline="346">main</referencedby>
        <referencedby refid="test__ssh__bind__accept__fd_8c_1a723afb31fe0043e3ac0f0679898753af" compoundref="test__ssh__bind__accept__fd_8c" startline="105" endline="123">ssh_client</referencedby>
        <referencedby refid="torture__algorithms_8c_1a15b3d1cac3aa670c3409b3bdc4c30223" compoundref="torture__algorithms_8c" startline="83" endline="135">test_algorithm</referencedby>
        <referencedby refid="torture__algorithms_8c_1a09eb7c5ef70408a9d0a2771bdfa48c7a" compoundref="torture__algorithms_8c" startline="553" endline="589">torture_algorithms_zlib</referencedby>
        <referencedby refid="torture__algorithms_8c_1af4b1201c7c4184336c8ce8b13b8052c6" compoundref="torture__algorithms_8c" startline="591" endline="628">torture_algorithms_zlib_openssh</referencedby>
        <referencedby refid="torture__auth_8c_1add171176cc97a54d8bf7a3a9fcbd49c8" compoundref="torture__auth_8c" startline="440" endline="465">torture_auth_agent</referencedby>
        <referencedby refid="torture__auth_8c_1ac1e47567b2530e7c7c17d7f3367db43c" compoundref="torture__auth_8c" startline="467" endline="496">torture_auth_agent_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a1bc4253d4b7389acb38fa5e5ffc3cf51" compoundref="torture__auth_8c" startline="253" endline="275">torture_auth_autopubkey</referencedby>
        <referencedby refid="torture__auth_8c_1a2fc459f58be2d4e235c5ef4397fa8b4b" compoundref="torture__auth_8c" startline="277" endline="305">torture_auth_autopubkey_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a3dc15f1542313d7536ea949a57ed8d0b" compoundref="torture__auth_8c" startline="498" endline="544">torture_auth_cert</referencedby>
        <referencedby refid="torture__auth_8c_1a4b7c297eeeae3bb821a5480574439b78" compoundref="torture__auth_8c" startline="307" endline="340">torture_auth_kbdint</referencedby>
        <referencedby refid="torture__auth_8c_1a8c1979b9feebe5c34354456ff4260ee4" compoundref="torture__auth_8c" startline="342" endline="384">torture_auth_kbdint_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a71d7b34d984879dbfaf6afb2870233ec" compoundref="torture__auth_8c" startline="207" endline="225">torture_auth_none</referencedby>
        <referencedby refid="torture__auth_8c_1a5836d87eecde023390a0acf40b7160c6" compoundref="torture__auth_8c" startline="227" endline="251">torture_auth_none_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1acab4c789da42f078db39e0e8dec81bc4" compoundref="torture__auth_8c" startline="386" endline="407">torture_auth_password</referencedby>
        <referencedby refid="torture__auth_8c_1a144cbca03a69c33a0137bbcbd69873cf" compoundref="torture__auth_8c" startline="409" endline="438">torture_auth_password_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a1e1c5e9d0352de375c56cf27921d00f6" compoundref="torture__auth_8c" startline="597" endline="632">torture_auth_pubkey_types</referencedby>
        <referencedby refid="torture__auth_8c_1a30fc01934c5dc0343d91dc6b90cbabac" compoundref="torture__auth_8c" startline="634" endline="670">torture_auth_pubkey_types_ecdsa</referencedby>
        <referencedby refid="torture__auth_8c_1aaefb1835a46af27a36149a89c3308825" compoundref="torture__auth_8c" startline="777" endline="822">torture_auth_pubkey_types_ecdsa_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1aef29b45c88fd31e623e989959a72a434" compoundref="torture__auth_8c" startline="672" endline="728">torture_auth_pubkey_types_ed25519</referencedby>
        <referencedby refid="torture__auth_8c_1a6f2cc3f2514eaf5b14e030490d6993f3" compoundref="torture__auth_8c" startline="824" endline="888">torture_auth_pubkey_types_ed25519_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a6c870e5368b648dc01f643bbc52a62f4" compoundref="torture__auth_8c" startline="730" endline="775">torture_auth_pubkey_types_nonblocking</referencedby>
        <referencedby refid="torture__client__config_8c_1a998e063beed07ef6165fe0e62b49e68e" compoundref="torture__client__config_8c" startline="182" endline="192">torture_client_config_autoparse</referencedby>
        <referencedby refid="torture__client__config_8c_1a31b9fa3a6e6f420305f9d6e61e9b96b2" compoundref="torture__client__config_8c" startline="197" endline="211">torture_client_config_suppress</referencedby>
        <referencedby refid="torture__connect_8c_1ab0349d215eb26fab23b32d29877a1ff6" compoundref="torture__connect_8c" startline="133" endline="148">torture_connect_double</referencedby>
        <referencedby refid="torture__connect_8c_1aceba71bae2eb45662c7723fde9b6fc1b" compoundref="torture__connect_8c" startline="86" endline="101">torture_connect_nonblocking</referencedby>
        <referencedby refid="torture__connect_8c_1a80ca992de13d83656f95514fd50bdd0b" compoundref="torture__connect_8c" startline="162" endline="184">torture_connect_socket</referencedby>
        <referencedby refid="torture__hostkey_8c_1ac5b1551957655d2e330912bbc8b91692" compoundref="torture__hostkey_8c" startline="107" endline="128">torture_hostkey_ed25519</referencedby>
        <referencedby refid="torture__hostkey_8c_1ae73c12e15a44ab43321442da6d82c842" compoundref="torture__hostkey_8c" startline="84" endline="105">torture_hostkey_rsa</referencedby>
        <referencedby refid="torture__hostkey_8c_1a97dbd5e99350883af4f1af630ea59f2d" compoundref="torture__hostkey_8c" startline="175" endline="192">torture_hostkey_rsa_sha256</referencedby>
        <referencedby refid="torture__hostkey_8c_1aafc5459be5b7726b0a653910fe0a15d5" compoundref="torture__hostkey_8c" startline="194" endline="211">torture_hostkey_rsa_sha512</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a3c720aacddf802500f74cbba91d224f2" compoundref="torture__knownhosts__verify_8c" startline="106" endline="127">torture_knownhosts_export</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a4313d19977cea3b3498e49992a3b8686" compoundref="torture__knownhosts_8c" startline="230" endline="265">torture_knownhosts_fail</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a1bec6abbbade54d9fe77c1c944c89cbf" compoundref="torture__knownhosts__verify_8c" startline="446" endline="481">torture_knownhosts_new_file</referencedby>
        <referencedby refid="torture__knownhosts_8c_1ad7fb1fdd720acfe6c69b365fb780cb8a" compoundref="torture__knownhosts_8c" startline="429" endline="467">torture_knownhosts_no_hostkeychecking</referencedby>
        <referencedby refid="torture__knownhosts_8c_1ad850aa1f10a4696e6c967764883ebab9" compoundref="torture__knownhosts_8c" startline="267" endline="302">torture_knownhosts_other</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a800aa883cf6921f7899c9f220784e381" compoundref="torture__knownhosts_8c" startline="192" endline="228">torture_knownhosts_standard_port</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a06fcbd73ef9cb590180cfa3759594575" compoundref="torture__knownhosts_8c" startline="154" endline="190">torture_knownhosts_wildcard</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ae3cab897764a701f2ee10f0de7b7ee65" compoundref="torture__knownhosts__verify_8c" startline="129" endline="144">torture_knownhosts_write_and_verify</referencedby>
        <referencedby refid="torture__proxycommand_8c_1ad9476c8560eaa74ade11ed1c79d2f2a2" compoundref="torture__proxycommand_8c" startline="103" endline="113">torture_options_set_proxycommand_notexist</referencedby>
        <referencedby refid="torture__proxycommand_8c_1a0f3c36e817257e7cb989981c244dd7d2" compoundref="torture__proxycommand_8c" startline="115" endline="137">torture_options_set_proxycommand_ssh</referencedby>
        <referencedby refid="torture__proxycommand_8c_1aaf528fafa536dcd4436ac0d75ce3be8e" compoundref="torture__proxycommand_8c" startline="139" endline="162">torture_options_set_proxycommand_ssh_stderr</referencedby>
        <referencedby refid="torture__rekey_8c_1aaaaeedb730227e8f31cb1fe13bbcb881" compoundref="torture__rekey_8c" startline="104" endline="145">torture_rekey_default</referencedby>
        <referencedby refid="torture__rekey_8c_1a75d0cca74861337645286b4d42e57006" compoundref="torture__rekey_8c" startline="150" endline="209">torture_rekey_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a3c7d816b41acf84841eb39ec72475998" compoundref="torture__rekey_8c" startline="393" endline="440">torture_rekey_server_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a83928e03d85a04fd06d4c4a0ca9c7394" compoundref="torture__rekey_8c" startline="324" endline="388">torture_rekey_time</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a1ae155752732ad519ce76bedf8b2a5b7" compoundref="torture__server__auth__kbdint_8c" startline="686" endline="746">torture_server_auth_kbdint</referencedby>
        <referencedby refid="torture__server_8c_1a45fb3c9d4948a2e1428a5d00f28d47b6" compoundref="torture__server_8c" startline="325" endline="353">torture_server_auth_none</referencedby>
        <referencedby refid="torture__server_8c_1a209f1dfc209f45f52226ee57825f596b" compoundref="torture__server_8c" startline="355" endline="390">torture_server_auth_password</referencedby>
        <referencedby refid="torture__server_8c_1a73fb9c5aabcb0550f2bdee3cfd7ef346" compoundref="torture__server_8c" startline="392" endline="424">torture_server_auth_pubkey</referencedby>
        <referencedby refid="torture__server_8c_1addf40aeb91f2224a5baf6488d42560c7" compoundref="torture__server_8c" startline="426" endline="474">torture_server_hostkey_mismatch</referencedby>
        <referencedby refid="torture__server_8c_1a65c15130edce6143731c7bff27153650" compoundref="torture__server_8c" startline="476" endline="518">torture_server_unknown_global_request</referencedby>
        <referencedby refid="torture_8c_1aa1653e389922c4762e71dbd2ab2d7cda" compoundref="torture_8c" startline="262" endline="353">torture_ssh_session</referencedby>
        <referencedby refid="torture__server__config_8c_1a5de50eda837b8f94dcf6d18a765d0dc8" compoundref="torture__server__config_8c" startline="350" endline="423">try_config_content</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga89864d4d5cc6d3d6ef1c39652f2a688f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_get_issue_banner</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_issue_banner</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the issue banner from the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the banner showing a disclaimer to users who log in, typically their right or the fact that they will be monitored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated string with the banner, NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="632" column="6" bodyfile="src/client.c" bodystart="632" bodyend="638"/>
        <references refid="structssh__session__struct_1a556cfe2037fb907bb21d1aa6a10a8944" compoundref="session_8h" startline="134">ssh_session_struct::banner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1aa1070301a131ac0943da581a3ca6f71b">ssh_string_to_char</references>
        <referencedby refid="examples_2authentication_8c_1a442e0c31c0c57f60ec1f5eaaceebf436" compoundref="examples_2authentication_8c" startline="141" endline="241">authenticate_console</referencedby>
        <referencedby refid="ssh__client_8c_1a0d3591711bd7d6cb03d42294115721bb" compoundref="ssh__client_8c" startline="318" endline="366">client</referencedby>
        <referencedby refid="classssh_1_1Session_1a9969ed8dcaccef321ac519271758b406" compoundref="libsshpp_8hpp" startline="337" endline="345">ssh::Session::getIssueBanner</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac55d2895467a1e898ee75b4710d836a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_openssh_version</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_openssh_version</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the version of the OpenSSH server, if it is not an OpenSSH server then 0 will be returned. </para>
        </briefdescription>
        <detaileddescription>
<para>You can use the SSH_VERSION_INT macro to compare version numbers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The version number if available, 0 otherwise.</para>
</simplesect>
<programlisting><codeline><highlight class="normal">int<sp/>openssh<sp/>=<sp/>ssh_get_openssh_version();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(openssh<sp/>==<sp/>SSH_INT_VERSION(6,<sp/>1,<sp/>0))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;Version<sp/>match!\m&quot;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="658" column="5" bodyfile="src/client.c" bodystart="658" bodyend="664"/>
        <references refid="structssh__session__struct_1abe4bdadafb7d84c9a2095a9a11af1006" compoundref="session_8h" startline="117">ssh_session_struct::openssh</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="classssh_1_1Session_1a9e0af590062a73a0927bb513bc19dd8e" compoundref="libsshpp_8hpp" startline="350" endline="352">ssh::Session::getOpensshVersion</referencedby>
        <referencedby refid="group__libssh__channel_1ga93ddd5055eb3322d38c70986aa63c673" compoundref="channels_8c" startline="1057" endline="1114">ssh_channel_open_forward_unix</referencedby>
        <referencedby refid="torture__algorithms_8c_1a09eb7c5ef70408a9d0a2771bdfa48c7a" compoundref="torture__algorithms_8c" startline="553" endline="589">torture_algorithms_zlib</referencedby>
        <referencedby refid="torture__algorithms_8c_1af4b1201c7c4184336c8ce8b13b8052c6" compoundref="torture__algorithms_8c" startline="591" endline="628">torture_algorithms_zlib_openssh</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_disconnect</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_disconnect</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Disconnect from a session (client or server). The session can then be reused to open a new session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="672" column="6" bodyfile="src/client.c" bodystart="672" bodyend="750"/>
        <references refid="structssh__session__struct_1a729d3c7f6ae20cb5a00ac7cd28a630f7" compoundref="session_8h" startline="124">ssh_session_struct::alive</references>
        <references refid="structssh__session__struct_1a3d57e01582c0c9099f7f319513321fe8">ssh_session_struct::auth</references>
        <references refid="structssh__session__struct_1a9445164beb02a1979171bef9b1a63182" compoundref="session_8h" startline="175">ssh_session_struct::channels</references>
        <references refid="structssh__session__struct_1aff7925f04070fc20dc3d9366d7f2f748" compoundref="session_8h" startline="113">ssh_session_struct::clientbanner</references>
        <references refid="wrapper_8h_1a9cea366077f4498746e7e448cf21ac0d" compoundref="wrapper_8c" startline="161" endline="231">crypto_free</references>
        <references refid="wrapper_8h_1a0a3d255d6f354747a39476981074b8f3" compoundref="wrapper_8c" startline="150" endline="159">crypto_new</references>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="structssh__session__struct_1ab215cd999fce8410d28272e2cde4633d" compoundref="session_8h" startline="223">ssh_session_struct::fd</references>
        <references refid="structssh__session__struct_1a0fdb53c794a3173557463030583b2079" compoundref="session_8h" startline="138">ssh_session_struct::in_buffer</references>
        <references refid="structssh__session__struct_1adbf72ba34ec60a831f0002b12dd4f04d" compoundref="session_8h" startline="170">ssh_session_struct::in_hashbuf</references>
        <references refid="structssh__session__struct_1a4ea5e4ae5383c6cdb5db9f08bbbfa019" compoundref="session_8h" startline="173">ssh_session_struct::next_crypto</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1af0aed60c1e529bbfdcb483fd80bf98a0" compoundref="session_8h" startline="140">ssh_session_struct::out_buffer</references>
        <references refid="structssh__session__struct_1a6e56963dfc906c34e6ca7d4a774d77ad" compoundref="session_8h" startline="171">ssh_session_struct::out_hashbuf</references>
        <references refid="structssh__session__struct_1aa8015dc026c4aee3133a6f0f9e31c9dd" compoundref="session_8h" startline="201">ssh_session_struct::packet_callbacks</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__session__struct_1ab1034858e469a9666955b3159b2de84f" compoundref="session_8h" startline="119">ssh_session_struct::recv_seq</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="structssh__session__struct_1a8b2f7efa9a080ecd872df235c71626bd" compoundref="session_8h" startline="118">ssh_session_struct::send_seq</references>
        <references refid="structssh__session__struct_1a9a1f525932e35bb7439abbf121cd8de0" compoundref="session_8h" startline="112">ssh_session_struct::serverbanner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="ssh2_8h_1ad403a2e8ea4df76b23e031d14545d363" compoundref="ssh2_8h" startline="68">SSH2_DISCONNECT_BY_APPLICATION</references>
        <references refid="ssh2_8h_1a763856e68287f0b95ad01d69050ff830" compoundref="ssh2_8h" startline="4">SSH2_MSG_DISCONNECT</references>
        <references refid="buffer_8h_1ae17848a86043f0abfc60c1c4f6126ccd" compoundref="buffer_8h" startline="49">ssh_buffer_pack</references>
        <references refid="libssh_8h_1ac8802ff7f5348d0145dab5242623f740">ssh_buffer_reinit</references>
        <references refid="group__libssh__channel_1ga1e7211251562c5e1ec64647236caa745" compoundref="channels_8c" startline="1174" endline="1194">ssh_channel_do_free</references>
        <references refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" compoundref="libssh_8h" startline="140">SSH_INVALID_SOCKET</references>
        <references refid="misc_8h_1a1f44c71b6f7ba10a4a543f73a07a85aa" compoundref="misc_8h" startline="73">ssh_iterator_value</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="misc_8h_1a8221bf821961617b90566035eb1a7760" compoundref="misc_8h" startline="81">ssh_list_pop_head</references>
        <references refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" compoundref="misc_8c" startline="771" endline="798">ssh_list_remove</references>
        <references refid="group__libssh__messages_1ga9d1b1d2279c6be3539f2b630960759c3" compoundref="messages_8c" startline="582" endline="637">ssh_message_free</references>
        <references refid="structssh__session__struct_1ac18fe9d39a3b73274e03ca0e2ae55db2" compoundref="session_8h" startline="195">ssh_session_struct::ssh_message_list</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="packet_8h_1a7e6c7ed74c23ace432476aa8a6841140" compoundref="packet_8c" startline="1761" endline="1843">ssh_packet_send</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca05407079ea8dd73449ac6f9ddbf58084" compoundref="session_8h" startline="47">SSH_SESSION_STATE_DISCONNECTED</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="socket_8h_1aaf4853539d6ed1c3508cca5a45d557d6" compoundref="socket_8c" startline="447" endline="487">ssh_socket_close</references>
        <references refid="socket_8h_1a29176fb6f348985227454a3f5daec745" compoundref="socket_8c" startline="525" endline="528">ssh_socket_is_open</references>
        <references refid="socket_8h_1a4f4b2a1a8e54b3c6406a60c1b031de18" compoundref="socket_8c" startline="187" endline="202">ssh_socket_reset</references>
        <references refid="structssh__session__struct_1a3e967ac3134cae87dae1f6a794424073" compoundref="session_8h" startline="157">ssh_session_struct::supported_methods</references>
        <referencedby refid="proxy_8c_1a51822229a890049f75ce6980876e2dfc" compoundref="proxy_8c" startline="38" endline="57">auth_password</referencedby>
        <referencedby refid="sftp__stress_2main_8c_1acc3eb7c671bca3152e8e0df16bd40145" compoundref="sftp__stress_2main_8c" startline="76" endline="135">connect_host</referencedby>
        <referencedby refid="connect__ssh_8c_1ada855ebf4aac69d9a59afb23a8e338f4" compoundref="connect__ssh_8c" startline="24" endline="67">connect_ssh</referencedby>
        <referencedby refid="classssh_1_1Session_1aaa6972fe2757370a0cf2b90576eb6edc" compoundref="libsshpp_8hpp" startline="301" endline="303">ssh::Session::disconnect</referencedby>
        <referencedby refid="sftp__stress_2main_8c_1a4b5163f873a51988cbd753ca533151d1" compoundref="sftp__stress_2main_8c" startline="31" endline="45">docycle</referencedby>
        <referencedby refid="ssh__client__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__client__fuzzer_8cpp" startline="85" endline="158">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="exec_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="exec_8c" startline="7" endline="66">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="test__server_8c_1a1356104271e38a5856393ef01d01bc3a" compoundref="test__server_8c" startline="70" endline="277">run_server</referencedby>
        <referencedby refid="torture__algorithms_8c_1a7ac7f33ff2ba0f163d3da1f54f253811" compoundref="torture__algorithms_8c" startline="73" endline="81">session_teardown</referencedby>
        <referencedby refid="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" compoundref="session_8c" startline="465" endline="473">ssh_silent_disconnect</referencedby>
        <referencedby refid="torture__client__config_8c_1a199383cdaf56acd2611400b9bb125142" compoundref="torture__client__config_8c" startline="62" endline="81">teardown</referencedby>
        <referencedby refid="torture__algorithms_8c_1a15b3d1cac3aa670c3409b3bdc4c30223" compoundref="torture__algorithms_8c" startline="83" endline="135">test_algorithm</referencedby>
        <referencedby refid="torture__algorithms_8c_1a09eb7c5ef70408a9d0a2771bdfa48c7a" compoundref="torture__algorithms_8c" startline="553" endline="589">torture_algorithms_zlib</referencedby>
        <referencedby refid="torture__algorithms_8c_1af4b1201c7c4184336c8ce8b13b8052c6" compoundref="torture__algorithms_8c" startline="591" endline="628">torture_algorithms_zlib_openssh</referencedby>
        <referencedby refid="torture__connect_8c_1ab0349d215eb26fab23b32d29877a1ff6" compoundref="torture__connect_8c" startline="133" endline="148">torture_connect_double</referencedby>
        <referencedby refid="torture__connect_8c_1af6a5fdaa34eb8b38a556ed295c33d75b" compoundref="torture__connect_8c" startline="150" endline="160">torture_connect_failure</referencedby>
        <referencedby refid="torture__hostkey_8c_1ac5b1551957655d2e330912bbc8b91692" compoundref="torture__hostkey_8c" startline="107" endline="128">torture_hostkey_ed25519</referencedby>
        <referencedby refid="torture__hostkey_8c_1ae73c12e15a44ab43321442da6d82c842" compoundref="torture__hostkey_8c" startline="84" endline="105">torture_hostkey_rsa</referencedby>
        <referencedby refid="torture__hostkey_8c_1a97dbd5e99350883af4f1af630ea59f2d" compoundref="torture__hostkey_8c" startline="175" endline="192">torture_hostkey_rsa_sha256</referencedby>
        <referencedby refid="torture__hostkey_8c_1aafc5459be5b7726b0a653910fe0a15d5" compoundref="torture__hostkey_8c" startline="194" endline="211">torture_hostkey_rsa_sha512</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__rekey_8c_1aaaaeedb730227e8f31cb1fe13bbcb881" compoundref="torture__rekey_8c" startline="104" endline="145">torture_rekey_default</referencedby>
        <referencedby refid="torture__rekey_8c_1a75d0cca74861337645286b4d42e57006" compoundref="torture__rekey_8c" startline="150" endline="209">torture_rekey_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a3c7d816b41acf84841eb39ec72475998" compoundref="torture__rekey_8c" startline="393" endline="440">torture_rekey_server_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a83928e03d85a04fd06d4c4a0ca9c7394" compoundref="torture__rekey_8c" startline="324" endline="388">torture_rekey_time</referencedby>
        <referencedby refid="torture_8c_1aa1653e389922c4762e71dbd2ab2d7cda" compoundref="torture_8c" startline="262" endline="353">torture_ssh_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaffbc8276ff57983966ce108998df40bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_copyright</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_copyright</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/client.c" line="752" column="12" bodyfile="src/client.c" bodystart="752" bodyend="758"/>
        <references refid="libssh_8h_1ae62377c24279c9870c0893bd845c7636" compoundref="libssh_8h" startline="87">LIBSSH_VERSION</references>
        <references refid="libssh_8h_1a9ed5c4abd116001eb5ffedc39bf1f677" compoundref="libssh_8h" startline="71">SSH_STRINGIFY</references>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaed7aa63089bc78f3827115f476badab5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_select_cb</definition>
        <argsstring>(socket_t fd, int revents, void *userdata)</argsstring>
        <name>ssh_select_cb</name>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connect.c" line="277" column="12" bodyfile="src/connect.c" bodystart="277" bodyend="284"/>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="CMakeLists_8txt_1aedfdfd01a75aededaea39dc830001b75" compoundref="CMakeLists_8txt" startline="25" endline="40">set</references>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_select</definition>
        <argsstring>(ssh_channel *channels, ssh_channel *outchannels, socket_t maxfd, fd_set *readfds, struct timeval *timeout)</argsstring>
        <name>ssh_select</name>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref> *</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1aca32be8db7c865697a3de381dc7e9fc3" kindref="member">ssh_channel</ref> *</type>
          <declname>outchannels</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>maxfd</declname>
        </param>
        <param>
          <type>fd_set *</type>
          <declname>readfds</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>A wrapper for the select syscall. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions acts more or less like the select(2) syscall.<linebreak/>
There is no support for writing or exceptions.<linebreak/>
 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channels</parametername>
</parameternamelist>
<parameterdescription>
<para>Arrays of channels pointers terminated by a NULL. It is never rewritten.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">outchannels</parametername>
</parameternamelist>
<parameterdescription>
<para>Arrays of same size that &quot;channels&quot;, there is no need to initialize it.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum +1 file descriptor from readfds.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">readfds</parametername>
</parameternamelist>
<parameterdescription>
<para>A fd_set of file descriptors to be select&apos;ed for reading.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The timeout in milliseconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error, SSH_EINTR if it was interrupted. In that case, just restart it.</para>
</simplesect>
<simplesect kind="warning"><para>libssh is not reentrant here. That means that if a signal is caught during the processing of this function, you cannot call libssh functions on sessions that are busy with <ref refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" kindref="member">ssh_select()</ref>.</para>
</simplesect>
<simplesect kind="see"><para>select(2) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/connect.c" line="316" column="5" bodyfile="src/connect.c" bodystart="316" bodyend="395"/>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__channel_1ga157f7d1df5de07ec6c6976e2034ba6e2" compoundref="channels_8c" startline="3038" endline="3069">ssh_channel_poll</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" compoundref="poll_8c" startline="815" endline="845">ssh_event_add_fd</references>
        <references refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" compoundref="poll_8c" startline="884" endline="923">ssh_event_add_session</references>
        <references refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" compoundref="poll_8c" startline="957" endline="965">ssh_event_dopoll</references>
        <references refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" compoundref="poll_8c" startline="1089" endline="1118">ssh_event_free</references>
        <references refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" compoundref="poll_8c" startline="760" endline="785">ssh_event_new</references>
        <references refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" compoundref="poll_8c" startline="976" endline="1011">ssh_event_remove_fd</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__session_1gaed7aa63089bc78f3827115f476badab5" compoundref="connect_8c" startline="277" endline="284">ssh_select_cb</references>
        <references refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" compoundref="misc_8c" startline="1388" endline="1411">ssh_timeout_elapsed</references>
        <references refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" compoundref="misc_8c" startline="1420" endline="1432">ssh_timeout_update</references>
        <references refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" compoundref="misc_8c" startline="1324" endline="1335">ssh_timestamp_init</references>
        <references refid="examples__common_8h_1a01c647179ba7270ccbc9a5253846b3d2" compoundref="examples__common_8h" startline="19">ZERO_STRUCT</references>
        <referencedby refid="sshnetcat_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="sshnetcat_8c" startline="77" endline="175">select_loop</referencedby>
        <referencedby refid="torture__channel_8c_1ae2e0a8b2444233eaf5cff23ac03165db" compoundref="torture__channel_8c" startline="13" endline="40">torture_channel_select</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac026b4aca2266e0f4ba013d9ff1fbeff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh_dh_is_known_group</definition>
        <argsstring>(bignum modulus, bignum generator)</argsstring>
        <name>ssh_dh_is_known_group</name>
        <param>
          <type>bignum</type>
          <declname>modulus</declname>
        </param>
        <param>
          <type>bignum</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="604" column="6" bodyfile="src/dh.c" bodystart="604" bodyend="630"/>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a6c4a12628159470391f1b922f86cc870" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="69">bits</references>
        <references refid="sc25519_8c_1a748017a7a68b798f02a5e84721515182" compoundref="sc25519_8c" startline="14">m</references>
        <references refid="dh_8c_1a9664ddb1523cfa9fb96d82a6bb8c5c96" compoundref="dh_8c" startline="215">ssh_dh_generator</references>
        <references refid="dh_8c_1af835972b49b6053dd1215b92266734b1" compoundref="dh_8c" startline="217">ssh_dh_group14</references>
        <references refid="dh_8c_1af4f1360517192a222e31f26a979bdc5e" compoundref="dh_8c" startline="218">ssh_dh_group16</references>
        <references refid="dh_8c_1a7cba36cf23e9b6704f3355659cf841e4" compoundref="dh_8c" startline="219">ssh_dh_group18</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1a466c84d8dd5b1ba9162d491f31117a6b" compoundref="libssh_8h" startline="376">SSH_LOG_TRACE</references>
        <referencedby refid="dh-gex_8c_1adbc632e797a25b2f7f39854e71dc0a49" compoundref="dh-gex_8c" startline="104" endline="239">SSH_PACKET_CALLBACK</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga750ce8095c0f1ac5154ba05284cb747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref></type>
        <definition>ssh_key ssh_dh_get_current_server_publickey</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_dh_get_current_server_publickey</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="632" column="9" bodyfile="src/dh.c" bodystart="632" bodyend="639"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__crypto__struct_1a02e5e04457b69f9437c968fd35840bb3" compoundref="crypto_8h" startline="141">ssh_crypto_struct::server_pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="group__libssh__session_1ga14729e84cbe765757c394f86858d250d" compoundref="dh_8c" startline="642" endline="648">ssh_dh_get_current_server_publickey_blob</referencedby>
        <referencedby refid="group__libssh__session_1ga16eb5c500a1beaf18821c6ce51b7b965" compoundref="known__hosts_8c" startline="430" endline="493">ssh_dump_knownhost</referencedby>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
        <referencedby refid="group__libssh__session_1ga519c3985c8803c67d24ce9f937e3da9a" compoundref="src_2knownhosts_8c" startline="892" endline="952">ssh_session_export_known_hosts_entry</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga14729e84cbe765757c394f86858d250d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_dh_get_current_server_publickey_blob</definition>
        <argsstring>(ssh_session session, ssh_string *pubkey_blob)</argsstring>
        <name>ssh_dh_get_current_server_publickey_blob</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a27e04455dbb0a80b6fed70b30772717b" kindref="member">ssh_string</ref> *</type>
          <declname>pubkey_blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="642" column="5" bodyfile="src/dh.c" bodystart="642" bodyend="648"/>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__session_1ga750ce8095c0f1ac5154ba05284cb747c" compoundref="dh_8c" startline="632" endline="639">ssh_dh_get_current_server_publickey</references>
        <references refid="group__libssh__pki_1gaadeaf6dc35e99214de0af82c3c431649" compoundref="pki_8c" startline="2030" endline="2046">ssh_pki_export_pubkey_blob</references>
        <referencedby refid="group__libssh__session_1ga7c21df77bcd00b832e2f33c3afae64a0" compoundref="known__hosts_8c" startline="145" endline="184">check_public_key</referencedby>
        <referencedby refid="legacy_8h_1a17fab3e78214da45a6ee05cc2bb9c812" compoundref="legacy_8c" startline="708" endline="726">ssh_get_pubkey</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga97ba6b7567dfd3814742a063e0d951e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref></type>
        <definition>ssh_key ssh_dh_get_next_server_publickey</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_dh_get_next_server_publickey</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="650" column="9" bodyfile="src/dh.c" bodystart="650" bodyend="653"/>
        <references refid="structssh__session__struct_1a4ea5e4ae5383c6cdb5db9f08bbbfa019" compoundref="session_8h" startline="173">ssh_session_struct::next_crypto</references>
        <references refid="structssh__crypto__struct_1a02e5e04457b69f9437c968fd35840bb3" compoundref="crypto_8h" startline="141">ssh_crypto_struct::server_pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="group__libssh__session_1ga98601c8e1c5aab3a40b6efa898fbf620" compoundref="dh_8c" startline="656" endline="662">ssh_dh_get_next_server_publickey_blob</referencedby>
        <referencedby refid="packet_8h_1a0b1288dcd70b5599427dade8e4c26c91" compoundref="packet__cb_8c" startline="95" endline="175">SSH_PACKET_CALLBACK</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga98601c8e1c5aab3a40b6efa898fbf620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_dh_get_next_server_publickey_blob</definition>
        <argsstring>(ssh_session session, ssh_string *pubkey_blob)</argsstring>
        <name>ssh_dh_get_next_server_publickey_blob</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a27e04455dbb0a80b6fed70b30772717b" kindref="member">ssh_string</ref> *</type>
          <declname>pubkey_blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="656" column="5" bodyfile="src/dh.c" bodystart="656" bodyend="662"/>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__session_1ga97ba6b7567dfd3814742a063e0d951e6" compoundref="dh_8c" startline="650" endline="653">ssh_dh_get_next_server_publickey</references>
        <references refid="group__libssh__pki_1gaadeaf6dc35e99214de0af82c3c431649" compoundref="pki_8c" startline="2030" endline="2046">ssh_pki_export_pubkey_blob</references>
        <referencedby refid="kex_8h_1aa65d23af384112419a2f13f5b7f2d9ea" compoundref="kex_8c" startline="946" endline="1213">ssh_make_sessionid</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga85ab9f031ff137ad3f9e14341b514f5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* ssh_get_b64_unpadded</definition>
        <argsstring>(const unsigned char *hash, size_t len)</argsstring>
        <name>ssh_get_b64_unpadded</name>
        <param>
          <type>const unsigned char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="678" column="13" bodyfile="src/dh.c" bodystart="678" bodyend="694"/>
        <references refid="priv_8h_1abc94b583621acc2a3bd39b27c819768e" compoundref="base64_8c" startline="273" endline="298">bin_to_base64</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a4c5b7e7f9974ccd012409eb6e21dc655" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="105">k</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__misc_1ga8b860ba32fef12da8acd4507c059e509" compoundref="misc_8c" startline="1478" endline="1495">strndup</references>
        <referencedby refid="group__libssh__session_1ga775072dc331a11b575957fe23fdd311b" compoundref="dh_8c" startline="716" endline="770">ssh_get_fingerprint_hash</referencedby>
        <referencedby refid="torture__hashes_8c_1ae6a089b8a29d47bb83feb13b577f7e21" compoundref="torture__hashes_8c" startline="81" endline="98">torture_sha1_hash</referencedby>
        <referencedby refid="torture__hashes_8c_1aae6590b5c29c9ce2e9b20d9893cd5c7e" compoundref="torture__hashes_8c" startline="100" endline="118">torture_sha256_hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga775072dc331a11b575957fe23fdd311b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_get_fingerprint_hash</definition>
        <argsstring>(enum ssh_publickey_hash_type type, unsigned char *hash, size_t len)</argsstring>
        <name>ssh_get_fingerprint_hash</name>
        <param>
          <type>enum <ref refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8" kindref="member">ssh_publickey_hash_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Get a hash as a human-readable hex- or base64-string. </para>
        </briefdescription>
        <detaileddescription>
<para>This gets an allocated fingerprint hash. If it is a SHA sum, it will return an unpadded base64 strings. If it is a MD5 sum, it will return hex string. Either way, the output is prepended by the hash-type.</para>
<para><simplesect kind="warning"><para>Do NOT use MD5 or SHA1! Those hash functions are being deprecated.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Which sort of hash is given, use SSH_PUBLICKEY_HASH_SHA256 or better.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to be converted to fingerprint.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the allocated fingerprint hash or NULL on error.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" kindref="member">ssh_string_free_char()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="716" column="6" bodyfile="src/dh.c" bodystart="716" bodyend="770"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__session_1ga85ab9f031ff137ad3f9e14341b514f5b" compoundref="dh_8c" startline="678" endline="694">ssh_get_b64_unpadded</references>
        <references refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" compoundref="misc_8c" startline="403" endline="426">ssh_get_hexa</references>
        <references refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8a529e17d4f7164a7a9749a24cd379a4ab" compoundref="libssh_8h" startline="549">SSH_PUBLICKEY_HASH_MD5</references>
        <references refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8ac8948180276bd61b39889c3fe85577b0" compoundref="libssh_8h" startline="548">SSH_PUBLICKEY_HASH_SHA1</references>
        <references refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8a5832252a30ef599cc76d8c4671cd85e3" compoundref="libssh_8h" startline="550">SSH_PUBLICKEY_HASH_SHA256</references>
        <referencedby refid="group__libssh__session_1ga93e85883ddac5198ed590e36eef4dc3b" compoundref="dh_8c" startline="788" endline="804">ssh_print_hash</referencedby>
        <referencedby refid="torture__hashes_8c_1a7d6d03a2483bbfd42a521edea581044b" compoundref="torture__hashes_8c" startline="120" endline="142">torture_sha256_fingerprint</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga93e85883ddac5198ed590e36eef4dc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_print_hash</definition>
        <argsstring>(enum ssh_publickey_hash_type type, unsigned char *hash, size_t len)</argsstring>
        <name>ssh_print_hash</name>
        <param>
          <type>enum <ref refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8" kindref="member">ssh_publickey_hash_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Print a hash as a human-readable hex- or base64-string. </para>
        </briefdescription>
        <detaileddescription>
<para>This prints an unpadded base64 strings for SHA sums and hex strings for MD5 sum. Either way, the output is prepended by the hash-type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Which sort of hash is given. Use SSH_PUBLICKEY_HASH_SHA256 or better.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to be converted to fingerprint.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a7b16a4bed6d8d58f10bdb269172ff7" kindref="member">ssh_get_publickey_hash()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga775072dc331a11b575957fe23fdd311b" kindref="member">ssh_get_fingerprint_hash()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dh.c" line="788" column="6" bodyfile="src/dh.c" bodystart="788" bodyend="804"/>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__session_1ga775072dc331a11b575957fe23fdd311b" compoundref="dh_8c" startline="716" endline="770">ssh_get_fingerprint_hash</references>
        <referencedby refid="examples__common_8h_1ad5d8ab97d3635ecaf8fa78225cb960fb" compoundref="examples_2knownhosts_8c" startline="35" endline="117">verify_knownhost</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga1be0cba6d1c27a46361d91b84263d382" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__tokens__st" kindref="compound">ssh_tokens_st</ref> *</type>
        <definition>static struct ssh_tokens_st* ssh_get_knownhost_line</definition>
        <argsstring>(FILE **file, const char *filename, const char **found_type)</argsstring>
        <name>ssh_get_knownhost_line</name>
        <param>
          <type>FILE **</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>found_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="73" column="27" bodyfile="src/known_hosts.c" bodystart="73" bodyend="130"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="token_8h_1a98b7455ad7c245538d341174928de888" compoundref="token_8c" startline="73" endline="140">ssh_tokenize</references>
        <references refid="token_8h_1aaea36e878feebb28b8497eb8bf2bdd1f" compoundref="token_8c" startline="42" endline="58">ssh_tokens_free</references>
        <references refid="structssh__tokens__st_1acba9eb7dd57b818df8ac7d36250d6329" compoundref="token_8h" startline="31">ssh_tokens_st::tokens</references>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga7c21df77bcd00b832e2f33c3afae64a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_public_key</definition>
        <argsstring>(ssh_session session, char **tokens)</argsstring>
        <name>check_public_key</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="145" column="12" bodyfile="src/known_hosts.c" bodystart="145" bodyend="184"/>
        <references refid="priv_8h_1aa9b1bdd62db42c91b1b203f6850adadf" compoundref="base64_8c" startline="60" endline="173">base64_to_bin</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1afcc97fa225275d1be449dd7f4450b559">ssh_buffer_free</references>
        <references refid="libssh_8h_1a240b02fb7c0475fbb5996d1f759221ee">ssh_buffer_get</references>
        <references refid="libssh_8h_1a61400c7267feb254046cd606a3fdfdbc">ssh_buffer_get_len</references>
        <references refid="group__libssh__session_1ga14729e84cbe765757c394f86858d250d" compoundref="dh_8c" startline="642" endline="648">ssh_dh_get_current_server_publickey_blob</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="libssh_8h_1aca901aa97257413ddf60ef74ff2bf7a6">ssh_string_data</references>
        <references refid="libssh_8h_1a7e5b5b403859fc6ece46d48d73758f75">ssh_string_free</references>
        <references refid="libssh_8h_1aad7b2fc092973a478df54a40af69abf2">ssh_string_len</references>
        <references refid="structssh__tokens__st_1acba9eb7dd57b818df8ac7d36250d6329" compoundref="token_8h" startline="31">ssh_tokens_st::tokens</references>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga8986fdab5f7b17935b21e96652f22cf8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int match_hashed_host</definition>
        <argsstring>(const char *host, const char *sourcehash)</argsstring>
        <name>match_hashed_host</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sourcehash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="196" column="12" bodyfile="src/known_hosts.c" bodystart="196" bodyend="272"/>
        <references refid="priv_8h_1aa9b1bdd62db42c91b1b203f6850adadf" compoundref="base64_8c" startline="60" endline="173">base64_to_bin</references>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="wrapper_8h_1a0e829b6ecab93b0a02ba2f89899da299">hmac_final</references>
        <references refid="wrapper_8h_1ab8aa5c2c9844d6e52ce9b250df8a9041">hmac_init</references>
        <references refid="wrapper_8h_1a7d55e61ee55f8e6e1230c84a5c22b520">hmac_update</references>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="torture__packet_8c_1ae4ea3e666683fd4d8b0a822031e742ff" compoundref="torture__packet_8c" startline="21">mac</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="libssh_8h_1afcc97fa225275d1be449dd7f4450b559">ssh_buffer_free</references>
        <references refid="libssh_8h_1a240b02fb7c0475fbb5996d1f759221ee">ssh_buffer_get</references>
        <references refid="libssh_8h_1a61400c7267feb254046cd606a3fdfdbc">ssh_buffer_get_len</references>
        <references refid="wrapper_8h_1a23eb7bb01b7f804d688feff35807fa6aa55d238e024d5057683e3e6d17730f0f7" compoundref="wrapper_8h" startline="40">SSH_HMAC_SHA1</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a6445dfe21592d69d9741d319538b6673" compoundref="libssh_8h" startline="352">SSH_LOG_PACKET</references>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_server_known</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_is_server_known</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>This function is deprecated. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use <ref refid="group__libssh__session_1gacbc5d04fe66beee863a0c61a93fdf765" kindref="member">ssh_session_is_known_server()</ref> </para>
</xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="group__libssh__session_1gacbc5d04fe66beee863a0c61a93fdf765" kindref="member">ssh_session_is_known_server()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="288" column="5" bodyfile="src/known_hosts.c" bodystart="288" bodyend="424"/>
        <references refid="group__libssh__session_1ga7c21df77bcd00b832e2f33c3afae64a0" compoundref="known__hosts_8c" startline="145" endline="184">check_public_key</references>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="group__libssh__session_1ga8986fdab5f7b17935b21e96652f22cf8" compoundref="known__hosts_8c" startline="196" endline="272">match_hashed_host</references>
        <references refid="priv_8h_1a0e8d71766ba54ed5a5020997663bfd21" compoundref="match_8c" startline="195" endline="197">match_hostname</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__session_1ga750ce8095c0f1ac5154ba05284cb747c" compoundref="dh_8c" startline="632" endline="639">ssh_dh_get_current_server_publickey</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__session_1ga1be0cba6d1c27a46361d91b84263d382" compoundref="known__hosts_8c" startline="73" endline="130">ssh_get_knownhost_line</references>
        <references refid="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" compoundref="misc_8c" startline="371" endline="389">ssh_hostport</references>
        <references refid="group__libssh__pki_1ga9cb4a857f8e510f80cfc38e46c476490" compoundref="pki_8c" startline="223" endline="228">ssh_key_type</references>
        <references refid="group__libssh__pki_1ga302919f046a4af504e5a2a9924b031c1" compoundref="pki_8c" startline="283" endline="326">ssh_key_type_to_char</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a6445dfe21592d69d9741d319538b6673" compoundref="libssh_8h" startline="352">SSH_LOG_PACKET</references>
        <references refid="group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff" compoundref="misc_8c" startline="352" endline="369">ssh_lowercase</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="libssh_8h_1a5b2ba86e7c65d274a2d1eb6754a6cba7a937c9ac6e9ca0246673a89af71c92529" compoundref="libssh_8h" startline="233">SSH_SERVER_ERROR</references>
        <references refid="libssh_8h_1a5b2ba86e7c65d274a2d1eb6754a6cba7a9f77b39bcccd7bdc02180ee0df8a2e10" compoundref="libssh_8h" startline="238">SSH_SERVER_FILE_NOT_FOUND</references>
        <references refid="libssh_8h_1a5b2ba86e7c65d274a2d1eb6754a6cba7a56261a6f9777c297f6d8fe8c759ea33c" compoundref="libssh_8h" startline="237">SSH_SERVER_FOUND_OTHER</references>
        <references refid="libssh_8h_1a5b2ba86e7c65d274a2d1eb6754a6cba7a469ee95941498a9ea93b8fd02e44513a" compoundref="libssh_8h" startline="236">SSH_SERVER_KNOWN_CHANGED</references>
        <references refid="libssh_8h_1a5b2ba86e7c65d274a2d1eb6754a6cba7a0a045c9225cf3a2c12fd96b386094bdf" compoundref="libssh_8h" startline="235">SSH_SERVER_KNOWN_OK</references>
        <references refid="libssh_8h_1a5b2ba86e7c65d274a2d1eb6754a6cba7a1b1b3797fa462712355030a79be6b538" compoundref="libssh_8h" startline="234">SSH_SERVER_NOT_KNOWN</references>
        <references refid="group__libssh__session_1ga958fdd1aedcd85a5c496c0aa22362d34" compoundref="src_2knownhosts_8c" startline="965" endline="1038">ssh_session_update_known_hosts</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="token_8h_1aaea36e878feebb28b8497eb8bf2bdd1f" compoundref="token_8c" startline="42" endline="58">ssh_tokens_free</references>
        <references refid="structssh__session__struct_1aaa1e1a9873eafee679684afa13a58bbc" compoundref="session_8h" startline="224">ssh_session_struct::StrictHostKeyChecking</references>
        <references refid="structssh__tokens__st_1acba9eb7dd57b818df8ac7d36250d6329" compoundref="token_8h" startline="31">ssh_tokens_st::tokens</references>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a4313d19977cea3b3498e49992a3b8686" compoundref="torture__knownhosts_8c" startline="230" endline="265">torture_knownhosts_fail</referencedby>
        <referencedby refid="torture__knownhosts_8c_1ad850aa1f10a4696e6c967764883ebab9" compoundref="torture__knownhosts_8c" startline="267" endline="302">torture_knownhosts_other</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a800aa883cf6921f7899c9f220784e381" compoundref="torture__knownhosts_8c" startline="192" endline="228">torture_knownhosts_standard_port</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a06fcbd73ef9cb590180cfa3759594575" compoundref="torture__knownhosts_8c" startline="154" endline="190">torture_knownhosts_wildcard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga16eb5c500a1beaf18821c6ce51b7b965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_dump_knownhost</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_dump_knownhost</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>This function is deprecated. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use <ref refid="group__libssh__session_1ga519c3985c8803c67d24ce9f937e3da9a" kindref="member">ssh_session_export_known_hosts_entry()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="430" column="7" bodyfile="src/known_hosts.c" bodystart="430" bodyend="493"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__session_1ga750ce8095c0f1ac5154ba05284cb747c" compoundref="dh_8c" startline="632" endline="639">ssh_dh_get_current_server_publickey</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" compoundref="misc_8c" startline="371" endline="389">ssh_hostport</references>
        <references refid="group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff" compoundref="misc_8c" startline="352" endline="369">ssh_lowercase</references>
        <references refid="group__libssh__pki_1ga2caa40cbd9620e9f7e3e7ab654b256c5" compoundref="pki_8c" startline="2060" endline="2084">ssh_pki_export_pubkey_base64</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="structssh__key__struct_1af198ae6d0eee951e7d46b8dacbf3c412" compoundref="pki_8h" startline="57">ssh_key_struct::type_c</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_write_knownhost</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_write_knownhost</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>This function is deprecated. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use <ref refid="group__libssh__session_1ga958fdd1aedcd85a5c496c0aa22362d34" kindref="member">ssh_session_update_known_hosts()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="499" column="5" bodyfile="src/known_hosts.c" bodystart="499" bodyend="565"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" compoundref="misc_8c" startline="847" endline="886">ssh_dirname</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" compoundref="misc_8c" startline="977" endline="1028">ssh_mkdirs</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</references>
        <references refid="group__libssh__session_1ga519c3985c8803c67d24ce9f937e3da9a" compoundref="src_2knownhosts_8c" startline="892" endline="952">ssh_session_export_known_hosts_entry</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaad45946956020be5ce9ff7c50f190734" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int hash_hostname</definition>
        <argsstring>(const char *name, unsigned char *salt, unsigned int salt_size, unsigned char **hash, unsigned int *hash_size)</argsstring>
        <name>hash_hostname</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>salt_size</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>hash_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="53" column="12" bodyfile="src/knownhosts.c" bodystart="53" bodyend="70"/>
        <references refid="wrapper_8h_1a0e829b6ecab93b0a02ba2f89899da299">hmac_final</references>
        <references refid="wrapper_8h_1ab8aa5c2c9844d6e52ce9b250df8a9041">hmac_init</references>
        <references refid="wrapper_8h_1a7d55e61ee55f8e6e1230c84a5c22b520">hmac_update</references>
        <references refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="samplesshd-kbdint_8c" startline="186">name</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="wrapper_8h_1a23eb7bb01b7f804d688feff35807fa6aa55d238e024d5057683e3e6d17730f0f7" compoundref="wrapper_8h" startline="40">SSH_HMAC_SHA1</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="group__libssh__session_1gaf7b7c8e6b973ad5cb1c30c6f31f849c5" compoundref="src_2knownhosts_8c" startline="72" endline="136">match_hashed_hostname</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaf7b7c8e6b973ad5cb1c30c6f31f849c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int match_hashed_hostname</definition>
        <argsstring>(const char *host, const char *hashed_host)</argsstring>
        <name>match_hashed_hostname</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hashed_host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="72" column="12" bodyfile="src/knownhosts.c" bodystart="72" bodyend="136"/>
        <references refid="priv_8h_1aa9b1bdd62db42c91b1b203f6850adadf" compoundref="base64_8c" startline="60" endline="173">base64_to_bin</references>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="group__libssh__session_1gaad45946956020be5ce9ff7c50f190734" compoundref="src_2knownhosts_8c" startline="53" endline="70">hash_hostname</references>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="libssh_8h_1a8b09f7d6f7066de7ef8dab4ed7494a52" compoundref="libssh_8h" startline="828">SSH_BUFFER_FREE</references>
        <references refid="libssh_8h_1a240b02fb7c0475fbb5996d1f759221ee">ssh_buffer_get</references>
        <references refid="libssh_8h_1a61400c7267feb254046cd606a3fdfdbc">ssh_buffer_get_len</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="group__libssh__session_1gaa3a37302850d0467f19db4eba5257d3d" compoundref="src_2knownhosts_8c" startline="612" endline="765">ssh_known_hosts_parse_line</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_knownhosts_entry_free</definition>
        <argsstring>(struct ssh_knownhosts_entry *entry)</argsstring>
        <name>ssh_knownhosts_entry_free</name>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Free an allocated <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Use <ref refid="libssh_8h_1a97f7d498f8b86ea63fb529c8ce89e35a" kindref="member">SSH_KNOWNHOSTS_ENTRY_FREE()</ref> to set the pointer to NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry to free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="145" column="6" bodyfile="src/knownhosts.c" bodystart="145" bodyend="156"/>
        <references refid="structssh__knownhosts__entry_1a1f776a10d4121f8ca9bee98f03947f6b" compoundref="libssh_8h" startline="324">ssh_knownhosts_entry::comment</references>
        <references refid="structssh__knownhosts__entry_1a0325dccebf28f626bd7dd76ea2b05552" compoundref="libssh_8h" startline="321">ssh_knownhosts_entry::hostname</references>
        <references refid="structssh__knownhosts__entry_1a64df8de718e20463836e0e06eb5f312f" compoundref="libssh_8h" startline="323">ssh_knownhosts_entry::publickey</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" compoundref="pki_8c" startline="205" endline="210">ssh_key_free</references>
        <references refid="structssh__knownhosts__entry_1a6541896b62f9757897d91e193c523805" compoundref="libssh_8h" startline="322">ssh_knownhosts_entry::unparsed</references>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="group__libssh__session_1gaa3a37302850d0467f19db4eba5257d3d" compoundref="src_2knownhosts_8c" startline="612" endline="765">ssh_known_hosts_parse_line</referencedby>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga15375c6c6583b4ea664c2ed774db7c0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int known_hosts_read_line</definition>
        <argsstring>(FILE *fp, char *buf, size_t buf_size, size_t *buf_len, size_t *lineno)</argsstring>
        <name>known_hosts_read_line</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>buf_len</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>lineno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="158" column="12" bodyfile="src/knownhosts.c" bodystart="158" bodyend="184"/>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga4c0918fdf43ac330250635c0e8f54f4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_known_hosts_entries_compare</definition>
        <argsstring>(struct ssh_knownhosts_entry *k1, struct ssh_knownhosts_entry *k2)</argsstring>
        <name>ssh_known_hosts_entries_compare</name>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> *</type>
          <declname>k1</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> *</type>
          <declname>k2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="187" column="1" bodyfile="src/knownhosts.c" bodystart="187" bodyend="207"/>
        <references refid="structssh__knownhosts__entry_1a0325dccebf28f626bd7dd76ea2b05552" compoundref="libssh_8h" startline="321">ssh_knownhosts_entry::hostname</references>
        <references refid="structssh__knownhosts__entry_1a64df8de718e20463836e0e06eb5f312f" compoundref="libssh_8h" startline="323">ssh_knownhosts_entry::publickey</references>
        <references refid="group__libssh__pki_1ga4dc33945294c2bbd671365a9d3db8e2f" compoundref="pki_8c" startline="655" endline="690">ssh_key_cmp</references>
        <references refid="libssh_8h_1ad6ae03e8cb7f93c664a1af5d5a899f62ac0b1cce609c3a8935c8e633ad3ce7aec" compoundref="libssh_8h" startline="314">SSH_KEY_CMP_PUBLIC</references>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_known_hosts_read_entries</definition>
        <argsstring>(const char *match, const char *filename, struct ssh_list **entries)</argsstring>
        <name>ssh_known_hosts_read_entries</name>
        <param>
          <type>const char *</type>
          <declname>match</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> **</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="215" column="12" bodyfile="src/knownhosts.c" bodystart="215" bodyend="300"/>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="group__libssh__session_1ga15375c6c6583b4ea664c2ed774db7c0e" compoundref="src_2knownhosts_8c" startline="158" endline="184">known_hosts_read_line</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" compoundref="libssh_8h" startline="331">SSH_AGAIN</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="misc_8h_1a1f44c71b6f7ba10a4a543f73a07a85aa" compoundref="misc_8h" startline="73">ssh_iterator_value</references>
        <references refid="group__libssh__session_1ga4c0918fdf43ac330250635c0e8f54f4b" compoundref="src_2knownhosts_8c" startline="187" endline="207">ssh_known_hosts_entries_compare</references>
        <references refid="group__libssh__session_1gaa3a37302850d0467f19db4eba5257d3d" compoundref="src_2knownhosts_8c" startline="612" endline="765">ssh_known_hosts_parse_line</references>
        <references refid="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" compoundref="src_2knownhosts_8c" startline="145" endline="156">ssh_knownhosts_entry_free</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" compoundref="libssh_8h" startline="370">SSH_LOG_WARN</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a0a467c6124a654c7fe393521c3cb13fc" compoundref="torture__knownhosts__parsing_8c" startline="329" endline="372">torture_knownhosts_read_file</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae8571ad5d4a9490badba8606e9942ec2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* ssh_session_get_host_port</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_session_get_host_port</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="302" column="13" bodyfile="src/knownhosts.c" bodystart="302" bodyend="334"/>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" compoundref="misc_8c" startline="371" endline="389">ssh_hostport</references>
        <references refid="group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff" compoundref="misc_8c" startline="352" endline="369">ssh_lowercase</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="group__libssh__session_1ga519c3985c8803c67d24ce9f937e3da9a" compoundref="src_2knownhosts_8c" startline="892" endline="952">ssh_session_export_known_hosts_entry</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structssh__list" kindref="compound">ssh_list</ref> *</type>
        <definition>struct ssh_list* ssh_known_hosts_get_algorithms</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_known_hosts_get_algorithms</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="347" column="15" bodyfile="src/knownhosts.c" bodystart="347" bodyend="453"/>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__knownhosts__entry_1a64df8de718e20463836e0e06eb5f312f" compoundref="libssh_8h" startline="323">ssh_knownhosts_entry::publickey</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="misc_8h_1a1f44c71b6f7ba10a4a543f73a07a85aa" compoundref="misc_8h" startline="73">ssh_iterator_value</references>
        <references refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</references>
        <references refid="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" compoundref="src_2knownhosts_8c" startline="145" endline="156">ssh_knownhosts_entry_free</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" compoundref="misc_8c" startline="703" endline="713">ssh_list_count</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <references refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" compoundref="misc_8c" startline="771" endline="798">ssh_list_remove</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="group__libssh__session_1gae8571ad5d4a9490badba8606e9942ec2" compoundref="src_2knownhosts_8c" startline="302" endline="334">ssh_session_get_host_port</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="structssh__key__struct_1af198ae6d0eee951e7d46b8dacbf3c412" compoundref="pki_8h" startline="57">ssh_key_struct::type_c</references>
        <referencedby refid="torture__knownhosts__verify_8c_1a440a79f135a76bbdc5cd40590ec30765" compoundref="torture__knownhosts__verify_8c" startline="216" endline="270">torture_knownhosts_duplicate</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ac1c0973d318a3572507db80d43277613" compoundref="torture__knownhosts__verify_8c" startline="146" endline="214">torture_knownhosts_precheck</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga3a9485c3e297b368b0bf3a9f045b8c1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* ssh_known_host_sigs_from_hostkey_type</definition>
        <argsstring>(enum ssh_keytypes_e type)</argsstring>
        <name>ssh_known_host_sigs_from_hostkey_type</name>
        <param>
          <type>enum <ref refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bce" kindref="member">ssh_keytypes_e</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="464" column="19" bodyfile="src/knownhosts.c" bodystart="464" bodyend="489"/>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bcea1adda9da237bf26cb1b46a9e3b9fd99f" compoundref="libssh_8h" startline="293">SSH_KEYTYPE_DSS</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bcea1f244a10b34e2f9dd3627edbef5166ed" compoundref="libssh_8h" startline="300">SSH_KEYTYPE_ECDSA_P256</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bceaeb5f376b9746eadb0210e4b1e797a226" compoundref="libssh_8h" startline="301">SSH_KEYTYPE_ECDSA_P384</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bcea60f4b5533fda0045bbbb4e18bfd6580d" compoundref="libssh_8h" startline="302">SSH_KEYTYPE_ECDSA_P521</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bcea237671d46fa2c7f139963e154d5430bf" compoundref="libssh_8h" startline="297">SSH_KEYTYPE_ED25519</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bcea94ea687ea48d0e1eceef97f1c1745683" compoundref="libssh_8h" startline="294">SSH_KEYTYPE_RSA</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bceafefc5ac8dd22ec75f84a6ad5ee2d591b" compoundref="libssh_8h" startline="292">SSH_KEYTYPE_UNKNOWN</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" compoundref="libssh_8h" startline="370">SSH_LOG_WARN</references>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ssh_known_hosts_get_algorithms_names</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_known_hosts_get_algorithms_names</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="504" column="6" bodyfile="src/knownhosts.c" bodystart="504" bodyend="593"/>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__knownhosts__entry_1a64df8de718e20463836e0e06eb5f312f" compoundref="libssh_8h" startline="323">ssh_knownhosts_entry::publickey</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="misc_8h_1a1f44c71b6f7ba10a4a543f73a07a85aa" compoundref="misc_8h" startline="73">ssh_iterator_value</references>
        <references refid="group__libssh__session_1ga3a9485c3e297b368b0bf3a9f045b8c1a" compoundref="src_2knownhosts_8c" startline="464" endline="489">ssh_known_host_sigs_from_hostkey_type</references>
        <references refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</references>
        <references refid="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" compoundref="src_2knownhosts_8c" startline="145" endline="156">ssh_knownhosts_entry_free</references>
        <references refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" compoundref="misc_8c" startline="703" endline="713">ssh_list_count</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" compoundref="misc_8c" startline="771" endline="798">ssh_list_remove</references>
        <references refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</references>
        <references refid="token_8h_1afaab89e7c5cf75e6874da23ce9434255" compoundref="token_8c" startline="276" endline="357">ssh_remove_duplicates</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="group__libssh__session_1gae8571ad5d4a9490badba8606e9942ec2" compoundref="src_2knownhosts_8c" startline="302" endline="334">ssh_session_get_host_port</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="structssh__key__struct_1a22557faf765b925690d178c9241fb3e2" compoundref="pki_8h" startline="55">ssh_key_struct::type</references>
        <referencedby refid="kex_8h_1a5e4f1c90323e182066cfe75a5153c111" compoundref="kex_8c" startline="570" endline="657">ssh_client_select_hostkeys</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a6d9c521b05703644072a60947172795b" compoundref="torture__knownhosts__parsing_8c" startline="374" endline="397">torture_knownhosts_get_algorithms_names</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaa3a37302850d0467f19db4eba5257d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_known_hosts_parse_line</definition>
        <argsstring>(const char *hostname, const char *line, struct ssh_knownhosts_entry **entry)</argsstring>
        <name>ssh_known_hosts_parse_line</name>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> **</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Parse a line from a known_hosts entry into a structure. </para>
        </briefdescription>
        <detaileddescription>
<para>This parses an known_hosts entry into a structure with the key in a libssh consumeable form. You can use the PKI key function to further work with it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>The hostname to match the line to</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line to compare and parse if we have a hostname match.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the the allocated known_hosts entry structure. The user needs to free the memory using <ref refid="libssh_8h_1a97f7d498f8b86ea63fb529c8ce89e35a" kindref="member">SSH_KNOWNHOSTS_ENTRY_FREE()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="612" column="5" bodyfile="src/knownhosts.c" bodystart="612" bodyend="765"/>
        <references refid="structssh__knownhosts__entry_1a1f776a10d4121f8ca9bee98f03947f6b" compoundref="libssh_8h" startline="324">ssh_knownhosts_entry::comment</references>
        <references refid="structssh__knownhosts__entry_1a0325dccebf28f626bd7dd76ea2b05552" compoundref="libssh_8h" startline="321">ssh_knownhosts_entry::hostname</references>
        <references refid="group__libssh__session_1gaf7b7c8e6b973ad5cb1c30c6f31f849c5" compoundref="src_2knownhosts_8c" startline="72" endline="136">match_hashed_hostname</references>
        <references refid="priv_8h_1a0e8d71766ba54ed5a5020997663bfd21" compoundref="match_8c" startline="195" endline="197">match_hostname</references>
        <references refid="structssh__knownhosts__entry_1a64df8de718e20463836e0e06eb5f312f" compoundref="libssh_8h" startline="323">ssh_knownhosts_entry::publickey</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" compoundref="libssh_8h" startline="331">SSH_AGAIN</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1" compoundref="misc_8c" startline="371" endline="389">ssh_hostport</references>
        <references refid="group__libssh__pki_1ga44584f2316c6ccd40e9939454335d8bc" compoundref="pki_8c" startline="536" endline="582">ssh_key_type_from_name</references>
        <references refid="group__libssh__pki_1ga302919f046a4af504e5a2a9924b031c1" compoundref="pki_8c" startline="283" endline="326">ssh_key_type_to_char</references>
        <references refid="libssh_8h_1a244b017e5993fde29fe9e9b1f04a7bceafefc5ac8dd22ec75f84a6ad5ee2d591b" compoundref="libssh_8h" startline="292">SSH_KEYTYPE_UNKNOWN</references>
        <references refid="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" compoundref="src_2knownhosts_8c" startline="145" endline="156">ssh_knownhosts_entry_free</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" compoundref="libssh_8h" startline="370">SSH_LOG_WARN</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__pki_1gac8d7d3fa88b93d8b059b6b5b2f457913" compoundref="pki_8c" startline="1562" endline="1593">ssh_pki_import_pubkey_base64</references>
        <references refid="structssh__knownhosts__entry_1a6541896b62f9757897d91e193c523805" compoundref="libssh_8h" startline="322">ssh_knownhosts_entry::unparsed</references>
        <referencedby refid="group__libssh__session_1ga4590766bedc2bf9a9f9727b3fac4eaa8" compoundref="src_2knownhosts_8c" startline="215" endline="300">ssh_known_hosts_read_entries</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a36e3957e81fce3b0eb61460c927ad958" compoundref="torture__knownhosts__parsing_8c" startline="213" endline="230">torture_knownhosts_parse_line_default_ed25519</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a3481b94e2b09af51171582591bd7578c" compoundref="torture__knownhosts__parsing_8c" startline="194" endline="211">torture_knownhosts_parse_line_ecdsa</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1aca60397d4343447a65a7c10cb8cada9e" compoundref="torture__knownhosts__parsing_8c" startline="310" endline="327">torture_knownhosts_parse_line_hashed_ed25519</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a0d59e48ea95de7fdc0a011d5766fe428" compoundref="torture__knownhosts__parsing_8c" startline="291" endline="308">torture_knownhosts_parse_line_pattern_ed25519</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a9d47c4e13a1f5d4245c715c6f8a22662" compoundref="torture__knownhosts__parsing_8c" startline="232" endline="249">torture_knownhosts_parse_line_port_ed25519</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a54100414bed56fed111dd9d9f88fc0bc" compoundref="torture__knownhosts__parsing_8c" startline="251" endline="269">torture_knownhosts_parse_line_port_wildcard</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a3eae3617506cb57b733c67092f927c66" compoundref="torture__knownhosts__parsing_8c" startline="161" endline="192">torture_knownhosts_parse_line_rsa</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a67e35b075158a3dcf256f1934e3f3953" compoundref="torture__knownhosts__parsing_8c" startline="271" endline="289">torture_knownhosts_parse_line_standard_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaffea2fa1210919f833a081739734476d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libssh_8h_1a6c80b2ddbe692af440986e1c5b8a2a92" kindref="member">ssh_known_hosts_e</ref></type>
        <definition>enum ssh_known_hosts_e ssh_session_has_known_hosts_entry</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_session_has_known_hosts_entry</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Check if the set hostname and port matches an entry in known_hosts. </para>
        </briefdescription>
        <detaileddescription>
<para>This check if the set hostname and port has an entry in the known_hosts file. You need to set at least the hostname using <ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session with with the values set to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A ssh_known_hosts_e return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="612" column="5" bodyfile="src/knownhosts.c" bodystart="777" bodyend="876"/>
        <referencedby refid="torture__knownhosts__parsing_8c_1a948a30602db763beff96bd4b8ec636e7" compoundref="torture__knownhosts__parsing_8c" startline="509" endline="538">torture_knownhosts_host_exists</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1ab6dafa14d4c630e2910477e9fd6c10c2" compoundref="torture__knownhosts__parsing_8c" startline="540" endline="569">torture_knownhosts_host_exists_global</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga519c3985c8803c67d24ce9f937e3da9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_session_export_known_hosts_entry</definition>
        <argsstring>(ssh_session session, char **pentry_string)</argsstring>
        <name>ssh_session_export_known_hosts_entry</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>pentry_string</declname>
        </param>
        <briefdescription>
<para>Export the current session information to a known_hosts string. </para>
        </briefdescription>
        <detaileddescription>
<para>This exports the current information of a session which is connected so a ssh server into an entry line which can be added to a known_hosts file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session with information to export.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pentry_string</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a string to store the alloocated line of the entry. The user must free it using <ref refid="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" kindref="member">ssh_string_free_char()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on succcess, SSH_ERROR otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="892" column="5" bodyfile="src/knownhosts.c" bodystart="892" bodyend="952"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="sshnetcat_8c_1a1c2046dcb30a629d6d9f45ff8f403f12" compoundref="sshnetcat_8c" startline="37">host</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__session_1ga750ce8095c0f1ac5154ba05284cb747c" compoundref="dh_8c" startline="632" endline="639">ssh_dh_get_current_server_publickey</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__pki_1ga2caa40cbd9620e9f7e3e7ab654b256c5" compoundref="pki_8c" startline="2060" endline="2084">ssh_pki_export_pubkey_base64</references>
        <references refid="group__libssh__session_1gae8571ad5d4a9490badba8606e9942ec2" compoundref="src_2knownhosts_8c" startline="302" endline="334">ssh_session_get_host_port</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1a351ea86857d33b3ba80b396e05c4517c" compoundref="priv_8h" startline="269">ssh_set_error_invalid</references>
        <references refid="structssh__key__struct_1af198ae6d0eee951e7d46b8dacbf3c412" compoundref="pki_8h" startline="57">ssh_key_struct::type_c</references>
        <referencedby refid="group__libssh__session_1gad10b597ab0b641a469c0190e5fe904a8" compoundref="src_2knownhosts_8c" startline="1041" endline="1103">ssh_known_hosts_check_server_key</referencedby>
        <referencedby refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" compoundref="known__hosts_8c" startline="499" endline="565">ssh_write_knownhost</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a3c720aacddf802500f74cbba91d224f2" compoundref="torture__knownhosts__verify_8c" startline="106" endline="127">torture_knownhosts_export</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga958fdd1aedcd85a5c496c0aa22362d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_session_update_known_hosts</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_session_update_known_hosts</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Add the current connected server to the user known_hosts file. </para>
        </briefdescription>
        <detaileddescription>
<para>This adds the currently connected server to the known_hosts file by appending a new line at the end. The global known_hosts file is considered read-only so it is not touched by this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to use to write the entry.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="965" column="5" bodyfile="src/knownhosts.c" bodystart="965" bodyend="1038"/>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts__verify_8c" startline="376" endline="444">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a1bec6abbbade54d9fe77c1c944c89cbf" compoundref="torture__knownhosts__verify_8c" startline="446" endline="481">torture_knownhosts_new_file</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ae3cab897764a701f2ee10f0de7b7ee65" compoundref="torture__knownhosts__verify_8c" startline="129" endline="144">torture_knownhosts_write_and_verify</referencedby>
        <referencedby refid="examples__common_8h_1ad5d8ab97d3635ecaf8fa78225cb960fb" compoundref="examples_2knownhosts_8c" startline="35" endline="117">verify_knownhost</referencedby>
        <referencedby refid="classssh_1_1Session_1ae55f054025dcbe4ceeaec87c9ca064c7" compoundref="libsshpp_8hpp" startline="409" endline="413">ssh::Session::writeKnownhost</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gad10b597ab0b641a469c0190e5fe904a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libssh_8h_1a6c80b2ddbe692af440986e1c5b8a2a92" kindref="member">ssh_known_hosts_e</ref></type>
        <definition>static enum ssh_known_hosts_e ssh_known_hosts_check_server_key</definition>
        <argsstring>(const char *hosts_entry, const char *filename, ssh_key server_key, struct ssh_knownhosts_entry **pentry)</argsstring>
        <name>ssh_known_hosts_check_server_key</name>
        <param>
          <type>const char *</type>
          <declname>hosts_entry</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref></type>
          <declname>server_key</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> **</type>
          <declname>pentry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="965" column="5" bodyfile="src/knownhosts.c" bodystart="1041" bodyend="1103"/>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa" compoundref="misc_8c" startline="847" endline="886">ssh_dirname</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__misc_1ga3208a5e5f292497b039f5fb4c0365965" compoundref="misc_8c" startline="977" endline="1028">ssh_mkdirs</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</references>
        <references refid="group__libssh__session_1ga519c3985c8803c67d24ce9f937e3da9a" compoundref="src_2knownhosts_8c" startline="892" endline="952">ssh_session_export_known_hosts_entry</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga874d3246c9c9bfc7040302e10650bce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libssh_8h_1a6c80b2ddbe692af440986e1c5b8a2a92" kindref="member">ssh_known_hosts_e</ref></type>
        <definition>enum ssh_known_hosts_e ssh_session_get_known_hosts_entry</definition>
        <argsstring>(ssh_session session, struct ssh_knownhosts_entry **pentry)</argsstring>
        <name>ssh_session_get_known_hosts_entry</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> **</type>
          <declname>pentry</declname>
        </param>
        <briefdescription>
<para>Get the known_hosts entry for the current connected session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to validate.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the allocated known hosts entry.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_KNOWN_HOSTS_OK: The server is known and has not changed.<linebreak/>
 SSH_KNOWN_HOSTS_CHANGED: The server key has changed. Either you are under attack or the administrator changed the key. You HAVE to warn the user about a possible attack.<linebreak/>
 SSH_KNOWN_HOSTS_OTHER: The server gave use a key of a type while we had an other type recorded. It is a possible attack.<linebreak/>
 SSH_KNOWN_HOSTS_UNKNOWN: The server is unknown. User should confirm the public key hash is correct.<linebreak/>
 SSH_KNOWN_HOSTS_NOT_FOUND: The known host file does not exist. The host is thus unknown. File will be created if host key is accepted.<linebreak/>
 SSH_KNOWN_HOSTS_ERROR: There had been an eror checking the host.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" kindref="member">ssh_knownhosts_entry_free()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="965" column="5" bodyfile="src/knownhosts.c" bodystart="1130" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae484a2e6dac6c5738db62c3ba602f118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libssh_8h_1a6c80b2ddbe692af440986e1c5b8a2a92" kindref="member">ssh_known_hosts_e</ref></type>
        <definition>enum ssh_known_hosts_e ssh_session_get_known_hosts_entry_file</definition>
        <argsstring>(ssh_session session, const char *filename, struct ssh_knownhosts_entry **pentry)</argsstring>
        <name>ssh_session_get_known_hosts_entry_file</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>struct <ref refid="structssh__knownhosts__entry" kindref="compound">ssh_knownhosts_entry</ref> **</type>
          <declname>pentry</declname>
        </param>
        <briefdescription>
<para>Get the known_hosts entry for the current connected session from the given known_hosts file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to validate.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename to parse.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pentry</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the allocated known hosts entry.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_KNOWN_HOSTS_OK: The server is known and has not changed.<linebreak/>
 SSH_KNOWN_HOSTS_CHANGED: The server key has changed. Either you are under attack or the administrator changed the key. You HAVE to warn the user about a possible attack.<linebreak/>
 SSH_KNOWN_HOSTS_OTHER: The server gave use a key of a type while we had an other type recorded. It is a possible attack.<linebreak/>
 SSH_KNOWN_HOSTS_UNKNOWN: The server is unknown. User should confirm the public key hash is correct.<linebreak/>
 SSH_KNOWN_HOSTS_NOT_FOUND: The known host file does not exist. The host is thus unknown. File will be created if host key is accepted.<linebreak/>
 SSH_KNOWN_HOSTS_ERROR: There had been an eror checking the host.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga97b827bd9eef76277e8420359e843cd8" kindref="member">ssh_knownhosts_entry_free()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="965" column="5" bodyfile="src/knownhosts.c" bodystart="1199" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gacbc5d04fe66beee863a0c61a93fdf765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="libssh_8h_1a6c80b2ddbe692af440986e1c5b8a2a92" kindref="member">ssh_known_hosts_e</ref></type>
        <definition>enum ssh_known_hosts_e ssh_session_is_known_server</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_session_is_known_server</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Check if the servers public key for the connected session is known. </para>
        </briefdescription>
        <detaileddescription>
<para>This checks if we already know the public key of the server we want to connect to. This allows to detect if there is a MITM attach going on of if there have been changes on the server we don&apos;t know about.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH to validate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_KNOWN_HOSTS_OK: The server is known and has not changed.<linebreak/>
 SSH_KNOWN_HOSTS_CHANGED: The server key has changed. Either you are under attack or the administrator changed the key. You HAVE to warn the user about a possible attack.<linebreak/>
 SSH_KNOWN_HOSTS_OTHER: The server gave use a key of a type while we had an other type recorded. It is a possible attack.<linebreak/>
 SSH_KNOWN_HOSTS_UNKNOWN: The server is unknown. User should confirm the public key hash is correct.<linebreak/>
 SSH_KNOWN_HOSTS_NOT_FOUND: The known host file does not exist. The host is thus unknown. File will be created if host key is accepted.<linebreak/>
 SSH_KNOWN_HOSTS_ERROR: There had been an error checking the host. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/knownhosts.c" line="965" column="5" bodyfile="src/knownhosts.c" bodystart="1255" bodyend="1258"/>
        <referencedby refid="sftp__stress_2main_8c_1acc3eb7c671bca3152e8e0df16bd40145" compoundref="sftp__stress_2main_8c" startline="76" endline="135">connect_host</referencedby>
        <referencedby refid="test__exec_8c_1acbd4f6c4ecc68d1c4cc45223741be81c" compoundref="test__exec_8c" startline="10" endline="49">do_connect</referencedby>
        <referencedby refid="classssh_1_1Session_1a0b7055cb236685a9c18cb79c5492b40f" compoundref="libsshpp_8hpp" startline="366" endline="370">ssh::Session::isServerKnown</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts__verify_8c" startline="376" endline="444">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a1bec6abbbade54d9fe77c1c944c89cbf" compoundref="torture__knownhosts__verify_8c" startline="446" endline="481">torture_knownhosts_new_file</referencedby>
        <referencedby refid="torture__knownhosts_8c_1ad7fb1fdd720acfe6c69b365fb780cb8a" compoundref="torture__knownhosts_8c" startline="429" endline="467">torture_knownhosts_no_hostkeychecking</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ad850aa1f10a4696e6c967764883ebab9" compoundref="torture__knownhosts__verify_8c" startline="272" endline="310">torture_knownhosts_other</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ae3cab897764a701f2ee10f0de7b7ee65" compoundref="torture__knownhosts__verify_8c" startline="129" endline="144">torture_knownhosts_write_and_verify</referencedby>
        <referencedby refid="torture__server_8c_1addf40aeb91f2224a5baf6488d42560c7" compoundref="torture__server_8c" startline="426" endline="474">torture_server_hostkey_mismatch</referencedby>
        <referencedby refid="examples__common_8h_1ad5d8ab97d3635ecaf8fa78225cb960fb" compoundref="examples_2knownhosts_8c" startline="35" endline="117">verify_knownhost</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_copy</definition>
        <argsstring>(ssh_session src, ssh_session *dest)</argsstring>
        <name>ssh_options_copy</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Duplicate the options of a session structure. </para>
        </briefdescription>
        <detaileddescription>
<para>If you make several sessions with the same options this is useful. You cannot use twice the same option structure in ssh_session_connect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to use to copy the options.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the allocated session with duplicated options. You have to free the memory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on sucess, -1 on error with errno set.</para>
</simplesect>
<simplesect kind="see"><para>ssh_session_connect() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="65" column="5" bodyfile="src/options.c" bodystart="65" bodyend="218"/>
        <references refid="structssh__session__struct_1aeb04cd35ddee3f87372ed8bd3d9ce244" compoundref="session_8h" startline="212">ssh_session_struct::bindaddr</references>
        <references refid="structssh__common__struct_1a2f42939ea278698d861c7617b7529eb7" compoundref="session_8h" startline="105">ssh_common_struct::callbacks</references>
        <references refid="structssh__session__struct_1acad23ad6d8bee359da41b9ed0faa6eaa" compoundref="session_8h" startline="110">ssh_session_struct::common</references>
        <references refid="structssh__session__struct_1a33200f25a192fb69b2a02c7ed0efd893" compoundref="session_8h" startline="225">ssh_session_struct::compressionlevel</references>
        <references refid="structssh__session__struct_1a4804ae72067b9764e26081cd325b1842" compoundref="session_8h" startline="231">ssh_session_struct::config_processed</references>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__session__struct_1ab215cd999fce8410d28272e2cde4633d" compoundref="session_8h" startline="223">ssh_session_struct::fd</references>
        <references refid="structssh__session__struct_1a997060832a3419d8fe884d3da855ef4c" compoundref="session_8h" startline="129">ssh_session_struct::flags</references>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1a925131e74deeb383023d8167d5161e55" compoundref="session_8h" startline="227">ssh_session_struct::gss_client_identity</references>
        <references refid="structssh__session__struct_1a40b8b30f2f0dd4130e3e519491cd69c9" compoundref="session_8h" startline="228">ssh_session_struct::gss_delegate_creds</references>
        <references refid="structssh__session__struct_1af2b2f50e9d7319d5be2ff76479843b97" compoundref="session_8h" startline="226">ssh_session_struct::gss_server_identity</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1aab5ecfb12d53a23b21dbf61790aa7e94" compoundref="session_8h" startline="209">ssh_session_struct::identity</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__common__struct_1ade6c3456cf220bcb7b0823f8e682a82d" compoundref="session_8h" startline="106">ssh_common_struct::log_verbosity</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__session__struct_1a1a99a788a0770dc4094be9731f3bcd70" compoundref="session_8h" startline="230">ssh_session_struct::nodelay</references>
        <references refid="structssh__session__struct_1a5297e137dec578d7e290ea1aa7a21312" compoundref="session_8h" startline="232">ssh_session_struct::options_seen</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="structssh__session__struct_1a988d47dd297709a12a1b74d35b2b79fb" compoundref="session_8h" startline="218">ssh_session_struct::ProxyCommand</references>
        <references refid="structssh__session__struct_1a41e181fed08e20b58360cb429cf8689f" compoundref="session_8h" startline="217">ssh_session_struct::pubkey_accepted_types</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</references>
        <references refid="kex_8h_1a0aac49551fe045f9a556155c3d8a02a5" compoundref="kex_8h" startline="27">SSH_KEX_METHODS</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="misc_8h_1a8221bf821961617b90566035eb1a7760" compoundref="misc_8h" startline="81">ssh_list_pop_head</references>
        <references refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</references>
        <references refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" compoundref="session_8h" startline="213">ssh_session_struct::sshdir</references>
        <references refid="structssh__session__struct_1aaa1e1a9873eafee679684afa13a58bbc" compoundref="session_8h" startline="224">ssh_session_struct::StrictHostKeyChecking</references>
        <references refid="structssh__session__struct_1a551386dc1ac438997d8348cbf12983ad" compoundref="session_8h" startline="220">ssh_session_struct::timeout</references>
        <references refid="structssh__session__struct_1afb6ab92b01733c0ba287d01e8cef55bd" compoundref="session_8h" startline="221">ssh_session_struct::timeout_usec</references>
        <references refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" compoundref="session_8h" startline="210">ssh_session_struct::username</references>
        <references refid="structssh__session__struct_1a6023ca7ba47bbed4837f72bf9dde5948" compoundref="session_8h" startline="216">ssh_session_struct::wanted_methods</references>
        <referencedby refid="classssh_1_1Session_1ac95e750dc93d77fe463cbd054a87934a" compoundref="libsshpp_8hpp" startline="385" endline="388">ssh::Session::optionsCopy</referencedby>
        <referencedby refid="torture__options_8c_1a64f216f56007a228aff29721e4b97cd3" compoundref="torture__options_8c" startline="805" endline="911">torture_options_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gab88261ef1a07c42d7e2759d7af164047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_set_algo</definition>
        <argsstring>(ssh_session session, enum ssh_kex_types_e algo, const char *list)</argsstring>
        <name>ssh_options_set_algo</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>enum <ref refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02f" kindref="member">ssh_kex_types_e</ref></type>
          <declname>algo</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="220" column="5" bodyfile="src/options.c" bodystart="220" bodyend="243"/>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="kex_8h_1a5f9fa3e2a3fd13d8dfd753b647e7d294" compoundref="kex_8c" startline="937" endline="944">ssh_keep_fips_algos</references>
        <references refid="kex_8h_1acd8064e0435ae07a1e27d4e71201c44e" compoundref="kex_8c" startline="916" endline="923">ssh_keep_known_algos</references>
        <references refid="kex_8h_1a31bfb02d11f6dbf284e3fe6cc685829d" compoundref="kex_8c" startline="274" endline="280">ssh_kex_get_description</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="structssh__session__struct_1a6023ca7ba47bbed4837f72bf9dde5948" compoundref="session_8h" startline="216">ssh_session_struct::wanted_methods</references>
        <referencedby refid="group__libssh__server_1gac8dda51f6f008e42e60d824e2ef2e453" compoundref="server_8c" startline="84" endline="195">server_set_kex</referencedby>
        <referencedby refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_set</definition>
        <argsstring>(ssh_session session, enum ssh_options_e type, const void *value)</argsstring>
        <name>ssh_options_set</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>enum <ref refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46c" kindref="member">ssh_options_e</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>This function can set all possible ssh options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>An allocated SSH session structure.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The option type to set. This could be one of the following:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>SSH_OPTIONS_HOST: The hostname or ip address to connect to (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_PORT: The port to connect to (unsigned int *).</para>
</listitem><listitem><para>SSH_OPTIONS_PORT_STR: The port to connect to (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_FD: The file descriptor to use (socket_t).<linebreak/>
 <linebreak/>
 If you wish to open the socket yourself for a reason or another, set the file descriptor. Don&apos;t forget to set the hostname as the hostname is used as a key in the known_host mechanism.</para>
</listitem><listitem><para>SSH_OPTIONS_BINDADDR: The address to bind the client to (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_USER: The username for authentication (const char *).<linebreak/>
 <linebreak/>
 If the value is NULL, the username is set to the default username.</para>
</listitem><listitem><para>SSH_OPTIONS_SSH_DIR: Set the ssh directory (const char *,format string).<linebreak/>
 <linebreak/>
 If the value is NULL, the directory is set to the default ssh directory.<linebreak/>
 <linebreak/>
 The ssh directory is used for files like known_hosts and identity (private and public key). It may include &quot;%s&quot; which will be replaced by the user home directory.</para>
</listitem><listitem><para>SSH_OPTIONS_KNOWNHOSTS: Set the known hosts file name (const char *,format string).<linebreak/>
 <linebreak/>
 If the value is NULL, the directory is set to the default known hosts file, normally ~/.ssh/known_hosts.<linebreak/>
 <linebreak/>
 The known hosts file is used to certify remote hosts are genuine. It may include &quot;%d&quot; which will be replaced by the user home directory.</para>
</listitem><listitem><para>SSH_OPTIONS_GLOBAL_KNOWNHOSTS: Set the global known hosts file name (const char *,format string).<linebreak/>
 <linebreak/>
 If the value is NULL, the directory is set to the default global known hosts file, normally /etc/ssh/ssh_known_hosts.<linebreak/>
 <linebreak/>
 The known hosts file is used to certify remote hosts are genuine.</para>
</listitem><listitem><para>SSH_OPTIONS_ADD_IDENTITY (or SSH_OPTIONS_IDENTITY): Add a new identity file (const char *, format string) to the identity list.<linebreak/>
 <linebreak/>
 By default identity, id_dsa and id_rsa are checked.<linebreak/>
 <linebreak/>
 The identity used to authenticate with public key will be prepended to the list. It may include &quot;%s&quot; which will be replaced by the user home directory.</para>
</listitem><listitem><para>SSH_OPTIONS_TIMEOUT: Set a timeout for the connection in seconds (long).</para>
</listitem><listitem><para>SSH_OPTIONS_TIMEOUT_USEC: Set a timeout for the connection in micro seconds (long).</para>
</listitem><listitem><para>SSH_OPTIONS_SSH1: Deprecated</para>
</listitem><listitem><para>SSH_OPTIONS_SSH2: Unused</para>
</listitem><listitem><para>SSH_OPTIONS_LOG_VERBOSITY: Set the session logging verbosity (int).<linebreak/>
 <linebreak/>
 The verbosity of the messages. Every log smaller or equal to verbosity will be shown.<itemizedlist>
<listitem><para>SSH_LOG_NOLOG: No logging</para>
</listitem><listitem><para>SSH_LOG_WARNING: Only warnings</para>
</listitem><listitem><para>SSH_LOG_PROTOCOL: High level protocol information</para>
</listitem><listitem><para>SSH_LOG_PACKET: Lower level protocol infomations, packet level</para>
</listitem><listitem><para>SSH_LOG_FUNCTIONS: Every function path</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>SSH_OPTIONS_LOG_VERBOSITY_STR: Set the session logging verbosity via a string that will be converted to a numerical value (e.g. &quot;3&quot;) and interpreted according to the values of SSH_OPTIONS_LOG_VERBOSITY above (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_CIPHERS_C_S: Set the symmetric cipher client to server (const char *, comma-separated list).</para>
</listitem><listitem><para>SSH_OPTIONS_CIPHERS_S_C: Set the symmetric cipher server to client (const char *, comma-separated list).</para>
</listitem><listitem><para>SSH_OPTIONS_KEY_EXCHANGE: Set the key exchange method to be used (const char *, comma-separated list). ex: &quot;ecdh-sha2-nistp256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1&quot;</para>
</listitem><listitem><para>SSH_OPTIONS_HMAC_C_S: Set the Message Authentication Code algorithm client to server (const char *, comma-separated list).</para>
</listitem><listitem><para>SSH_OPTIONS_HMAC_S_C: Set the Message Authentication Code algorithm server to client (const char *, comma-separated list).</para>
</listitem><listitem><para>SSH_OPTIONS_HOSTKEYS: Set the preferred server host key types (const char *, comma-separated list). ex: &quot;ssh-rsa,ssh-dss,ecdh-sha2-nistp256&quot;</para>
</listitem><listitem><para>SSH_OPTIONS_PUBLICKEY_ACCEPTED_TYPES: Set the preferred public key algorithms to be used for authentication (const char *, comma-separated list). ex: &quot;ssh-rsa,rsa-sha2-256,ssh-dss,ecdh-sha2-nistp256&quot;</para>
</listitem><listitem><para>SSH_OPTIONS_COMPRESSION_C_S: Set the compression to use for client to server communication (const char *, &quot;yes&quot;, &quot;no&quot; or a specific algorithm name if needed (&quot;zlib&quot;,&quot;zlib@openssh.com&quot;,&quot;none&quot;).</para>
</listitem><listitem><para>SSH_OPTIONS_COMPRESSION_S_C: Set the compression to use for server to client communication (const char *, &quot;yes&quot;, &quot;no&quot; or a specific algorithm name if needed (&quot;zlib&quot;,&quot;zlib@openssh.com&quot;,&quot;none&quot;).</para>
</listitem><listitem><para>SSH_OPTIONS_COMPRESSION: Set the compression to use for both directions communication (const char *, &quot;yes&quot;, &quot;no&quot; or a specific algorithm name if needed (&quot;zlib&quot;,&quot;zlib@openssh.com&quot;,&quot;none&quot;).</para>
</listitem><listitem><para>SSH_OPTIONS_COMPRESSION_LEVEL: Set the compression level to use for zlib functions. (int, value from 1 to 9, 9 being the most efficient but slower).</para>
</listitem><listitem><para>SSH_OPTIONS_STRICTHOSTKEYCHECK: Set the parameter StrictHostKeyChecking to avoid asking about a fingerprint (int, 0 = false).</para>
</listitem><listitem><para>SSH_OPTIONS_PROXYCOMMAND: Set the command to be executed in order to connect to server (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_GSSAPI_SERVER_IDENTITY Set it to specify the GSSAPI server identity that libssh should expect when connecting to the server (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_GSSAPI_CLIENT_IDENTITY Set it to specify the GSSAPI client identity that libssh should expect when connecting to the server (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_GSSAPI_DELEGATE_CREDENTIALS Set it to specify that GSSAPI should delegate credentials to the server (int, 0 = false).</para>
</listitem><listitem><para>SSH_OPTIONS_PASSWORD_AUTH Set it if password authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false). Currently without effect (ssh_userauth_auto_pubkey doesn&apos;t use password authentication).</para>
</listitem><listitem><para>SSH_OPTIONS_PUBKEY_AUTH Set it if pubkey authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false).</para>
</listitem><listitem><para>SSH_OPTIONS_KBDINT_AUTH Set it if keyboard-interactive authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false). Currently without effect (ssh_userauth_auto_pubkey doesn&apos;t use keyboard-interactive authentication).</para>
</listitem><listitem><para>SSH_OPTIONS_GSSAPI_AUTH Set it if gssapi authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false). Currently without effect (ssh_userauth_auto_pubkey doesn&apos;t use gssapi authentication).</para>
</listitem><listitem><para>SSH_OPTIONS_NODELAY Set it to disable Nagle&apos;s Algorithm (TCP_NODELAY) on the session socket. (int, 0=false)</para>
</listitem><listitem><para>SSH_OPTIONS_PROCESS_CONFIG Set it to false to disable automatic processing of per-user and system-wide OpenSSH configuration files. LibSSH automatically uses these configuration files unless you provide it with this option or with different file (bool).</para>
</listitem><listitem><para>SSH_OPTIONS_REKEY_DATA Set the data limit that can be transferred with a single key in bytes. RFC 4253 Section 9 recommends 1GB of data, while RFC 4344 provides more specific restrictions, that are applied automatically. When specified, the lower value will be used. (uint64_t, 0=default)</para>
</listitem><listitem><para>SSH_OPTIONS_REKEY_TIME Set the time limit for a session before intializing a rekey in seconds. RFC 4253 Section 9 recommends one hour. (uint32_t, 0=off)</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set. This is a generic pointer and the datatype which is used should be set according to the type set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="474" column="5" bodyfile="src/options.c" bodystart="474" bodyend="1039"/>
        <references refid="structssh__session__struct_1aeb04cd35ddee3f87372ed8bd3d9ce244" compoundref="session_8h" startline="212">ssh_session_struct::bindaddr</references>
        <references refid="structssh__session__struct_1acad23ad6d8bee359da41b9ed0faa6eaa" compoundref="session_8h" startline="110">ssh_session_struct::common</references>
        <references refid="structssh__session__struct_1a33200f25a192fb69b2a02c7ed0efd893" compoundref="session_8h" startline="225">ssh_session_struct::compressionlevel</references>
        <references refid="structssh__session__struct_1a4804ae72067b9764e26081cd325b1842" compoundref="session_8h" startline="231">ssh_session_struct::config_processed</references>
        <references refid="structssh__session__struct_1ab215cd999fce8410d28272e2cde4633d" compoundref="session_8h" startline="223">ssh_session_struct::fd</references>
        <references refid="structssh__session__struct_1a997060832a3419d8fe884d3da855ef4c" compoundref="session_8h" startline="129">ssh_session_struct::flags</references>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1a925131e74deeb383023d8167d5161e55" compoundref="session_8h" startline="227">ssh_session_struct::gss_client_identity</references>
        <references refid="structssh__session__struct_1a40b8b30f2f0dd4130e3e519491cd69c9" compoundref="session_8h" startline="228">ssh_session_struct::gss_delegate_creds</references>
        <references refid="structssh__session__struct_1af2b2f50e9d7319d5be2ff76479843b97" compoundref="session_8h" startline="226">ssh_session_struct::gss_server_identity</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1aab5ecfb12d53a23b21dbf61790aa7e94" compoundref="session_8h" startline="209">ssh_session_struct::identity</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__common__struct_1ade6c3456cf220bcb7b0823f8e682a82d" compoundref="session_8h" startline="106">ssh_common_struct::log_verbosity</references>
        <references refid="structssh__session__struct_1a1a99a788a0770dc4094be9731f3bcd70" compoundref="session_8h" startline="230">ssh_session_struct::nodelay</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="structssh__session__struct_1a988d47dd297709a12a1b74d35b2b79fb" compoundref="session_8h" startline="218">ssh_session_struct::ProxyCommand</references>
        <references refid="structssh__session__struct_1a41e181fed08e20b58360cb429cf8689f" compoundref="session_8h" startline="217">ssh_session_struct::pubkey_accepted_types</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__session__struct_1ace956ae112ce7baae7db57f554e713f7" compoundref="session_8h" startline="233">ssh_session_struct::rekey_data</references>
        <references refid="structssh__session__struct_1ab76b763f42370c169e5a7fbf478ae189" compoundref="session_8h" startline="234">ssh_session_struct::rekey_time</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02fa9f5e6c7ac6bc08f82e5e97e919f2c8cf" compoundref="libssh_8h" startline="150">SSH_COMP_C_S</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02faf7f2b92af7f68aa4c58800e607a961b7" compoundref="libssh_8h" startline="151">SSH_COMP_S_C</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02fae05802581a5e6b1127c589f263eab4c9" compoundref="libssh_8h" startline="146">SSH_CRYPT_C_S</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02faac5821ec7aca39ea394e0072bc7aed50" compoundref="libssh_8h" startline="147">SSH_CRYPT_S_C</references>
        <references refid="group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51" compoundref="misc_8c" startline="300" endline="320">ssh_get_local_username</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02fa642dda9838782d3808b70c6e943c7a57" compoundref="libssh_8h" startline="145">SSH_HOSTKEYS</references>
        <references refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" compoundref="libssh_8h" startline="140">SSH_INVALID_SOCKET</references>
        <references refid="kex_8h_1a5f9fa3e2a3fd13d8dfd753b647e7d294" compoundref="kex_8c" startline="937" endline="944">ssh_keep_fips_algos</references>
        <references refid="kex_8h_1acd8064e0435ae07a1e27d4e71201c44e" compoundref="kex_8c" startline="916" endline="923">ssh_keep_known_algos</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02faf573b21b55662289931bc5f4726302b4" compoundref="libssh_8h" startline="144">SSH_KEX</references>
        <references refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" compoundref="misc_8c" startline="747" endline="769">ssh_list_prepend</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02fa6846e5960a4166410d91360bc5b81ac8" compoundref="libssh_8h" startline="148">SSH_MAC_C_S</references>
        <references refid="libssh_8h_1a3af3a0324900b0fa3848b9b77cb6b02fa0375ae9eec6b5875abc665c0fc117c4f" compoundref="libssh_8h" startline="149">SSH_MAC_S_C</references>
        <references refid="session_8h_1a656e58be3ed5cc711220293299c66d7e" compoundref="session_8h" startline="93">SSH_OPT_FLAG_GSSAPI_AUTH</references>
        <references refid="session_8h_1adc1d400575107a6381fc7ba9759f21b8" compoundref="session_8h" startline="92">SSH_OPT_FLAG_KBDINT_AUTH</references>
        <references refid="session_8h_1a2da413e141a4f56b653dd659df13a4b5" compoundref="session_8h" startline="90">SSH_OPT_FLAG_PASSWORD_AUTH</references>
        <references refid="session_8h_1a4a21bc2bfa096997458dcfccbda31434" compoundref="session_8h" startline="91">SSH_OPT_FLAG_PUBKEY_AUTH</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca950bb20d17288a1a3748bdd13a5ad594" compoundref="libssh_8h" startline="388">SSH_OPTIONS_ADD_IDENTITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca8dd95282b035febffe4c293bd3cd7017" compoundref="libssh_8h" startline="401">SSH_OPTIONS_BINDADDR</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca68b35bccdc3c62a9806c961af8dbcd1f" compoundref="libssh_8h" startline="396">SSH_OPTIONS_CIPHERS_C_S</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca41d6ad083136f9109d767deaf4cd9b3b" compoundref="libssh_8h" startline="397">SSH_OPTIONS_CIPHERS_S_C</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca7b37206d5e98fc5e8b062a5df36849ed" compoundref="libssh_8h" startline="403">SSH_OPTIONS_COMPRESSION</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46caa3c00d6dac2d913f6d01ee1b0470ee3b" compoundref="libssh_8h" startline="398">SSH_OPTIONS_COMPRESSION_C_S</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca4a2841805b2228b123fee53d2611b0a1" compoundref="libssh_8h" startline="404">SSH_OPTIONS_COMPRESSION_LEVEL</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca6bb18017317c7e01a46770e2c7de0bfd" compoundref="libssh_8h" startline="399">SSH_OPTIONS_COMPRESSION_S_C</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca66d8a74748f5ce744c7475876b7195cd" compoundref="libssh_8h" startline="384">SSH_OPTIONS_FD</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca39639fc780c51a7ddd31d8bd0f5b4075" compoundref="libssh_8h" startline="416">SSH_OPTIONS_GLOBAL_KNOWNHOSTS</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cad611d3f9a84764ed8c4b63247b5746de" compoundref="libssh_8h" startline="415">SSH_OPTIONS_GSSAPI_AUTH</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca548902dd9c92ad1b3511d87c0ebd2a3e" compoundref="libssh_8h" startline="408">SSH_OPTIONS_GSSAPI_CLIENT_IDENTITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca2fc797856e7694548304f57bb77986ff" compoundref="libssh_8h" startline="409">SSH_OPTIONS_GSSAPI_DELEGATE_CREDENTIALS</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca458e06048fa54625f0b2d65a09acc7d6" compoundref="libssh_8h" startline="407">SSH_OPTIONS_GSSAPI_SERVER_IDENTITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca80d3b19e3af46441f8a48bce47913f36" compoundref="libssh_8h" startline="410">SSH_OPTIONS_HMAC_C_S</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca13afe977507032794e542a0fd0b54b1a" compoundref="libssh_8h" startline="411">SSH_OPTIONS_HMAC_S_C</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca6560e124c042153de507732d489e5564" compoundref="libssh_8h" startline="381">SSH_OPTIONS_HOST</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cac6f764f9209ce6af66ee7e438b8d46b2" compoundref="libssh_8h" startline="406">SSH_OPTIONS_HOSTKEYS</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46caa5986025cf4a64e8adcda3242989990c" compoundref="libssh_8h" startline="387">SSH_OPTIONS_IDENTITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca565da59b71f3d9da7280d62dc058679a" compoundref="libssh_8h" startline="414">SSH_OPTIONS_KBDINT_AUTH</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cada1844bdde7490e4a83d7e9074dfc255" compoundref="libssh_8h" startline="405">SSH_OPTIONS_KEY_EXCHANGE</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cac047647e175ee39f50f48964df670649" compoundref="libssh_8h" startline="389">SSH_OPTIONS_KNOWNHOSTS</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46caaad9d185338d90669d96cfee24cce677" compoundref="libssh_8h" startline="394">SSH_OPTIONS_LOG_VERBOSITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca35b7834ff7585ccbb28a141c060fa724" compoundref="libssh_8h" startline="395">SSH_OPTIONS_LOG_VERBOSITY_STR</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cad09699c95656a09af2e210ae553de7b0" compoundref="libssh_8h" startline="417">SSH_OPTIONS_NODELAY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca7bc6bab7a9b4600157337334eb1091d1" compoundref="libssh_8h" startline="412">SSH_OPTIONS_PASSWORD_AUTH</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cadbd41b9859a59935c597cb4ffc01d224" compoundref="libssh_8h" startline="382">SSH_OPTIONS_PORT</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca43f5dd7726729b4b4ef70ac2cf729a90" compoundref="libssh_8h" startline="383">SSH_OPTIONS_PORT_STR</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca4fbb0946bed00adb19e8f725fc35fbd6" compoundref="libssh_8h" startline="419">SSH_OPTIONS_PROCESS_CONFIG</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca32efaa3cf66ae2c42d9f979472086d3b" compoundref="libssh_8h" startline="400">SSH_OPTIONS_PROXYCOMMAND</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca65c0af9bac6744558ecb60bc4f01997f" compoundref="libssh_8h" startline="413">SSH_OPTIONS_PUBKEY_AUTH</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46caad8474f977b4e249b5202dbcb72e1cc0" compoundref="libssh_8h" startline="418">SSH_OPTIONS_PUBLICKEY_ACCEPTED_TYPES</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca4dbfd6318f18741269408b2a18461462" compoundref="libssh_8h" startline="420">SSH_OPTIONS_REKEY_DATA</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca20b080d15058f649a4553594cf3f08b4" compoundref="libssh_8h" startline="421">SSH_OPTIONS_REKEY_TIME</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="group__libssh__session_1gab88261ef1a07c42d7e2759d7af164047" compoundref="options_8c" startline="220" endline="243">ssh_options_set_algo</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca98035bbcf8fe8b8e6fd83dc3b829a8cb" compoundref="libssh_8h" startline="392">SSH_OPTIONS_SSH1</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca1a31b0aa8a89dc2b9101d867dbadd39d" compoundref="libssh_8h" startline="393">SSH_OPTIONS_SSH2</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cab6f7ef3b251c5f7398ec3de73d881218" compoundref="libssh_8h" startline="386">SSH_OPTIONS_SSH_DIR</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cac089d4fcafc54cb0a638e8b989a2662f" compoundref="libssh_8h" startline="402">SSH_OPTIONS_STRICTHOSTKEYCHECK</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca878146ad2e21ee8a79c21bbee58250ad" compoundref="libssh_8h" startline="390">SSH_OPTIONS_TIMEOUT</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca7c8a9d18818ed0fdbda806d19a2cc817" compoundref="libssh_8h" startline="391">SSH_OPTIONS_TIMEOUT_USEC</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca41a41401297578b6a88df70b50a3cd21" compoundref="libssh_8h" startline="385">SSH_OPTIONS_USER</references>
        <references refid="group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28" compoundref="misc_8c" startline="1037" endline="1093">ssh_path_expand_tilde</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1a351ea86857d33b3ba80b396e05c4517c" compoundref="priv_8h" startline="269">ssh_set_error_invalid</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="group__libssh__log_1ga9719dabb8fab8a3ebeb4dc2ebcd2dd45" compoundref="log_8c" startline="181" endline="189">ssh_set_log_level</references>
        <references refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" compoundref="session_8h" startline="213">ssh_session_struct::sshdir</references>
        <references refid="structssh__session__struct_1aaa1e1a9873eafee679684afa13a58bbc" compoundref="session_8h" startline="224">ssh_session_struct::StrictHostKeyChecking</references>
        <references refid="structssh__session__struct_1a551386dc1ac438997d8348cbf12983ad" compoundref="session_8h" startline="220">ssh_session_struct::timeout</references>
        <references refid="structssh__session__struct_1afb6ab92b01733c0ba287d01e8cef55bd" compoundref="session_8h" startline="221">ssh_session_struct::timeout_usec</references>
        <references refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" compoundref="session_8h" startline="210">ssh_session_struct::username</references>
        <referencedby refid="torture__client__global__requests_8c_1af5545d548930acf58deb2c6d1d830cf9" compoundref="torture__client__global__requests_8c" startline="91" endline="107">authenticate</referencedby>
        <referencedby refid="ssh__client_8c_1a0d3591711bd7d6cb03d42294115721bb" compoundref="ssh__client_8c" startline="318" endline="366">client</referencedby>
        <referencedby refid="benchmarks_8c_1aa10487258ce1df1ef42bee98693a777a" compoundref="benchmarks_8c" startline="276" endline="299">connect_host</referencedby>
        <referencedby refid="connect__ssh_8c_1ada855ebf4aac69d9a59afb23a8e338f4" compoundref="connect__ssh_8c" startline="24" endline="67">connect_ssh</referencedby>
        <referencedby refid="ssh__client__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__client__fuzzer_8cpp" startline="85" endline="158">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="proxy_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="proxy_8c" startline="215" endline="346">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="torture__algorithms_8c_1a4c842d8a0ce0e842445303734e0b97fe" compoundref="torture__algorithms_8c" startline="48" endline="71">session_setup</referencedby>
        <referencedby refid="classssh_1_1Session_1a5b1840081e321b82cd19af1b3f98e069" compoundref="libsshpp_8hpp" startline="142" endline="145">ssh::Session::setOption</referencedby>
        <referencedby refid="torture__options_8c_1ab3743688c369a6a63ebea4512080e9fe" compoundref="torture__options_8c" startline="30" endline="45">setup</referencedby>
        <referencedby refid="torture__client__config_8c_1addbd98b07c96dc8546c2a3b053bbcf4e" compoundref="torture__client__config_8c" startline="31" endline="60">setup_config_files</referencedby>
        <referencedby refid="test__ssh__bind__accept__fd_8c_1a723afb31fe0043e3ac0f0679898753af" compoundref="test__ssh__bind__accept__fd_8c" startline="105" endline="123">ssh_client</referencedby>
        <referencedby refid="config_8c_1a45c85072922b6f53ea96012589d601db" compoundref="config_8c" startline="508" endline="1134">ssh_config_parse_line</referencedby>
        <referencedby refid="config_8c_1a9d8669375c734bad778bb45a26c39f37" compoundref="config_8c" startline="421" endline="505">ssh_config_parse_proxy_jump</referencedby>
        <referencedby refid="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" compoundref="options_8c" startline="1420" endline="1490">ssh_options_apply</referencedby>
        <referencedby refid="group__libssh__session_1ga93f7f7159893f3ce62c9b178724eff75" compoundref="options_8c" startline="1193" endline="1357">ssh_options_getopt</referencedby>
        <referencedby refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" compoundref="options_8c" startline="1375" endline="1418">ssh_options_parse_config</referencedby>
        <referencedby refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</referencedby>
        <referencedby refid="torture__algorithms_8c_1a15b3d1cac3aa670c3409b3bdc4c30223" compoundref="torture__algorithms_8c" startline="83" endline="135">test_algorithm</referencedby>
        <referencedby refid="torture__algorithms_8c_1a09eb7c5ef70408a9d0a2771bdfa48c7a" compoundref="torture__algorithms_8c" startline="553" endline="589">torture_algorithms_zlib</referencedby>
        <referencedby refid="torture__algorithms_8c_1af4b1201c7c4184336c8ce8b13b8052c6" compoundref="torture__algorithms_8c" startline="591" endline="628">torture_algorithms_zlib_openssh</referencedby>
        <referencedby refid="torture__auth_8c_1add171176cc97a54d8bf7a3a9fcbd49c8" compoundref="torture__auth_8c" startline="440" endline="465">torture_auth_agent</referencedby>
        <referencedby refid="torture__auth_8c_1aa6d389ef47fa997235443b6739784260" compoundref="torture__auth_8c" startline="546" endline="570">torture_auth_agent_cert</referencedby>
        <referencedby refid="torture__auth_8c_1a341a4a270e1382bc9392bd665a58af91" compoundref="torture__auth_8c" startline="572" endline="595">torture_auth_agent_cert_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1ac1e47567b2530e7c7c17d7f3367db43c" compoundref="torture__auth_8c" startline="467" endline="496">torture_auth_agent_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a1bc4253d4b7389acb38fa5e5ffc3cf51" compoundref="torture__auth_8c" startline="253" endline="275">torture_auth_autopubkey</referencedby>
        <referencedby refid="torture__auth_8c_1a2fc459f58be2d4e235c5ef4397fa8b4b" compoundref="torture__auth_8c" startline="277" endline="305">torture_auth_autopubkey_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a3dc15f1542313d7536ea949a57ed8d0b" compoundref="torture__auth_8c" startline="498" endline="544">torture_auth_cert</referencedby>
        <referencedby refid="torture__auth_8c_1a4b7c297eeeae3bb821a5480574439b78" compoundref="torture__auth_8c" startline="307" endline="340">torture_auth_kbdint</referencedby>
        <referencedby refid="torture__auth_8c_1a8c1979b9feebe5c34354456ff4260ee4" compoundref="torture__auth_8c" startline="342" endline="384">torture_auth_kbdint_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a71d7b34d984879dbfaf6afb2870233ec" compoundref="torture__auth_8c" startline="207" endline="225">torture_auth_none</referencedby>
        <referencedby refid="torture__auth_8c_1a5836d87eecde023390a0acf40b7160c6" compoundref="torture__auth_8c" startline="227" endline="251">torture_auth_none_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1acab4c789da42f078db39e0e8dec81bc4" compoundref="torture__auth_8c" startline="386" endline="407">torture_auth_password</referencedby>
        <referencedby refid="torture__auth_8c_1a144cbca03a69c33a0137bbcbd69873cf" compoundref="torture__auth_8c" startline="409" endline="438">torture_auth_password_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a1e1c5e9d0352de375c56cf27921d00f6" compoundref="torture__auth_8c" startline="597" endline="632">torture_auth_pubkey_types</referencedby>
        <referencedby refid="torture__auth_8c_1a30fc01934c5dc0343d91dc6b90cbabac" compoundref="torture__auth_8c" startline="634" endline="670">torture_auth_pubkey_types_ecdsa</referencedby>
        <referencedby refid="torture__auth_8c_1aaefb1835a46af27a36149a89c3308825" compoundref="torture__auth_8c" startline="777" endline="822">torture_auth_pubkey_types_ecdsa_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1aef29b45c88fd31e623e989959a72a434" compoundref="torture__auth_8c" startline="672" endline="728">torture_auth_pubkey_types_ed25519</referencedby>
        <referencedby refid="torture__auth_8c_1a6f2cc3f2514eaf5b14e030490d6993f3" compoundref="torture__auth_8c" startline="824" endline="888">torture_auth_pubkey_types_ed25519_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a6c870e5368b648dc01f643bbc52a62f4" compoundref="torture__auth_8c" startline="730" endline="775">torture_auth_pubkey_types_nonblocking</referencedby>
        <referencedby refid="torture__client__config_8c_1a31b9fa3a6e6f420305f9d6e61e9b96b2" compoundref="torture__client__config_8c" startline="197" endline="211">torture_client_config_suppress</referencedby>
        <referencedby refid="torture__config_8c_1a6015128681c19a643585501c81f24636" compoundref="torture__config_8c" startline="367" endline="418">torture_config_auth_methods</referencedby>
        <referencedby refid="torture__config_8c_1afbd8ffc0723658bbf9cf2d88380ddf0e" compoundref="torture__config_8c" startline="442" endline="647">torture_config_match</referencedby>
        <referencedby refid="torture__config_8c_1a13446f6a29e86e2ce2fcdaad08ec9449" compoundref="torture__config_8c" startline="652" endline="856">torture_config_proxyjump</referencedby>
        <referencedby refid="torture__config_8c_1a18d01691cc3601e05a66bc113be2a488" compoundref="torture__config_8c" startline="862" endline="930">torture_config_rekey</referencedby>
        <referencedby refid="torture__connect_8c_1ab0349d215eb26fab23b32d29877a1ff6" compoundref="torture__connect_8c" startline="133" endline="148">torture_connect_double</referencedby>
        <referencedby refid="torture__connect_8c_1aceba71bae2eb45662c7723fde9b6fc1b" compoundref="torture__connect_8c" startline="86" endline="101">torture_connect_nonblocking</referencedby>
        <referencedby refid="torture__connect_8c_1a80ca992de13d83656f95514fd50bdd0b" compoundref="torture__connect_8c" startline="162" endline="184">torture_connect_socket</referencedby>
        <referencedby refid="torture__hostkey_8c_1ac5b1551957655d2e330912bbc8b91692" compoundref="torture__hostkey_8c" startline="107" endline="128">torture_hostkey_ed25519</referencedby>
        <referencedby refid="torture__hostkey_8c_1ae73c12e15a44ab43321442da6d82c842" compoundref="torture__hostkey_8c" startline="84" endline="105">torture_hostkey_rsa</referencedby>
        <referencedby refid="torture__hostkey_8c_1a97dbd5e99350883af4f1af630ea59f2d" compoundref="torture__hostkey_8c" startline="175" endline="192">torture_hostkey_rsa_sha256</referencedby>
        <referencedby refid="torture__hostkey_8c_1aafc5459be5b7726b0a653910fe0a15d5" compoundref="torture__hostkey_8c" startline="194" endline="211">torture_hostkey_rsa_sha512</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a056acb1b3260d43b8b8595d2147d9245" compoundref="torture__knownhosts__parsing_8c" startline="571" endline="608">torture_knownhosts_algorithms</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a80fef863003b9cb4a78cf1d00f468b96" compoundref="torture__knownhosts__parsing_8c" startline="610" endline="647">torture_knownhosts_algorithms_global</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a1d722c237962d3e5d2d8e6a127b45573" compoundref="torture__knownhosts__parsing_8c" startline="433" endline="506">torture_knownhosts_algorithms_negative</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1aa999a5daf9f768ee7e6a47fd2cf87d2b" compoundref="torture__knownhosts__parsing_8c" startline="399" endline="431">torture_knownhosts_algorithms_wanted</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a440a79f135a76bbdc5cd40590ec30765" compoundref="torture__knownhosts__verify_8c" startline="216" endline="270">torture_knownhosts_duplicate</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a4313d19977cea3b3498e49992a3b8686" compoundref="torture__knownhosts_8c" startline="230" endline="265">torture_knownhosts_fail</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a6d9c521b05703644072a60947172795b" compoundref="torture__knownhosts__parsing_8c" startline="374" endline="397">torture_knownhosts_get_algorithms_names</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a948a30602db763beff96bd4b8ec636e7" compoundref="torture__knownhosts__parsing_8c" startline="509" endline="538">torture_knownhosts_host_exists</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1ab6dafa14d4c630e2910477e9fd6c10c2" compoundref="torture__knownhosts__parsing_8c" startline="540" endline="569">torture_knownhosts_host_exists_global</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1a1bec6abbbade54d9fe77c1c944c89cbf" compoundref="torture__knownhosts__verify_8c" startline="446" endline="481">torture_knownhosts_new_file</referencedby>
        <referencedby refid="torture__knownhosts_8c_1ad7fb1fdd720acfe6c69b365fb780cb8a" compoundref="torture__knownhosts_8c" startline="429" endline="467">torture_knownhosts_no_hostkeychecking</referencedby>
        <referencedby refid="torture__knownhosts_8c_1ad850aa1f10a4696e6c967764883ebab9" compoundref="torture__knownhosts_8c" startline="267" endline="302">torture_knownhosts_other</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1ac1c0973d318a3572507db80d43277613" compoundref="torture__knownhosts__verify_8c" startline="146" endline="214">torture_knownhosts_precheck</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a800aa883cf6921f7899c9f220784e381" compoundref="torture__knownhosts_8c" startline="192" endline="228">torture_knownhosts_standard_port</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a06fcbd73ef9cb590180cfa3759594575" compoundref="torture__knownhosts_8c" startline="154" endline="190">torture_knownhosts_wildcard</referencedby>
        <referencedby refid="torture__options_8c_1ac91087471b405cb325e7984b4a755e3c" compoundref="torture__options_8c" startline="527" endline="570">torture_options_config_host</referencedby>
        <referencedby refid="torture__options_8c_1a13de9d3bc9ffd89bee5b9d84404bf63b" compoundref="torture__options_8c" startline="572" endline="737">torture_options_config_match</referencedby>
        <referencedby refid="torture__options_8c_1a4afca7cd3078ed72d368d809a9efc0b0" compoundref="torture__options_8c" startline="739" endline="803">torture_options_config_match_multi</referencedby>
        <referencedby refid="torture__options_8c_1a64f216f56007a228aff29721e4b97cd3" compoundref="torture__options_8c" startline="805" endline="911">torture_options_copy</referencedby>
        <referencedby refid="torture__options_8c_1a7a2efc7e097df0dfa5f7d5fd9e20793e" compoundref="torture__options_8c" startline="443" endline="463">torture_options_get_global_knownhosts</referencedby>
        <referencedby refid="torture__options_8c_1aff71b28ae657ef05e88fc1c524747ea7" compoundref="torture__options_8c" startline="282" endline="295">torture_options_get_host</referencedby>
        <referencedby refid="torture__options_8c_1a001c56a1873286cb590f830179d42566" compoundref="torture__options_8c" startline="407" endline="428">torture_options_get_identity</referencedby>
        <referencedby refid="torture__options_8c_1a1d43c28839c4ecd8803d7bd07661a5ce" compoundref="torture__options_8c" startline="488" endline="508">torture_options_get_knownhosts</referencedby>
        <referencedby refid="torture__options_8c_1affba0016532c150af1b146e4f3e1cf84" compoundref="torture__options_8c" startline="317" endline="327">torture_options_get_port</referencedby>
        <referencedby refid="torture__options_8c_1aedae7c50929b9f2817764a36f1a927f1" compoundref="torture__options_8c" startline="329" endline="340">torture_options_get_user</referencedby>
        <referencedby refid="torture__options_8c_1abee52b59dbd3afe2d871498537bf29c4" compoundref="torture__options_8c" startline="510" endline="525">torture_options_proxycommand</referencedby>
        <referencedby refid="torture__options_8c_1a13d14dd3514cc689693cdec6bad3547f" compoundref="torture__options_8c" startline="71" endline="100">torture_options_set_ciphers</referencedby>
        <referencedby refid="torture__options_8c_1a1a4f311b1080830ac71ddf87ec3a3802" compoundref="torture__options_8c" startline="342" endline="354">torture_options_set_fd</referencedby>
        <referencedby refid="torture__options_8c_1ab7e9da790655345493ebe9bf39674944" compoundref="torture__options_8c" startline="430" endline="441">torture_options_set_global_knownhosts</referencedby>
        <referencedby refid="torture__options_8c_1a364e034651400c44d4d7b2296481fb3c" compoundref="torture__options_8c" startline="54" endline="69">torture_options_set_host</referencedby>
        <referencedby refid="torture__options_8c_1ae2f319b5ba7664eb422dcf1c16ab5fa2" compoundref="torture__options_8c" startline="147" endline="182">torture_options_set_hostkey</referencedby>
        <referencedby refid="torture__options_8c_1a057759d22779c01b6b00b869af8915c2" compoundref="torture__options_8c" startline="393" endline="405">torture_options_set_identity</referencedby>
        <referencedby refid="torture__options_8c_1ac75792a0c8fa638072a4a16d664482b0" compoundref="torture__options_8c" startline="102" endline="145">torture_options_set_key_exchange</referencedby>
        <referencedby refid="torture__options_8c_1a8b7ef3e2e8eb46e63baad1e61416468b" compoundref="torture__options_8c" startline="465" endline="486">torture_options_set_knownhosts</referencedby>
        <referencedby refid="torture__options_8c_1a6142245ab4bf4753cb8b773ea08711ec" compoundref="torture__options_8c" startline="252" endline="280">torture_options_set_macs</referencedby>
        <referencedby refid="torture__options_8c_1a9e113018949fa3a16bfc0c27145ea2bd" compoundref="torture__options_8c" startline="297" endline="315">torture_options_set_port</referencedby>
        <referencedby refid="torture__proxycommand_8c_1ad9476c8560eaa74ade11ed1c79d2f2a2" compoundref="torture__proxycommand_8c" startline="103" endline="113">torture_options_set_proxycommand_notexist</referencedby>
        <referencedby refid="torture__proxycommand_8c_1a0f3c36e817257e7cb989981c244dd7d2" compoundref="torture__proxycommand_8c" startline="115" endline="137">torture_options_set_proxycommand_ssh</referencedby>
        <referencedby refid="torture__proxycommand_8c_1aaf528fafa536dcd4436ac0d75ce3be8e" compoundref="torture__proxycommand_8c" startline="139" endline="162">torture_options_set_proxycommand_ssh_stderr</referencedby>
        <referencedby refid="torture__options_8c_1a5ac60c82c946ac58b8918b0de1d3ef13" compoundref="torture__options_8c" startline="184" endline="250">torture_options_set_pubkey_accepted_types</referencedby>
        <referencedby refid="torture__options_8c_1a10af353bf16103f08becaab4b8fa64b0" compoundref="torture__options_8c" startline="356" endline="383">torture_options_set_user</referencedby>
        <referencedby refid="torture__packet_8c_1ad28ea8febde081f05f3c6379e5397dd4" compoundref="torture__packet_8c" startline="45" endline="138">torture_packet</referencedby>
        <referencedby refid="unittests_2torture__pki_8c_1ae33c259d4f65da47ee3901653e1ec8bc" compoundref="unittests_2torture__pki_8c" startline="251" endline="430">torture_pki_verify_mismatch</referencedby>
        <referencedby refid="torture__rekey_8c_1aaaaeedb730227e8f31cb1fe13bbcb881" compoundref="torture__rekey_8c" startline="104" endline="145">torture_rekey_default</referencedby>
        <referencedby refid="torture__rekey_8c_1a75d0cca74861337645286b4d42e57006" compoundref="torture__rekey_8c" startline="150" endline="209">torture_rekey_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a83928e03d85a04fd06d4c4a0ca9c7394" compoundref="torture__rekey_8c" startline="324" endline="388">torture_rekey_time</referencedby>
        <referencedby refid="torture__auth__pkcs11_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__auth__pkcs11_8c" startline="231" endline="257">torture_run_tests</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a1ae155752732ad519ce76bedf8b2a5b7" compoundref="torture__server__auth__kbdint_8c" startline="686" endline="746">torture_server_auth_kbdint</referencedby>
        <referencedby refid="torture__server_8c_1a45fb3c9d4948a2e1428a5d00f28d47b6" compoundref="torture__server_8c" startline="325" endline="353">torture_server_auth_none</referencedby>
        <referencedby refid="torture__server_8c_1a209f1dfc209f45f52226ee57825f596b" compoundref="torture__server_8c" startline="355" endline="390">torture_server_auth_password</referencedby>
        <referencedby refid="torture__server_8c_1a73fb9c5aabcb0550f2bdee3cfd7ef346" compoundref="torture__server_8c" startline="392" endline="424">torture_server_auth_pubkey</referencedby>
        <referencedby refid="torture__server_8c_1addf40aeb91f2224a5baf6488d42560c7" compoundref="torture__server_8c" startline="426" endline="474">torture_server_hostkey_mismatch</referencedby>
        <referencedby refid="torture__server_8c_1a65c15130edce6143731c7bff27153650" compoundref="torture__server_8c" startline="476" endline="518">torture_server_unknown_global_request</referencedby>
        <referencedby refid="torture__forward_8c_1a8f1d1bddae7902259b1b169d0439fe2f" compoundref="torture__forward_8c" startline="78" endline="99">torture_ssh_forward</referencedby>
        <referencedby refid="torture_8c_1aa1653e389922c4762e71dbd2ab2d7cda" compoundref="torture_8c" startline="262" endline="353">torture_ssh_session</referencedby>
        <referencedby refid="torture__server__config_8c_1a5de50eda837b8f94dcf6d18a765d0dc8" compoundref="torture__server__config_8c" startline="350" endline="423">try_config_content</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaa298d8445355420d80f2d968477ba86f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_get_port</definition>
        <argsstring>(ssh_session session, unsigned int *port_target)</argsstring>
        <name>ssh_options_get_port</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>port_target</declname>
        </param>
        <briefdescription>
<para>This function can get ssh the ssh port. It must only be used on a valid ssh session. This function is useful when the session options have been automatically inferred from the environment or configuration files and one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>An allocated SSH session structure.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port_target</parametername>
</parameternamelist>
<parameterdescription>
<para>An unsigned integer into which the port will be set from the ssh session.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="1055" column="5" bodyfile="src/options.c" bodystart="1055" bodyend="1068"/>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="torture__options_8c_1affba0016532c150af1b146e4f3e1cf84" compoundref="torture__options_8c" startline="317" endline="327">torture_options_get_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaaa9d400920cad4d6e4a0fb09ff8c7b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_get</definition>
        <argsstring>(ssh_session session, enum ssh_options_e type, char **value)</argsstring>
        <name>ssh_options_get</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>enum <ref refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46c" kindref="member">ssh_options_e</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>This function can get ssh options, it does not support all options provided for ssh options set, but mostly those which a user-space program may care about having trusted the ssh driver to infer these values from underlaying configuration files. It operates only on those SSH_OPTIONS_* which return char*. If you wish to receive the port then please use <ref refid="group__libssh__session_1gaa298d8445355420d80f2d968477ba86f" kindref="member">ssh_options_get_port()</ref> which returns an unsigned int. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>An allocated SSH session structure.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The option type to get. This could be one of the following:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>SSH_OPTIONS_HOST: The hostname or ip address to connect to (const char *).</para>
</listitem><listitem><para>SSH_OPTIONS_USER: The username for authentication (const char *).<linebreak/>
 <linebreak/>
 when not explicitly set this will be inferred from the ~/.ssh/config file.</para>
</listitem><listitem><para>SSH_OPTIONS_IDENTITY: Get the first identity file name (const char *).<linebreak/>
 <linebreak/>
 By default identity, id_dsa and id_rsa are checked.</para>
</listitem><listitem><para>SSH_OPTIONS_PROXYCOMMAND: Get the proxycommand necessary to log into the remote host. When not explicitly set, it will be read from the ~/.ssh/config file.</para>
</listitem><listitem><para>SSH_OPTIONS_GLOBAL_KNOWNHOSTS: Get the path to the global known_hosts file being used.</para>
</listitem><listitem><para>SSH_OPTIONS_KNOWNHOSTS: Get the path to the known_hosts file being used.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to get into. As a char**, space will be allocated by the function for the value, it is your responsibility to free the memory using <ref refid="group__libssh__string_1gafc10700722d6cafc468c2ee97585449a" kindref="member">ssh_string_free_char()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="1113" column="5" bodyfile="src/options.c" bodystart="1113" bodyend="1170"/>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1aab5ecfb12d53a23b21dbf61790aa7e94" compoundref="session_8h" startline="209">ssh_session_struct::identity</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a988d47dd297709a12a1b74d35b2b79fb" compoundref="session_8h" startline="218">ssh_session_struct::ProxyCommand</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="misc_8h_1a1f44c71b6f7ba10a4a543f73a07a85aa" compoundref="misc_8h" startline="73">ssh_iterator_value</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca39639fc780c51a7ddd31d8bd0f5b4075" compoundref="libssh_8h" startline="416">SSH_OPTIONS_GLOBAL_KNOWNHOSTS</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca6560e124c042153de507732d489e5564" compoundref="libssh_8h" startline="381">SSH_OPTIONS_HOST</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46caa5986025cf4a64e8adcda3242989990c" compoundref="libssh_8h" startline="387">SSH_OPTIONS_IDENTITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cac047647e175ee39f50f48964df670649" compoundref="libssh_8h" startline="389">SSH_OPTIONS_KNOWNHOSTS</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca32efaa3cf66ae2c42d9f979472086d3b" compoundref="libssh_8h" startline="400">SSH_OPTIONS_PROXYCOMMAND</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca41a41401297578b6a88df70b50a3cd21" compoundref="libssh_8h" startline="385">SSH_OPTIONS_USER</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1a351ea86857d33b3ba80b396e05c4517c" compoundref="priv_8h" startline="269">ssh_set_error_invalid</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" compoundref="session_8h" startline="210">ssh_session_struct::username</references>
        <referencedby refid="torture__config_8c_1a2d3b6ad539259bcfeeb316b2464869b8" compoundref="torture__config_8c" startline="226" endline="291">torture_config_from_file</referencedby>
        <referencedby refid="torture__config_8c_1a37ec240a39eca051b7c2595a8cf7bc3c" compoundref="torture__config_8c" startline="302" endline="329">torture_config_glob</referencedby>
        <referencedby refid="torture__options_8c_1a7a2efc7e097df0dfa5f7d5fd9e20793e" compoundref="torture__options_8c" startline="443" endline="463">torture_options_get_global_knownhosts</referencedby>
        <referencedby refid="torture__options_8c_1aff71b28ae657ef05e88fc1c524747ea7" compoundref="torture__options_8c" startline="282" endline="295">torture_options_get_host</referencedby>
        <referencedby refid="torture__options_8c_1a001c56a1873286cb590f830179d42566" compoundref="torture__options_8c" startline="407" endline="428">torture_options_get_identity</referencedby>
        <referencedby refid="torture__options_8c_1a1d43c28839c4ecd8803d7bd07661a5ce" compoundref="torture__options_8c" startline="488" endline="508">torture_options_get_knownhosts</referencedby>
        <referencedby refid="torture__options_8c_1aedae7c50929b9f2817764a36f1a927f1" compoundref="torture__options_8c" startline="329" endline="340">torture_options_get_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga93f7f7159893f3ce62c9b178724eff75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_getopt</definition>
        <argsstring>(ssh_session session, int *argcptr, char **argv)</argsstring>
        <name>ssh_options_getopt</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>argcptr</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Parse command line arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a helper for your application to generate the appropriate options from the command line arguments.<linebreak/>
The argv array and argc value are changed so that the parsed arguments wont appear anymore in them.<linebreak/>
The single arguments (without switches) are not parsed. thus, myssh -l user localhost<linebreak/>
The command wont set the hostname value of options to localhost.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to configure.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argcptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the argument count.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments list pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error.</para>
</simplesect>
<simplesect kind="see"><para>ssh_session_new() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="1193" column="5" bodyfile="src/options.c" bodystart="1193" bodyend="1357"/>
        <references refid="sshnetcat_8c_1ad723da1801ae1586eb330380e2d9a912" compoundref="sshnetcat_8c" startline="39">port</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca68b35bccdc3c62a9806c961af8dbcd1f" compoundref="libssh_8h" startline="396">SSH_OPTIONS_CIPHERS_C_S</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca41d6ad083136f9109d767deaf4cd9b3b" compoundref="libssh_8h" startline="397">SSH_OPTIONS_CIPHERS_S_C</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca7b37206d5e98fc5e8b062a5df36849ed" compoundref="libssh_8h" startline="403">SSH_OPTIONS_COMPRESSION</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46caa5986025cf4a64e8adcda3242989990c" compoundref="libssh_8h" startline="387">SSH_OPTIONS_IDENTITY</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca43f5dd7726729b4b4ef70ac2cf729a90" compoundref="libssh_8h" startline="383">SSH_OPTIONS_PORT_STR</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca41a41401297578b6a88df70b50a3cd21" compoundref="libssh_8h" startline="385">SSH_OPTIONS_USER</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="group__libssh__log_1ga9719dabb8fab8a3ebeb4dc2ebcd2dd45" compoundref="log_8c" startline="181" endline="189">ssh_set_log_level</references>
        <references refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" compoundref="ssh__client_8c" startline="48">user</references>
        <referencedby refid="ssh__client_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="ssh__client_8c" startline="397" endline="425">main</referencedby>
        <referencedby refid="connection_8c_1a25a3aad3a9f299bd164bd15e04b05845" compoundref="connection_8c" startline="9" endline="31">set_opts</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_parse_config</definition>
        <argsstring>(ssh_session session, const char *filename)</argsstring>
        <name>ssh_options_parse_config</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Parse the ssh config file. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be the last call of all options, it may overwrite options which are already set. It requires that the host name is already set with ssh_options_set_host().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>SSH session handle</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The options file to use, if NULL the default ~/.ssh/config will be used.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error.</para>
</simplesect>
<simplesect kind="see"><para>ssh_options_set_host() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="1375" column="5" bodyfile="src/options.c" bodystart="1375" bodyend="1418"/>
        <references refid="structssh__session__struct_1a4804ae72067b9764e26081cd325b1842" compoundref="session_8h" startline="231">ssh_session_struct::config_processed</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="options_8h_1ab6d001793aeda6f5a652ba8c22cad9f1" compoundref="config_8c" startline="1143" endline="1169">ssh_config_parse_file</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cab6f7ef3b251c5f7398ec3de73d881218" compoundref="libssh_8h" startline="386">SSH_OPTIONS_SSH_DIR</references>
        <references refid="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" compoundref="misc_8c" startline="1106" endline="1207">ssh_path_expand_escape</references>
        <references refid="priv_8h_1a351ea86857d33b3ba80b396e05c4517c" compoundref="priv_8h" startline="269">ssh_set_error_invalid</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" compoundref="session_8h" startline="213">ssh_session_struct::sshdir</references>
        <referencedby refid="ssh__client_8c_1a0d3591711bd7d6cb03d42294115721bb" compoundref="ssh__client_8c" startline="318" endline="366">client</referencedby>
        <referencedby refid="benchmarks_8c_1aa10487258ce1df1ef42bee98693a777a" compoundref="benchmarks_8c" startline="276" endline="299">connect_host</referencedby>
        <referencedby refid="classssh_1_1Session_1af19a7b347ddc520d027d94c4d8073aaa" compoundref="libsshpp_8hpp" startline="394" endline="397">ssh::Session::optionsParseConfig</referencedby>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
        <referencedby refid="torture__client__config_8c_1a9e7c020c14631166e6fa3869074a80eb" compoundref="torture__client__config_8c" startline="136" endline="178">torture_client_config_emulate</referencedby>
        <referencedby refid="torture__client__config_8c_1acf21db1ec2ec21fbd9ba7e4af570f108" compoundref="torture__client__config_8c" startline="90" endline="127">torture_client_config_system</referencedby>
        <referencedby refid="torture__options_8c_1ac91087471b405cb325e7984b4a755e3c" compoundref="torture__options_8c" startline="527" endline="570">torture_options_config_host</referencedby>
        <referencedby refid="torture__options_8c_1a13de9d3bc9ffd89bee5b9d84404bf63b" compoundref="torture__options_8c" startline="572" endline="737">torture_options_config_match</referencedby>
        <referencedby refid="torture__options_8c_1a4afca7cd3078ed72d368d809a9efc0b0" compoundref="torture__options_8c" startline="739" endline="803">torture_options_config_match_multi</referencedby>
        <referencedby refid="torture__options_8c_1a64f216f56007a228aff29721e4b97cd3" compoundref="torture__options_8c" startline="805" endline="911">torture_options_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga882e56c9ac92b2e860f055ac903e9c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_options_apply</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_options_apply</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/options.c" line="1420" column="5" bodyfile="src/options.c" bodystart="1420" bodyend="1490"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1aab5ecfb12d53a23b21dbf61790aa7e94" compoundref="session_8h" startline="209">ssh_session_struct::identity</references>
        <references refid="doc_2CMakeLists_8txt_1a8ac464f14522528c145064f01020e23e" compoundref="doc_2CMakeLists_8txt" startline="4" endline="9">if</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1a988d47dd297709a12a1b74d35b2b79fb" compoundref="session_8h" startline="218">ssh_session_struct::ProxyCommand</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46cab6f7ef3b251c5f7398ec3de73d881218" compoundref="libssh_8h" startline="386">SSH_OPTIONS_SSH_DIR</references>
        <references refid="libssh_8h_1af7093adacb08e7ee1e9b16e9c8b0f46ca41a41401297578b6a88df70b50a3cd21" compoundref="libssh_8h" startline="385">SSH_OPTIONS_USER</references>
        <references refid="group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea" compoundref="misc_8c" startline="1106" endline="1207">ssh_path_expand_escape</references>
        <references refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" compoundref="session_8h" startline="213">ssh_session_struct::sshdir</references>
        <references refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" compoundref="session_8h" startline="210">ssh_session_struct::username</references>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
        <referencedby refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="288" endline="424">ssh_is_server_known</referencedby>
        <referencedby refid="group__libssh__session_1gad10b597ab0b641a469c0190e5fe904a8" compoundref="src_2knownhosts_8c" startline="1041" endline="1103">ssh_known_hosts_check_server_key</referencedby>
        <referencedby refid="group__libssh__session_1ga95043df5a4378cc43ed13ba7ac5b4d01" compoundref="src_2knownhosts_8c" startline="347" endline="453">ssh_known_hosts_get_algorithms</referencedby>
        <referencedby refid="group__libssh__session_1gad36769864e0a5247edffd6e428e34e8a" compoundref="src_2knownhosts_8c" startline="504" endline="593">ssh_known_hosts_get_algorithms_names</referencedby>
        <referencedby refid="legacy_8h_1a95d74e70186ea1e485de70f75ba7bf5c" compoundref="legacy_8c" startline="643" endline="706">ssh_try_publickey_from_file</referencedby>
        <referencedby refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" compoundref="known__hosts_8c" startline="499" endline="565">ssh_write_knownhost</referencedby>
        <referencedby refid="torture__options_8c_1a8b7ef3e2e8eb46e63baad1e61416468b" compoundref="torture__options_8c" startline="465" endline="486">torture_options_set_knownhosts</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
        <definition>ssh_session ssh_new</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new ssh session. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new ssh_session pointer, NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="59" column="13" bodyfile="src/session.c" bodystart="59" bodyend="181"/>
        <references refid="structssh__session__struct_1abc1f0bff268e2e92f6e526a0118bd2cc" compoundref="session_8h" startline="177">ssh_session_struct::agent</references>
        <references refid="structssh__session__struct_1a729d3c7f6ae20cb5a00ac7cd28a630f7" compoundref="session_8h" startline="124">ssh_session_struct::alive</references>
        <references refid="structssh__session__struct_1a3d57e01582c0c9099f7f319513321fe8">ssh_session_struct::auth</references>
        <references refid="structssh__session__struct_1a33200f25a192fb69b2a02c7ed0efd893" compoundref="session_8h" startline="225">ssh_session_struct::compressionlevel</references>
        <references refid="wrapper_8h_1a0a3d255d6f354747a39476981074b8f3" compoundref="wrapper_8c" startline="150" endline="159">crypto_new</references>
        <references refid="structssh__session__struct_1a6a94fa11eb06ca18d3c0ac22a153f97f" compoundref="session_8h" startline="149">ssh_session_struct::dh_handshake_state</references>
        <references refid="session_8h_1a52a640f6094e9b3d1a88c7da7d08c802a90a6f45fd750c65a3cb58157b89150c9" compoundref="session_8h" startline="51">DH_STATE_INIT</references>
        <references refid="structssh__session__struct_1ab215cd999fce8410d28272e2cde4633d" compoundref="session_8h" startline="223">ssh_session_struct::fd</references>
        <references refid="session_8c_1a60702e9984b108004b2685e2c4019602" compoundref="session_8c" startline="43">FIRST_CHANNEL</references>
        <references refid="structssh__session__struct_1a997060832a3419d8fe884d3da855ef4c" compoundref="session_8h" startline="129">ssh_session_struct::flags</references>
        <references refid="structssh__session__struct_1a70a72ecdca89309b5a19e8c887f2ca2c" compoundref="session_8h" startline="150">ssh_session_struct::global_req_state</references>
        <references refid="structssh__session__struct_1aab5ecfb12d53a23b21dbf61790aa7e94" compoundref="session_8h" startline="209">ssh_session_struct::identity</references>
        <references refid="structssh__session__struct_1a0fdb53c794a3173557463030583b2079" compoundref="session_8h" startline="138">ssh_session_struct::in_buffer</references>
        <references refid="structssh__session__struct_1a8fd8ef167e1236e76208827f50808a91" compoundref="session_8h" startline="176">ssh_session_struct::maxchannel</references>
        <references refid="structssh__session__struct_1a4ea5e4ae5383c6cdb5db9f08bbbfa019" compoundref="session_8h" startline="173">ssh_session_struct::next_crypto</references>
        <references refid="structssh__session__struct_1a1a99a788a0770dc4094be9731f3bcd70" compoundref="session_8h" startline="230">ssh_session_struct::nodelay</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1af0aed60c1e529bbfdcb483fd80bf98a0" compoundref="session_8h" startline="140">ssh_session_struct::out_buffer</references>
        <references refid="structssh__session__struct_1a5ff90d3dd515b46369142e0c75307be5" compoundref="session_8h" startline="141">ssh_session_struct::out_queue</references>
        <references refid="structssh__session__struct_1ac4d0cca7d0f856b16d7c42f2c16d4aab" compoundref="session_8h" startline="148">ssh_session_struct::packet_state</references>
        <references refid="packet_8h_1acec1023e26d01be724eb18fa104c3b86a1444df7be43fcfb6c1773b1e7e191340" compoundref="packet_8h" startline="38">PACKET_STATE_INIT</references>
        <references refid="structssh__session__struct_1a5552665043089000065df39c5a5a7094" compoundref="session_8h" startline="146">ssh_session_struct::pending_call_state</references>
        <references refid="structssh__session__struct_1a2f52d8c57c0e1b00bade912a0027ce8b" compoundref="session_8h" startline="222">ssh_session_struct::port</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__session__struct_1aab7e09fc6a20a6d7a91a3dfca3f2e0ad" compoundref="session_8h" startline="155">ssh_session_struct::service_state</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="agent_8h_1adc12d57484ac2d7f4d4c7a379fe04382" compoundref="agent_8c" startline="126" endline="143">ssh_agent_new</references>
        <references refid="auth_8h_1a6bb5186805ab418bffe24b2aee8b7bc7a916150991e41ae011bb27fd35ffec5f3" compoundref="auth_8h" startline="94">SSH_AUTH_SERVICE_NONE</references>
        <references refid="auth_8h_1a0d3114986a741a14dc3ac03f7d8eafefa3ec3c08deba889e791cdca82edeb2ce6" compoundref="auth_8h" startline="58">SSH_AUTH_STATE_NONE</references>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="119" endline="142">ssh_buffer_new</references>
        <references refid="channels_8h_1a774597eb1605e8b48cd065965fdc2325a98c7a3dcf02759118261e2bac4d6e421" compoundref="channels_8h" startline="31">SSH_CHANNEL_REQ_STATE_NONE</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <references refid="session_8h_1a656e58be3ed5cc711220293299c66d7e" compoundref="session_8h" startline="93">SSH_OPT_FLAG_GSSAPI_AUTH</references>
        <references refid="session_8h_1adc1d400575107a6381fc7ba9759f21b8" compoundref="session_8h" startline="92">SSH_OPT_FLAG_KBDINT_AUTH</references>
        <references refid="session_8h_1a2da413e141a4f56b653dd659df13a4b5" compoundref="session_8h" startline="90">SSH_OPT_FLAG_PASSWORD_AUTH</references>
        <references refid="session_8h_1a4a21bc2bfa096997458dcfccbda31434" compoundref="session_8h" startline="91">SSH_OPT_FLAG_PUBKEY_AUTH</references>
        <references refid="session_8h_1abb7a4342b889601983497b3f094957e1a33be3f7cd03fe7fced1eeacd369cad94" compoundref="session_8h" startline="60">SSH_PENDING_CALL_NONE</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca6e96b3ae323d058e27297e97c01c1d7f" compoundref="session_8h" startline="37">SSH_SESSION_STATE_NONE</references>
        <references refid="group__libssh__session_1ga2a29cff08855611be84d050e5bec73bc" compoundref="session_8c" startline="482" endline="489">ssh_set_blocking</references>
        <references refid="socket_8h_1ae616d257d1f37fcaf60f6d243fe4e964" compoundref="socket_8c" startline="148" endline="180">ssh_socket_new</references>
        <references refid="structssh__session__struct_1af0805877d21d43e81423ead52345c64b" compoundref="session_8h" startline="156">ssh_session_struct::state</references>
        <references refid="structssh__session__struct_1aaa1e1a9873eafee679684afa13a58bbc" compoundref="session_8h" startline="224">ssh_session_struct::StrictHostKeyChecking</references>
        <references refid="structssh__session__struct_1a3e967ac3134cae87dae1f6a794424073" compoundref="session_8h" startline="157">ssh_session_struct::supported_methods</references>
        <referencedby refid="torture__packet__filter_8c_1a3074410e568313b7166c58fbf59e431f" compoundref="torture__packet__filter_8c" startline="317" endline="396">check_message_in_all_states</referencedby>
        <referencedby refid="benchmarks_8c_1aa10487258ce1df1ef42bee98693a777a" compoundref="benchmarks_8c" startline="276" endline="299">connect_host</referencedby>
        <referencedby refid="connect__ssh_8c_1ada855ebf4aac69d9a59afb23a8e338f4" compoundref="connect__ssh_8c" startline="24" endline="67">connect_ssh</referencedby>
        <referencedby refid="ssh__client__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__client__fuzzer_8cpp" startline="85" endline="158">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="proxy_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="proxy_8c" startline="215" endline="346">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="test__server_8c_1a1356104271e38a5856393ef01d01bc3a" compoundref="test__server_8c" startline="70" endline="277">run_server</referencedby>
        <referencedby refid="classssh_1_1Session_1a19f9c19d925bb991401fe4503305fea1" compoundref="libsshpp_8hpp" startline="129" endline="131">ssh::Session::Session</referencedby>
        <referencedby refid="torture__algorithms_8c_1a4c842d8a0ce0e842445303734e0b97fe" compoundref="torture__algorithms_8c" startline="48" endline="71">session_setup</referencedby>
        <referencedby refid="torture__misc_8c_1ab3743688c369a6a63ebea4512080e9fe" compoundref="torture__misc_8c" startline="24" endline="30">setup</referencedby>
        <referencedby refid="torture__keyfiles_8c_1a7031cb8def9b264fd8a7a2d1a1958b1f" compoundref="torture__keyfiles_8c" startline="68" endline="88">setup_both_keys_passphrase</referencedby>
        <referencedby refid="torture__client__config_8c_1addbd98b07c96dc8546c2a3b053bbcf4e" compoundref="torture__client__config_8c" startline="31" endline="60">setup_config_files</referencedby>
        <referencedby refid="torture__keyfiles_8c_1afc14ff83217588b66cdf4da62f0f9846" compoundref="torture__keyfiles_8c" startline="14" endline="30">setup_rsa_key</referencedby>
        <referencedby refid="test__ssh__bind__accept__fd_8c_1a723afb31fe0043e3ac0f0679898753af" compoundref="test__ssh__bind__accept__fd_8c" startline="105" endline="123">ssh_client</referencedby>
        <referencedby refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="65" endline="218">ssh_options_copy</referencedby>
        <referencedby refid="test__ssh__bind__accept__fd_8c_1a475e25b488e6aa630501e0ac49d64f8a" compoundref="test__ssh__bind__accept__fd_8c" startline="62" endline="103">ssh_server</referencedby>
        <referencedby refid="torture__server__x11_8c_1af793ec1fe611ecefae9f68db4f588c82" compoundref="torture__server__x11_8c" startline="154" endline="221">test_ssh_channel_request_x11</referencedby>
        <referencedby refid="torture__threads__pki__rsa_8c_1a5120f10dc6b7e2a6bc4271fda92fdfc0" compoundref="torture__threads__pki__rsa_8c" startline="562" endline="632">thread_pki_rsa_generate_key</referencedby>
        <referencedby refid="torture__pki__ecdsa__uri_8c_1a9ee76976e73eee08438fb0549bb11812" compoundref="torture__pki__ecdsa__uri_8c" startline="234" endline="292">torture_ecdsa_sign_verify_uri</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a056acb1b3260d43b8b8595d2147d9245" compoundref="torture__knownhosts__parsing_8c" startline="571" endline="608">torture_knownhosts_algorithms</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a80fef863003b9cb4a78cf1d00f468b96" compoundref="torture__knownhosts__parsing_8c" startline="610" endline="647">torture_knownhosts_algorithms_global</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a1d722c237962d3e5d2d8e6a127b45573" compoundref="torture__knownhosts__parsing_8c" startline="433" endline="506">torture_knownhosts_algorithms_negative</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1aa999a5daf9f768ee7e6a47fd2cf87d2b" compoundref="torture__knownhosts__parsing_8c" startline="399" endline="431">torture_knownhosts_algorithms_wanted</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a6d9c521b05703644072a60947172795b" compoundref="torture__knownhosts__parsing_8c" startline="374" endline="397">torture_knownhosts_get_algorithms_names</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a948a30602db763beff96bd4b8ec636e7" compoundref="torture__knownhosts__parsing_8c" startline="509" endline="538">torture_knownhosts_host_exists</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1ab6dafa14d4c630e2910477e9fd6c10c2" compoundref="torture__knownhosts__parsing_8c" startline="540" endline="569">torture_knownhosts_host_exists_global</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__packet_8c_1ad28ea8febde081f05f3c6379e5397dd4" compoundref="torture__packet_8c" startline="45" endline="138">torture_packet</referencedby>
        <referencedby refid="torture__packet__filter_8c_1a16c73061577158cebb47088c1201c528" compoundref="torture__packet__filter_8c" startline="251" endline="315">torture_packet_filter_check_unfiltered</referencedby>
        <referencedby refid="torture__pki__dsa_8c_1a365fc8d8fc9d1c87ef28bb0237eab569" compoundref="torture__pki__dsa_8c" startline="849" endline="878">torture_pki_dsa_cert_verify</referencedby>
        <referencedby refid="torture__pki__dsa_8c_1a3a7f16381e525e9566512ba1e1c8246c" compoundref="torture__pki__dsa_8c" startline="796" endline="847">torture_pki_dsa_generate_key</referencedby>
        <referencedby refid="torture__pki__ecdsa_8c_1a01213a3d8de9d267a4170272c0099b60" compoundref="torture__pki__ecdsa_8c" startline="673" endline="706">torture_pki_ecdsa_cert_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1a75be26ab9888c37ea2ebc786279e26d6" compoundref="torture__pki__ed25519_8c" startline="468" endline="504">torture_pki_ed25519_cert_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1ac85e7b533420e07088bea89f9a38cb8c" compoundref="torture__pki__ed25519_8c" startline="417" endline="466">torture_pki_ed25519_generate_key</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1af1e2eec9a6e622023a0ecd76a8594d0a" compoundref="torture__pki__ed25519_8c" startline="771" endline="823">torture_pki_ed25519_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1a7400cc5f396c94ebac144ed695d14b1c" compoundref="torture__pki__ed25519_8c" startline="825" endline="870">torture_pki_ed25519_verify_bad</referencedby>
        <referencedby refid="torture__pki__ecdsa_8c_1abd1281bee9d18802bdf7ffda89e9be54" compoundref="torture__pki__ecdsa_8c" startline="530" endline="671">torture_pki_generate_key_ecdsa</referencedby>
        <referencedby refid="torture__pki__rsa_8c_1a032833c4f71125596cc5f99ea0d63c4f" compoundref="torture__pki__rsa_8c" startline="539" endline="598">torture_pki_rsa_generate_key</referencedby>
        <referencedby refid="torture__pki__rsa_8c_1a7f78789af8cfaeac28ad6537ad1403af" compoundref="torture__pki__rsa_8c" startline="600" endline="666">torture_pki_rsa_sha2</referencedby>
        <referencedby refid="torture__pki__rsa__uri_8c_1a6087333e472cde48dcf4ec7aa6c2b78e" compoundref="torture__pki__rsa__uri_8c" startline="186" endline="217">torture_pki_sign_verify_uri</referencedby>
        <referencedby refid="unittests_2torture__pki_8c_1ae33c259d4f65da47ee3901653e1ec8bc" compoundref="unittests_2torture__pki_8c" startline="251" endline="430">torture_pki_verify_mismatch</referencedby>
        <referencedby refid="torture__auth__pkcs11_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__auth__pkcs11_8c" startline="231" endline="257">torture_run_tests</referencedby>
        <referencedby refid="torture_8c_1aa1653e389922c4762e71dbd2ab2d7cda" compoundref="torture_8c" startline="262" endline="353">torture_ssh_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_free</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_free</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Deallocate a SSH session handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to free.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" kindref="member">ssh_new()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="191" column="6" bodyfile="src/session.c" bodystart="191" bodyend="326"/>
        <references refid="structssh__session__struct_1abc1f0bff268e2e92f6e526a0118bd2cc" compoundref="session_8h" startline="177">ssh_session_struct::agent</references>
        <references refid="structssh__session__struct_1a5c92e3c7c116f8162038fdca66361641" compoundref="session_8h" startline="151">ssh_session_struct::agent_state</references>
        <references refid="structssh__session__struct_1a3d57e01582c0c9099f7f319513321fe8">ssh_session_struct::auth</references>
        <references refid="structssh__session__struct_1a704e97e502aaee91fc79507a3458a87d" compoundref="session_8h" startline="154">ssh_session_struct::auto_state</references>
        <references refid="structssh__session__struct_1a556cfe2037fb907bb21d1aa6a10a8944" compoundref="session_8h" startline="134">ssh_session_struct::banner</references>
        <references refid="structssh__session__struct_1aeb04cd35ddee3f87372ed8bd3d9ce244" compoundref="session_8h" startline="212">ssh_session_struct::bindaddr</references>
        <references refid="structssh__session__struct_1a9445164beb02a1979171bef9b1a63182" compoundref="session_8h" startline="175">ssh_session_struct::channels</references>
        <references refid="structssh__session__struct_1aff7925f04070fc20dc3d9366d7f2f748" compoundref="session_8h" startline="113">ssh_session_struct::clientbanner</references>
        <references refid="wrapper_8h_1a9cea366077f4498746e7e448cf21ac0d" compoundref="wrapper_8c" startline="161" endline="231">crypto_free</references>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__session__struct_1a85bf34948740ba7420722638a736b661" compoundref="session_8h" startline="219">ssh_session_struct::custombanner</references>
        <references refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" compoundref="session_8h" startline="203">ssh_session_struct::default_poll_ctx</references>
        <references refid="structssh__session__struct_1ab0acf948f6ee2e2ce6b44d3b5b874cbb" compoundref="session_8h" startline="186">ssh_session_struct::dsa_key</references>
        <references refid="structssh__session__struct_1a01bbd4eb1e8f7979872485ca348d3972" compoundref="session_8h" startline="187">ssh_session_struct::ecdsa_key</references>
        <references refid="structssh__session__struct_1a566490fe8eed8f1f5cede88af2a17b6d" compoundref="session_8h" startline="188">ssh_session_struct::ed25519_key</references>
        <references refid="group__libssh__misc_1ga51869b401cb0f3e711527bc9a730fbff" compoundref="misc_8c" startline="1461" endline="1474">explicit_bzero</references>
        <references refid="structssh__session__struct_1af35a02eebf952e900f35a88867029047" compoundref="session_8h" startline="215">ssh_session_struct::global_knownhosts</references>
        <references refid="structssh__session__struct_1a925131e74deeb383023d8167d5161e55" compoundref="session_8h" startline="227">ssh_session_struct::gss_client_identity</references>
        <references refid="structssh__session__struct_1af2b2f50e9d7319d5be2ff76479843b97" compoundref="session_8h" startline="226">ssh_session_struct::gss_server_identity</references>
        <references refid="structssh__session__struct_1a61ec248e9e188ab45e144b5a33bdcf70" compoundref="session_8h" startline="211">ssh_session_struct::host</references>
        <references refid="structssh__session__struct_1aab5ecfb12d53a23b21dbf61790aa7e94" compoundref="session_8h" startline="209">ssh_session_struct::identity</references>
        <references refid="structssh__session__struct_1a0fdb53c794a3173557463030583b2079" compoundref="session_8h" startline="138">ssh_session_struct::in_buffer</references>
        <references refid="structssh__session__struct_1adbf72ba34ec60a831f0002b12dd4f04d" compoundref="session_8h" startline="170">ssh_session_struct::in_hashbuf</references>
        <references refid="structssh__session__struct_1a9cba44c19f35693037bc9bb1e0651d17" compoundref="session_8h" startline="180">ssh_session_struct::kbdint</references>
        <references refid="structssh__session__struct_1ae2c7b3b1e40963af7e7dcd2544867539" compoundref="session_8h" startline="214">ssh_session_struct::knownhosts</references>
        <references refid="structssh__session__struct_1a4ea5e4ae5383c6cdb5db9f08bbbfa019" compoundref="session_8h" startline="173">ssh_session_struct::next_crypto</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="structssh__session__struct_1af0aed60c1e529bbfdcb483fd80bf98a0" compoundref="session_8h" startline="140">ssh_session_struct::out_buffer</references>
        <references refid="structssh__session__struct_1a6e56963dfc906c34e6ca7d4a774d77ad" compoundref="session_8h" startline="171">ssh_session_struct::out_hashbuf</references>
        <references refid="structssh__session__struct_1a5ff90d3dd515b46369142e0c75307be5" compoundref="session_8h" startline="141">ssh_session_struct::out_queue</references>
        <references refid="structssh__session__struct_1aa8015dc026c4aee3133a6f0f9e31c9dd" compoundref="session_8h" startline="201">ssh_session_struct::packet_callbacks</references>
        <references refid="structssh__session__struct_1a988d47dd297709a12a1b74d35b2b79fb" compoundref="session_8h" startline="218">ssh_session_struct::ProxyCommand</references>
        <references refid="structssh__session__struct_1a41e181fed08e20b58360cb429cf8689f" compoundref="session_8h" startline="217">ssh_session_struct::pubkey_accepted_types</references>
        <references refid="structssh__session__struct_1ab5f06090005e380e8b32468e2b2a9ffb" compoundref="session_8h" startline="185">ssh_session_struct::rsa_key</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="structssh__session__struct_1a9a1f525932e35bb7439abbf121cd8de0" compoundref="session_8h" startline="112">ssh_session_struct::serverbanner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="structssh__session__struct_1a6f50dd2453f70016845c90e9a0e7e641">ssh_session_struct::srv</references>
        <references refid="agent_8h_1a688156b0951d126f1a2504feb010c7c0">ssh_agent_free</references>
        <references refid="group__libssh__auth_1ga7d4487088981015ec0b1c66befc1c7dd" compoundref="auth_8c" startline="840" endline="848">ssh_agent_state_free</references>
        <references refid="libssh_8h_1a8b09f7d6f7066de7ef8dab4ed7494a52" compoundref="libssh_8h" startline="828">SSH_BUFFER_FREE</references>
        <references refid="group__libssh__channel_1ga1e7211251562c5e1ec64647236caa745" compoundref="channels_8c" startline="1174" endline="1194">ssh_channel_do_free</references>
        <references refid="misc_8h_1a1f44c71b6f7ba10a4a543f73a07a85aa" compoundref="misc_8h" startline="73">ssh_iterator_value</references>
        <references refid="group__libssh__auth_1ga43266010b4cc11e277658c4c6c4a5500" compoundref="auth_8c" startline="1351" endline="1385">ssh_kbdint_free</references>
        <references refid="kex_8h_1a0aac49551fe045f9a556155c3d8a02a5" compoundref="kex_8h" startline="27">SSH_KEX_METHODS</references>
        <references refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" compoundref="pki_8c" startline="205" endline="210">ssh_key_free</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="misc_8h_1a8221bf821961617b90566035eb1a7760" compoundref="misc_8h" startline="81">ssh_list_pop_head</references>
        <references refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" compoundref="misc_8c" startline="771" endline="798">ssh_list_remove</references>
        <references refid="group__libssh__messages_1ga9d1b1d2279c6be3539f2b630960759c3" compoundref="messages_8c" startline="582" endline="637">ssh_message_free</references>
        <references refid="structssh__session__struct_1ac18fe9d39a3b73274e03ca0e2ae55db2" compoundref="session_8h" startline="195">ssh_session_struct::ssh_message_list</references>
        <references refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" compoundref="poll_8c" startline="521" endline="537">ssh_poll_ctx_free</references>
        <references refid="socket_8h_1aa035e463e9a96923d81e01bfcf140d8d" compoundref="socket_8c" startline="398" endline="407">ssh_socket_free</references>
        <references refid="structssh__session__struct_1a61b53e777c7069d7b086b71b31d8925b" compoundref="session_8h" startline="213">ssh_session_struct::sshdir</references>
        <references refid="structssh__session__struct_1a8ed5d5d3116679fd7b8f2c0e1db92726" compoundref="session_8h" startline="210">ssh_session_struct::username</references>
        <references refid="structssh__session__struct_1a6023ca7ba47bbed4837f72bf9dde5948" compoundref="session_8h" startline="216">ssh_session_struct::wanted_methods</references>
        <referencedby refid="torture__packet__filter_8c_1a3074410e568313b7166c58fbf59e431f" compoundref="torture__packet__filter_8c" startline="317" endline="396">check_message_in_all_states</referencedby>
        <referencedby refid="torture__server__x11_8c_1abb575a0d8644debf193b257c748c0ce1" compoundref="torture__server__x11_8c" startline="69" endline="96">client_thread</referencedby>
        <referencedby refid="benchmarks_8c_1aa10487258ce1df1ef42bee98693a777a" compoundref="benchmarks_8c" startline="276" endline="299">connect_host</referencedby>
        <referencedby refid="connect__ssh_8c_1ada855ebf4aac69d9a59afb23a8e338f4" compoundref="connect__ssh_8c" startline="24" endline="67">connect_ssh</referencedby>
        <referencedby refid="ssh__client__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__client__fuzzer_8cpp" startline="85" endline="158">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="exec_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="exec_8c" startline="7" endline="66">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="test__server_8c_1a1356104271e38a5856393ef01d01bc3a" compoundref="test__server_8c" startline="70" endline="277">run_server</referencedby>
        <referencedby refid="torture__algorithms_8c_1a7ac7f33ff2ba0f163d3da1f54f253811" compoundref="torture__algorithms_8c" startline="73" endline="81">session_teardown</referencedby>
        <referencedby refid="torture__keyfiles_8c_1ae04e186fb90045fb8faf6ae63488a854" compoundref="torture__keyfiles_8c" startline="52" endline="66">setup_both_keys</referencedby>
        <referencedby refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</referencedby>
        <referencedby refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="65" endline="218">ssh_options_copy</referencedby>
        <referencedby refid="torture__client__config_8c_1a199383cdaf56acd2611400b9bb125142" compoundref="torture__client__config_8c" startline="62" endline="81">teardown</referencedby>
        <referencedby refid="torture__server__x11_8c_1af793ec1fe611ecefae9f68db4f588c82" compoundref="torture__server__x11_8c" startline="154" endline="221">test_ssh_channel_request_x11</referencedby>
        <referencedby refid="torture__threads__pki__rsa_8c_1a5120f10dc6b7e2a6bc4271fda92fdfc0" compoundref="torture__threads__pki__rsa_8c" startline="562" endline="632">thread_pki_rsa_generate_key</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a056acb1b3260d43b8b8595d2147d9245" compoundref="torture__knownhosts__parsing_8c" startline="571" endline="608">torture_knownhosts_algorithms</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a80fef863003b9cb4a78cf1d00f468b96" compoundref="torture__knownhosts__parsing_8c" startline="610" endline="647">torture_knownhosts_algorithms_global</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a1d722c237962d3e5d2d8e6a127b45573" compoundref="torture__knownhosts__parsing_8c" startline="433" endline="506">torture_knownhosts_algorithms_negative</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1aa999a5daf9f768ee7e6a47fd2cf87d2b" compoundref="torture__knownhosts__parsing_8c" startline="399" endline="431">torture_knownhosts_algorithms_wanted</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a34627e027c28c600974cdcd7180fce16" compoundref="torture__knownhosts_8c" startline="364" endline="427">torture_knownhosts_conflict</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a6d9c521b05703644072a60947172795b" compoundref="torture__knownhosts__parsing_8c" startline="374" endline="397">torture_knownhosts_get_algorithms_names</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1a948a30602db763beff96bd4b8ec636e7" compoundref="torture__knownhosts__parsing_8c" startline="509" endline="538">torture_knownhosts_host_exists</referencedby>
        <referencedby refid="torture__knownhosts__parsing_8c_1ab6dafa14d4c630e2910477e9fd6c10c2" compoundref="torture__knownhosts__parsing_8c" startline="540" endline="569">torture_knownhosts_host_exists_global</referencedby>
        <referencedby refid="torture__knownhosts_8c_1afb7c18605219993054369cdd25b2bc92" compoundref="torture__knownhosts_8c" startline="304" endline="362">torture_knownhosts_other_auto</referencedby>
        <referencedby refid="torture__knownhosts_8c_1a5aa5170ce1bb16886fd54b737bc72aed" compoundref="torture__knownhosts_8c" startline="97" endline="152">torture_knownhosts_port</referencedby>
        <referencedby refid="torture__knownhosts__verify_8c_1afb37fd40f16e338074ad9e46ba9db619" compoundref="torture__knownhosts__verify_8c" startline="312" endline="374">torture_knownhosts_unknown</referencedby>
        <referencedby refid="torture__options_8c_1a64f216f56007a228aff29721e4b97cd3" compoundref="torture__options_8c" startline="805" endline="911">torture_options_copy</referencedby>
        <referencedby refid="torture__packet_8c_1ad28ea8febde081f05f3c6379e5397dd4" compoundref="torture__packet_8c" startline="45" endline="138">torture_packet</referencedby>
        <referencedby refid="torture__packet__filter_8c_1a16c73061577158cebb47088c1201c528" compoundref="torture__packet__filter_8c" startline="251" endline="315">torture_packet_filter_check_unfiltered</referencedby>
        <referencedby refid="torture__pki__dsa_8c_1a365fc8d8fc9d1c87ef28bb0237eab569" compoundref="torture__pki__dsa_8c" startline="849" endline="878">torture_pki_dsa_cert_verify</referencedby>
        <referencedby refid="torture__pki__dsa_8c_1a3a7f16381e525e9566512ba1e1c8246c" compoundref="torture__pki__dsa_8c" startline="796" endline="847">torture_pki_dsa_generate_key</referencedby>
        <referencedby refid="torture__pki__ecdsa_8c_1a01213a3d8de9d267a4170272c0099b60" compoundref="torture__pki__ecdsa_8c" startline="673" endline="706">torture_pki_ecdsa_cert_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1a75be26ab9888c37ea2ebc786279e26d6" compoundref="torture__pki__ed25519_8c" startline="468" endline="504">torture_pki_ed25519_cert_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1ac85e7b533420e07088bea89f9a38cb8c" compoundref="torture__pki__ed25519_8c" startline="417" endline="466">torture_pki_ed25519_generate_key</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1af1e2eec9a6e622023a0ecd76a8594d0a" compoundref="torture__pki__ed25519_8c" startline="771" endline="823">torture_pki_ed25519_verify</referencedby>
        <referencedby refid="torture__pki__ed25519_8c_1a7400cc5f396c94ebac144ed695d14b1c" compoundref="torture__pki__ed25519_8c" startline="825" endline="870">torture_pki_ed25519_verify_bad</referencedby>
        <referencedby refid="torture__pki__ecdsa_8c_1abd1281bee9d18802bdf7ffda89e9be54" compoundref="torture__pki__ecdsa_8c" startline="530" endline="671">torture_pki_generate_key_ecdsa</referencedby>
        <referencedby refid="torture__pki__rsa_8c_1a032833c4f71125596cc5f99ea0d63c4f" compoundref="torture__pki__rsa_8c" startline="539" endline="598">torture_pki_rsa_generate_key</referencedby>
        <referencedby refid="torture__pki__rsa_8c_1a7f78789af8cfaeac28ad6537ad1403af" compoundref="torture__pki__rsa_8c" startline="600" endline="666">torture_pki_rsa_sha2</referencedby>
        <referencedby refid="torture__pki__rsa__uri_8c_1a6087333e472cde48dcf4ec7aa6c2b78e" compoundref="torture__pki__rsa__uri_8c" startline="186" endline="217">torture_pki_sign_verify_uri</referencedby>
        <referencedby refid="unittests_2torture__pki_8c_1ae33c259d4f65da47ee3901653e1ec8bc" compoundref="unittests_2torture__pki_8c" startline="251" endline="430">torture_pki_verify_mismatch</referencedby>
        <referencedby refid="torture__misc_8c_1a5b94851ec15240c051b0240c4433dcae" compoundref="torture__misc_8c" startline="232" endline="365">torture_ssh_analyze_banner</referencedby>
        <referencedby refid="torture_8c_1aa1653e389922c4762e71dbd2ab2d7cda" compoundref="torture_8c" startline="262" endline="353">torture_ssh_session</referencedby>
        <referencedby refid="classssh_1_1Session_1ae07d004bb4cee8a4c1a73f829363893d" compoundref="libsshpp_8hpp" startline="132" endline="135">ssh::Session::~Session</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga1e76a1fc03d1d16fb59b0bd5e9978aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_clientbanner</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_clientbanner</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the client banner </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the client banner string or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="335" column="12" bodyfile="src/session.c" bodystart="335" bodyend="341"/>
        <references refid="structssh__session__struct_1aff7925f04070fc20dc3d9366d7f2f748" compoundref="session_8h" startline="113">ssh_session_struct::clientbanner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac89bcc9f438d031a32260926b04ea6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_serverbanner</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_serverbanner</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the server banner </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the server banner string or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="350" column="12" bodyfile="src/session.c" bodystart="350" bodyend="355"/>
        <references refid="structssh__session__struct_1a9a1f525932e35bb7439abbf121cd8de0" compoundref="session_8h" startline="112">ssh_session_struct::serverbanner</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="ssh__ping_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="ssh__ping_8c" startline="21" endline="66">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga3870bf9e03a2ac470ab202424224b15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_kex_algo</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_kex_algo</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the current key exchange algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the key exchange algorithm string or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="364" column="12" bodyfile="src/session.c" bodystart="364" bodyend="394"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__crypto__struct_1a4d0e501e9fe0b45aeebec379319ad005" compoundref="crypto_8h" startline="152">ssh_crypto_struct::kex_type</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fa5834e9e582af19fb1ee9862ec8cf651b" compoundref="crypto_8h" startline="78">SSH_KEX_CURVE25519_SHA256</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fa25c34ad7204c8aa6fc02f5718c6ca58f" compoundref="crypto_8h" startline="76">SSH_KEX_CURVE25519_SHA256_LIBSSH_ORG</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8faeff50985f7ef1e58a798ebe502d25127" compoundref="crypto_8h" startline="62">SSH_KEX_DH_GROUP14_SHA1</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fa544f3a1e0137b83515cd8024c2002c87" compoundref="crypto_8h" startline="80">SSH_KEX_DH_GROUP16_SHA512</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fab85286eabab069c14c763dea821f89d9" compoundref="crypto_8h" startline="82">SSH_KEX_DH_GROUP18_SHA512</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fa06d50b8787140eaba7768f55b2ead4a0" compoundref="crypto_8h" startline="60">SSH_KEX_DH_GROUP1_SHA1</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fa94d94806a5bada517c5ce362c8dc51ed" compoundref="crypto_8h" startline="70">SSH_KEX_ECDH_SHA2_NISTP256</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8faf448ad3e1038e1a13db5bf106c228121" compoundref="crypto_8h" startline="72">SSH_KEX_ECDH_SHA2_NISTP384</references>
        <references refid="crypto_8h_1a7771bd67337acdfd10dbff1c114f0e8fa3eddc334b299064d73ccbc5e21a1c917" compoundref="crypto_8h" startline="74">SSH_KEX_ECDH_SHA2_NISTP521</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga81d8525f77c58d93ed0d320c38e62009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_cipher_in</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_cipher_in</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the input cipher for the given session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns cipher name or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="403" column="12" bodyfile="src/session.c" bodystart="403" bodyend="410"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__crypto__struct_1aead09fb1e43713d5a0da7b6de897ff88" compoundref="crypto_8h" startline="137">ssh_crypto_struct::in_cipher</references>
        <references refid="structssh__cipher__struct_1a089a6f759557c29ef49a1436081ff081" compoundref="crypto_8h" startline="158">ssh_cipher_struct::name</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0a0b33868aec5337ba1d9aee8fee26d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_cipher_out</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_cipher_out</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the output cipher for the given session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns cipher name or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="419" column="12" bodyfile="src/session.c" bodystart="419" bodyend="426"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__cipher__struct_1a089a6f759557c29ef49a1436081ff081" compoundref="crypto_8h" startline="158">ssh_cipher_struct::name</references>
        <references refid="structssh__crypto__struct_1a983a4a59241cfaa5fbea8fc67e963104" compoundref="crypto_8h" startline="137">ssh_crypto_struct::out_cipher</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga293196b7f1b1653ff970b8206671def9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_hmac_in</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_hmac_in</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the input HMAC algorithm for the given session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HMAC algorithm name or NULL if unknown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="435" column="12" bodyfile="src/session.c" bodystart="435" bodyend="441"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__crypto__struct_1ad913f3f3dc8a8a699a28a8f575ebb73c" compoundref="crypto_8h" startline="139">ssh_crypto_struct::in_hmac_etm</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="wrapper_8h_1ae29d7fc41c9735b510c34d3a2759b937" compoundref="wrapper_8c" startline="95" endline="105">ssh_hmac_type_to_string</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga2fc37631d6a350d9c31dcb336b98a836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_hmac_out</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_hmac_out</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the output HMAC algorithm for the given session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HMAC algorithm name or NULL if unknown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="450" column="12" bodyfile="src/session.c" bodystart="450" bodyend="456"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="structssh__crypto__struct_1a4e9b63867c4814d84b572adf842f8d2c" compoundref="crypto_8h" startline="138">ssh_crypto_struct::out_hmac</references>
        <references refid="structssh__crypto__struct_1a67063ccea2e37040ac85e1c15d8afe2a" compoundref="crypto_8h" startline="139">ssh_crypto_struct::out_hmac_etm</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="wrapper_8h_1ae29d7fc41c9735b510c34d3a2759b937" compoundref="wrapper_8c" startline="95" endline="105">ssh_hmac_type_to_string</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_silent_disconnect</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_silent_disconnect</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Disconnect impolitely from a remote host by closing the socket. </para>
        </briefdescription>
        <detaileddescription>
<para>Suitable if you forked and want to destroy this session.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to disconnect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="465" column="6" bodyfile="src/session.c" bodystart="465" bodyend="473"/>
        <references refid="structssh__session__struct_1a729d3c7f6ae20cb5a00ac7cd28a630f7" compoundref="session_8h" startline="124">ssh_session_struct::alive</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="672" endline="750">ssh_disconnect</references>
        <references refid="socket_8h_1aaf4853539d6ed1c3508cca5a45d557d6" compoundref="socket_8c" startline="447" endline="487">ssh_socket_close</references>
        <referencedby refid="classssh_1_1Session_1a15b2a58607cc42628e17c94c8f7eb793" compoundref="libsshpp_8hpp" startline="401" endline="403">ssh::Session::silentDisconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga2a29cff08855611be84d050e5bec73bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_blocking</definition>
        <argsstring>(ssh_session session, int blocking)</argsstring>
        <name>ssh_set_blocking</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blocking</declname>
        </param>
        <briefdescription>
<para>Set the session in blocking/nonblocking mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to change.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero for nonblocking mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="482" column="6" bodyfile="src/session.c" bodystart="482" bodyend="489"/>
        <references refid="structssh__session__struct_1a997060832a3419d8fe884d3da855ef4c" compoundref="session_8h" startline="129">ssh_session_struct::flags</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="session_8h_1a9b9e6ca7f0011369561096377aa41a5a" compoundref="session_8h" startline="73">SSH_SESSION_FLAG_BLOCKING</references>
        <referencedby refid="sshd__direct-tcpip_8c_1acb2eaf207c01cc503bec863448734a4f" compoundref="sshd__direct-tcpip_8c" startline="295" endline="388">my_fd_data_function</referencedby>
        <referencedby refid="group__libssh__channel_1gaaca5a3fbe9839c3ffb37b746afc35f4c" compoundref="channels_8c" startline="2983" endline="3022">ssh_channel_read_nonblocking</referencedby>
        <referencedby refid="group__libssh__channel_1ga1c00ed18679d9a8c5b971260b5df13a2" compoundref="channels_8c" startline="1621" endline="1626">ssh_channel_set_blocking</referencedby>
        <referencedby refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="59" endline="181">ssh_new</referencedby>
        <referencedby refid="torture__auth_8c_1ac1e47567b2530e7c7c17d7f3367db43c" compoundref="torture__auth_8c" startline="467" endline="496">torture_auth_agent_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a2fc459f58be2d4e235c5ef4397fa8b4b" compoundref="torture__auth_8c" startline="277" endline="305">torture_auth_autopubkey_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a8c1979b9feebe5c34354456ff4260ee4" compoundref="torture__auth_8c" startline="342" endline="384">torture_auth_kbdint_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a5836d87eecde023390a0acf40b7160c6" compoundref="torture__auth_8c" startline="227" endline="251">torture_auth_none_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a144cbca03a69c33a0137bbcbd69873cf" compoundref="torture__auth_8c" startline="409" endline="438">torture_auth_password_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1aaefb1835a46af27a36149a89c3308825" compoundref="torture__auth_8c" startline="777" endline="822">torture_auth_pubkey_types_ecdsa_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a6f2cc3f2514eaf5b14e030490d6993f3" compoundref="torture__auth_8c" startline="824" endline="888">torture_auth_pubkey_types_ed25519_nonblocking</referencedby>
        <referencedby refid="torture__auth_8c_1a6c870e5368b648dc01f643bbc52a62f4" compoundref="torture__auth_8c" startline="730" endline="775">torture_auth_pubkey_types_nonblocking</referencedby>
        <referencedby refid="torture__connect_8c_1aceba71bae2eb45662c7723fde9b6fc1b" compoundref="torture__connect_8c" startline="86" endline="101">torture_connect_nonblocking</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_blocking</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_is_blocking</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Return the blocking mode of libssh. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the session is nonblocking, </para>
</simplesect>
<simplesect kind="return"><para>1 if the functions may block. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="497" column="5" bodyfile="src/session.c" bodystart="497" bodyend="500"/>
        <references refid="structssh__session__struct_1a997060832a3419d8fe884d3da855ef4c" compoundref="session_8h" startline="129">ssh_session_struct::flags</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="session_8h_1a9b9e6ca7f0011369561096377aa41a5a" compoundref="session_8h" startline="73">SSH_SESSION_FLAG_BLOCKING</references>
        <referencedby refid="sshd__direct-tcpip_8c_1acb2eaf207c01cc503bec863448734a4f" compoundref="sshd__direct-tcpip_8c" startline="295" endline="388">my_fd_data_function</referencedby>
        <referencedby refid="group__libssh__channel_1gaaca5a3fbe9839c3ffb37b746afc35f4c" compoundref="channels_8c" startline="2983" endline="3022">ssh_channel_read_nonblocking</referencedby>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
        <referencedby refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac06e77d8cc7d3c9b3ce54cfd8db35afa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_flush_termination</definition>
        <argsstring>(void *c)</argsstring>
        <name>ssh_flush_termination</name>
        <param>
          <type>void *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="503" column="12" bodyfile="src/session.c" bodystart="503" bodyend="510"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="socket_8h_1ab1da50ceb561300f26b250da9e197c86" compoundref="socket_8c" startline="759" endline="766">ssh_socket_buffered_write_bytes</references>
        <referencedby refid="group__libssh__session_1ga60da8e2c47897a209a455923c35d52d8" compoundref="session_8c" startline="523" endline="539">ssh_blocking_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga60da8e2c47897a209a455923c35d52d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_blocking_flush</definition>
        <argsstring>(ssh_session session, int timeout)</argsstring>
        <name>ssh_blocking_flush</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Blocking flush of the outgoing buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Set an upper limit on the time for which this function will block, in milliseconds. Specifying -1 means an infinite timeout. This parameter is passed to the poll() function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_AGAIN if timeout occurred, SSH_ERROR otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="523" column="5" bodyfile="src/session.c" bodystart="523" bodyend="539"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" compoundref="libssh_8h" startline="331">SSH_AGAIN</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__session_1gac06e77d8cc7d3c9b3ce54cfd8db35afa" compoundref="session_8c" startline="503" endline="510">ssh_flush_termination</references>
        <references refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</references>
        <referencedby refid="group__libssh__channel_1gae61fe034965d58e1fb6da1bee98de191" compoundref="channels_8c" startline="1372" endline="1374">ssh_channel_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga49d8f413a3c7879070a112703de1d6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_connected</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_is_connected</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Check if we are connected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to check if it is connected.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if we are connected, 0 if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="548" column="5" bodyfile="src/session.c" bodystart="548" bodyend="554"/>
        <references refid="structssh__session__struct_1a729d3c7f6ae20cb5a00ac7cd28a630f7" compoundref="session_8h" startline="124">ssh_session_struct::alive</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="torture_8c_1aa1653e389922c4762e71dbd2ab2d7cda" compoundref="torture_8c" startline="262" endline="353">torture_ssh_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gafe509fcea47714b5cd277d1e35e83276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
        <definition>socket_t ssh_get_fd</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_fd</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the fd of a connection. </para>
        </briefdescription>
        <detaileddescription>
<para>In case you&apos;d need the file descriptor of the connection to the server/client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor of the connection, or -1 if it is not connected </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="566" column="10" bodyfile="src/session.c" bodystart="566" bodyend="572"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="socket_8h_1ae2a8e654afdc3bdeedf335bdc254401c" compoundref="socket_8c" startline="517" endline="520">ssh_socket_get_fd</references>
        <referencedby refid="classssh_1_1Session_1a30c021f6138124d785f151583e5656bd" compoundref="libsshpp_8hpp" startline="330" endline="332">ssh::Session::getSocket</referencedby>
        <referencedby refid="sshnetcat_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="sshnetcat_8c" startline="77" endline="175">select_loop</referencedby>
        <referencedby refid="torture__session_8c_1a99c33d74eaa8af7ac88d2b2ffe1299ca" compoundref="torture__session_8c" startline="83" endline="119">torture_channel_read_error</referencedby>
        <referencedby refid="torture__proxycommand_8c_1a0f3c36e817257e7cb989981c244dd7d2" compoundref="torture__proxycommand_8c" startline="115" endline="137">torture_options_set_proxycommand_ssh</referencedby>
        <referencedby refid="torture__proxycommand_8c_1aaf528fafa536dcd4436ac0d75ce3be8e" compoundref="torture__proxycommand_8c" startline="139" endline="162">torture_options_set_proxycommand_ssh_stderr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0e05c91c6f475eabc8d221914d25a425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_fd_toread</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_set_fd_toread</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Tell the session it has data to read on the file descriptor without blocking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="580" column="6" bodyfile="src/session.c" bodystart="580" bodyend="586"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="socket_8h_1a8c75ff63e98886df2b9e3de35095314d" compoundref="socket_8c" startline="734" endline="737">ssh_socket_set_read_wontblock</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga3f1b3c59662464eec3649d3d72a40543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_fd_towrite</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_set_fd_towrite</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Tell the session it may write to the file descriptor without blocking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="593" column="6" bodyfile="src/session.c" bodystart="593" bodyend="599"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="socket_8h_1a6d635344343af4fe2b372b01e59299ba" compoundref="socket_8c" startline="729" endline="732">ssh_socket_set_write_wontblock</references>
        <referencedby refid="group__libssh__session_1gafa8d153635a261e97870ab71d570149a" compoundref="client_8c" startline="384" endline="478">ssh_client_connection_callback</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga06453278350fd9e940c5c1b0d5225f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_fd_except</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_set_fd_except</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Tell the session it has an exception to catch on the file descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="606" column="6" bodyfile="src/session.c" bodystart="606" bodyend="612"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="socket_8h_1aee43f4cb991640176f1d43ef5b00c744" compoundref="socket_8c" startline="739" endline="742">ssh_socket_set_except</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_handle_packets</definition>
        <argsstring>(ssh_session session, int timeout)</argsstring>
        <name>ssh_handle_packets</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="633" column="5" bodyfile="src/session.c" bodystart="633" bodyend="665"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" compoundref="session_8c" startline="497" endline="500">ssh_is_blocking</references>
        <references refid="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" compoundref="misc_8c" startline="1368" endline="1376">ssh_make_milliseconds</references>
        <references refid="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" compoundref="poll_8c" startline="442" endline="444">ssh_poll_add_events</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <references refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" compoundref="poll_8c" startline="663" endline="721">ssh_poll_ctx_dopoll</references>
        <references refid="group__libssh__poll_1gaca05fcf77e6c4b5e55a9cfd2c9690ea5" compoundref="poll_8c" startline="391" endline="393">ssh_poll_get_ctx</references>
        <references refid="group__libssh__poll_1ga8ad007907f642d4aa2c25e5209bf337a" compoundref="poll_8c" startline="730" endline="736">ssh_poll_get_default_ctx</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="socket_8h_1a5af4852b3910014440f36032ec76d785" compoundref="socket_8c" startline="386" endline="393">ssh_socket_get_poll_handle</references>
        <references refid="session_8h_1a1d6b747c5003e24c3461096c76580b15" compoundref="session_8h" startline="82">SSH_TIMEOUT_USER</references>
        <references refid="structssh__session__struct_1a551386dc1ac438997d8348cbf12983ad" compoundref="session_8h" startline="220">ssh_session_struct::timeout</references>
        <references refid="structssh__session__struct_1afb6ab92b01733c0ba287d01e8cef55bd" compoundref="session_8h" startline="221">ssh_session_struct::timeout_usec</references>
        <referencedby refid="group__libssh__channel_1ga3a106d0c860b8ada098b4ed317c3cce4" compoundref="channels_8c" startline="3204" endline="3250">channel_protocol_select</referencedby>
        <referencedby refid="group__libssh__channel_1gab391f5c978cb1bc8df3ebd061f38e8c5" compoundref="channels_8c" startline="2731" endline="2790">channel_read_buffer</referencedby>
        <referencedby refid="group__libssh__channel_1gac43bae56048b912205d102249b436eec" compoundref="channels_8c" startline="2093" endline="2146">ssh_channel_accept</referencedby>
        <referencedby refid="group__libssh__channel_1ga157f7d1df5de07ec6c6976e2034ba6e2" compoundref="channels_8c" startline="3038" endline="3069">ssh_channel_poll</referencedby>
        <referencedby refid="group__libssh__server_1gac5c9893e27dad15af4bd2dd8abc4760c" compoundref="server_8c" startline="1143" endline="1171">ssh_execute_message_callbacks</referencedby>
        <referencedby refid="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" compoundref="session_8c" startline="692" endline="740">ssh_handle_packets_termination</referencedby>
        <referencedby refid="group__libssh__session_1ga5ffa2201152e29cc680c4b8e4a3f4fdf" compoundref="session_8c" startline="905" endline="928">ssh_send_debug</referencedby>
        <referencedby refid="group__libssh__session_1gab8827415fd19cf6cb64e7fc83c09e423" compoundref="session_8c" startline="870" endline="892">ssh_send_ignore</referencedby>
        <referencedby refid="torture__algorithms_8c_1a15b3d1cac3aa670c3409b3bdc4c30223" compoundref="torture__algorithms_8c" startline="83" endline="135">test_algorithm</referencedby>
        <referencedby refid="torture__rekey_8c_1a75d0cca74861337645286b4d42e57006" compoundref="torture__rekey_8c" startline="150" endline="209">torture_rekey_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a3c7d816b41acf84841eb39ec72475998" compoundref="torture__rekey_8c" startline="393" endline="440">torture_rekey_server_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a83928e03d85a04fd06d4c4a0ca9c7394" compoundref="torture__rekey_8c" startline="324" endline="388">torture_rekey_time</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga4b84e1ae757c0d4007a5eefdf4651694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_handle_packets_termination</definition>
        <argsstring>(ssh_session session, long timeout, ssh_termination_function fct, void *user)</argsstring>
        <name>ssh_handle_packets_termination</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>long</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="session_8h_1afe190fe0d01c9d8b63862d56b7f67ffa" kindref="member">ssh_termination_function</ref></type>
          <declname>fct</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="692" column="5" bodyfile="src/session.c" bodystart="692" bodyend="740"/>
        <references refid="structssh__session__struct_1a1c29cf990c1d0df6e1b0971d4f3d1f3e">ssh_session_struct::opts</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" compoundref="libssh_8h" startline="331">SSH_AGAIN</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</references>
        <references refid="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" compoundref="session_8c" startline="497" endline="500">ssh_is_blocking</references>
        <references refid="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" compoundref="misc_8c" startline="1368" endline="1376">ssh_make_milliseconds</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="session_8h_1aa8c8d35c7f83d7b00218ebadfac2254b" compoundref="session_8h" startline="84">SSH_TIMEOUT_DEFAULT</references>
        <references refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" compoundref="misc_8c" startline="1388" endline="1411">ssh_timeout_elapsed</references>
        <references refid="session_8h_1ae931fa7865b3e4d87c18b5bd5e44e74e" compoundref="session_8h" startline="80">SSH_TIMEOUT_INFINITE</references>
        <references refid="session_8h_1a5dc7677b987888e7db552768afc9d9c6" compoundref="session_8h" startline="86">SSH_TIMEOUT_NONBLOCKING</references>
        <references refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" compoundref="misc_8c" startline="1420" endline="1432">ssh_timeout_update</references>
        <references refid="session_8h_1a1d6b747c5003e24c3461096c76580b15" compoundref="session_8h" startline="82">SSH_TIMEOUT_USER</references>
        <references refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" compoundref="misc_8c" startline="1324" endline="1335">ssh_timestamp_init</references>
        <references refid="structssh__session__struct_1a551386dc1ac438997d8348cbf12983ad" compoundref="session_8h" startline="220">ssh_session_struct::timeout</references>
        <references refid="structssh__session__struct_1afb6ab92b01733c0ba287d01e8cef55bd" compoundref="session_8h" startline="221">ssh_session_struct::timeout_usec</references>
        <references refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" compoundref="ssh__client_8c" startline="48">user</references>
        <referencedby refid="group__libssh__channel_1gaa3d6d7d4ab8191f8b8eb14464b0f0e1e" compoundref="channels_8c" startline="285" endline="367">channel_open</referencedby>
        <referencedby refid="group__libssh__channel_1gaee35ccabe6998568d138d35f538765d9" compoundref="channels_8c" startline="1698" endline="1780">channel_request</referencedby>
        <referencedby refid="group__libssh__channel_1ga918e9bde297309e977a872bc62c0d260" compoundref="channels_8c" startline="1376" endline="1517">channel_write_common</referencedby>
        <referencedby refid="group__libssh__session_1ga60da8e2c47897a209a455923c35d52d8" compoundref="session_8c" startline="523" endline="539">ssh_blocking_flush</referencedby>
        <referencedby refid="group__libssh__channel_1ga9eea019dd0bbaa8a817fff2c762d1a2d" compoundref="channels_8c" startline="3180" endline="3193">ssh_channel_get_exit_status</referencedby>
        <referencedby refid="group__libssh__channel_1gab56c7b7959e4c23959f2989468811661" compoundref="channels_8c" startline="3090" endline="3135">ssh_channel_poll_timeout</referencedby>
        <referencedby refid="group__libssh__channel_1ga2f4e02cb3b3adbc30a534623164068fd" compoundref="channels_8c" startline="2863" endline="2960">ssh_channel_read_timeout</referencedby>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
        <referencedby refid="group__libssh__channel_1ga814cf8a82b4098b8994f9029fed572c0" compoundref="channels_8c" startline="2256" endline="2341">ssh_global_request</referencedby>
        <referencedby refid="group__libssh__server_1gab60c37350653eb3b65a99ac089c55830" compoundref="server_8c" startline="528" endline="563">ssh_handle_key_exchange</referencedby>
        <referencedby refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" compoundref="messages_8c" startline="516" endline="534">ssh_message_get</referencedby>
        <referencedby refid="libssh_8h_1abf8db7680a5214da800ad02d8599f073" compoundref="client_8c" startline="325" endline="370">ssh_service_request</referencedby>
        <referencedby refid="group__libssh__auth_1gabff6b3898d3bf45b62cc3ed3774eaa83" compoundref="auth_8c" startline="142" endline="186">ssh_userauth_get_response</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac199314d1646372c566ef14b9b6dca53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_status</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_status</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get session status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bitmask including SSH_CLOSED, SSH_READ_PENDING, SSH_WRITE_PENDING or SSH_CLOSED_ERROR which respectively means the session is closed, has data to read on the connection socket and session was closed due to an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="752" column="5" bodyfile="src/session.c" bodystart="752" bodyend="778"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="libssh_8h_1a3e86357d61758d53c8cb5d304597e7ec" compoundref="libssh_8h" startline="224">SSH_CLOSED</references>
        <references refid="libssh_8h_1a7d19d717827a40f33e5e58ef2b12fc1e" compoundref="libssh_8h" startline="228">SSH_CLOSED_ERROR</references>
        <references refid="libssh_8h_1ab43b60dbabf6f8ea8001d49b7fabbbd1" compoundref="libssh_8h" startline="226">SSH_READ_PENDING</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca05407079ea8dd73449ac6f9ddbf58084" compoundref="session_8h" startline="47">SSH_SESSION_STATE_DISCONNECTED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="socket_8h_1a4944a315eb3379d72e5d1863994a745f" compoundref="socket_8c" startline="769" endline="786">ssh_socket_get_status</references>
        <references refid="libssh_8h_1a23b4dcde28bace8c4a4d21fb2cc2d1b5" compoundref="libssh_8h" startline="230">SSH_WRITE_PENDING</references>
        <referencedby refid="default__cb_8c_1a1c4ec691e0189bd2ff9c7acd3399895b" compoundref="default__cb_8c" startline="783" endline="995">default_handle_session_cb</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a845bb2d262ac6cb3c7acfaeb394641ee" compoundref="torture__server__auth__kbdint_8c" startline="333" endline="515">handle_kbdint_session_cb</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae9d0104fbeca17bcfb0659ad718c4606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_poll_flags</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_poll_flags</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get poll flags for an external mainloop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bitmask including SSH_READ_PENDING or SSH_WRITE_PENDING. For SSH_READ_PENDING, your invocation of poll() should include POLLIN. For SSH_WRITE_PENDING, your invocation of poll() should include POLLOUT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="790" column="5" bodyfile="src/session.c" bodystart="790" bodyend="797"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="socket_8h_1a2d1f155a930ca6784cbcb44935ce58ef" compoundref="socket_8c" startline="788" endline="798">ssh_socket_get_poll_flags</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gad19e368e35d48e02ba95970a7d1e87f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_disconnect_message</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_disconnect_message</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the disconnect message from the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The message sent by the server along with the disconnect, or NULL in which case the reason of the disconnect may be found with ssh_get_error.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" kindref="member">ssh_get_error()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="810" column="12" bodyfile="src/session.c" bodystart="810" bodyend="826"/>
        <references refid="structssh__session__struct_1a3d7fe6442fd7d6d11825c5c904a812ed" compoundref="session_8h" startline="136">ssh_session_struct::discon_msg</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1ad1339fb4b92a9d25bdb99df5de5c4f88" compoundref="libssh_8h" startline="285">SSH_REQUEST_DENIED</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca05407079ea8dd73449ac6f9ddbf58084" compoundref="session_8h" startline="47">SSH_SESSION_STATE_DISCONNECTED</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <referencedby refid="classssh_1_1Session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" compoundref="libsshpp_8hpp" startline="308" endline="311">ssh::Session::getDisconnectMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga8467735e4735165336f68ee82e24de0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_version</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_version</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the protocol version of the session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SSH version as integer, &lt; 0 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="835" column="5" bodyfile="src/session.c" bodystart="835" bodyend="841"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <referencedby refid="classssh_1_1Session_1a5d7b4df57ed97f2592893b0493336b88" compoundref="libsshpp_8hpp" startline="357" endline="359">ssh::Session::getVersion</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga2635562d4c0bb8507e9a9f7274ff4729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_socket_exception_callback</definition>
        <argsstring>(int code, int errno_code, void *user)</argsstring>
        <name>ssh_socket_exception_callback</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errno_code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="848" column="6" bodyfile="src/session.c" bodystart="848" bodyend="860"/>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a6f74d1a1eb6ed715b1073b67caa18460" compoundref="session_8h" startline="147">ssh_session_struct::session_state</references>
        <references refid="structssh__session__struct_1a4fdde3f498bcf3e0f118335278a8ec5a" compoundref="session_8h" startline="199">ssh_session_struct::ssh_connection_callback</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1a1c08cc9177a5598e0675abfb833d2993" compoundref="libssh_8h" startline="358">SSH_LOG_RARE</references>
        <references refid="session_8h_1a9bbd1d5ae11485e27279be6ad461992ca855474fc84a2fb170fcb72546af8eeb8" compoundref="session_8h" startline="46">SSH_SESSION_STATE_ERROR</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="group__libssh__callbacks_1gadc333c5dedfa61e2a0725428bd3aab89" compoundref="callbacks_8h" startline="409">SSH_SOCKET_EXCEPTION_EOF</references>
        <references refid="ssh__client_8c_1a14871705f45ccdc5bb9f4549efd8e119" compoundref="ssh__client_8c" startline="48">user</references>
        <referencedby refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="507" endline="620">ssh_connect</referencedby>
        <referencedby refid="group__libssh__server_1gab60c37350653eb3b65a99ac089c55830" compoundref="server_8c" startline="528" endline="563">ssh_handle_key_exchange</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gab8827415fd19cf6cb64e7fc83c09e423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_send_ignore</definition>
        <argsstring>(ssh_session session, const char *data)</argsstring>
        <name>ssh_send_ignore</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Send a message that should be ignored. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be sent</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="870" column="5" bodyfile="src/session.c" bodystart="870" bodyend="892"/>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="structssh__session__struct_1af0aed60c1e529bbfdcb483fd80bf98a0" compoundref="session_8h" startline="140">ssh_session_struct::out_buffer</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="ssh2_8h_1ae42b1760b1580aa1e22b64b75cfb0bc9" compoundref="ssh2_8h" startline="5">SSH2_MSG_IGNORE</references>
        <references refid="buffer_8h_1ae17848a86043f0abfc60c1c4f6126ccd" compoundref="buffer_8h" startline="49">ssh_buffer_pack</references>
        <references refid="libssh_8h_1ac8802ff7f5348d0145dab5242623f740">ssh_buffer_reinit</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="packet_8h_1a7e6c7ed74c23ace432476aa8a6841140" compoundref="packet_8c" startline="1761" endline="1843">ssh_packet_send</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="socket_8h_1a29176fb6f348985227454a3f5daec745" compoundref="socket_8c" startline="525" endline="528">ssh_socket_is_open</references>
        <referencedby refid="torture__algorithms_8c_1a15b3d1cac3aa670c3409b3bdc4c30223" compoundref="torture__algorithms_8c" startline="83" endline="135">test_algorithm</referencedby>
        <referencedby refid="torture__rekey_8c_1a75d0cca74861337645286b4d42e57006" compoundref="torture__rekey_8c" startline="150" endline="209">torture_rekey_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a3c7d816b41acf84841eb39ec72475998" compoundref="torture__rekey_8c" startline="393" endline="440">torture_rekey_server_send</referencedby>
        <referencedby refid="torture__rekey_8c_1a83928e03d85a04fd06d4c4a0ca9c7394" compoundref="torture__rekey_8c" startline="324" endline="388">torture_rekey_time</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga5ffa2201152e29cc680c4b8e4a3f4fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_send_debug</definition>
        <argsstring>(ssh_session session, const char *message, int always_display)</argsstring>
        <name>ssh_send_debug</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>always_display</declname>
        </param>
        <briefdescription>
<para>Send a debug message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">always_display</parametername>
</parameternamelist>
<parameterdescription>
<para>Message SHOULD be displayed by the server. It SHOULD NOT be displayed unless debugging information has been explicitly requested.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="905" column="5" bodyfile="src/session.c" bodystart="905" bodyend="928"/>
        <references refid="proxy_8c_1a11614f44ef4d939bdd984953346a7572" compoundref="proxy_8c" startline="33">error</references>
        <references refid="structssh__session__struct_1af0aed60c1e529bbfdcb483fd80bf98a0" compoundref="session_8h" startline="140">ssh_session_struct::out_buffer</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a3e64318ee32b9880aafbded46fabf81d" compoundref="session_8h" startline="111">ssh_session_struct::socket</references>
        <references refid="ssh2_8h_1a9f548f8599894a624b56e943f69f2960" compoundref="ssh2_8h" startline="7">SSH2_MSG_DEBUG</references>
        <references refid="buffer_8h_1ae17848a86043f0abfc60c1c4f6126ccd" compoundref="buffer_8h" startline="49">ssh_buffer_pack</references>
        <references refid="libssh_8h_1ac8802ff7f5348d0145dab5242623f740">ssh_buffer_reinit</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="packet_8h_1a7e6c7ed74c23ace432476aa8a6841140" compoundref="packet_8c" startline="1761" endline="1843">ssh_packet_send</references>
        <references refid="priv_8h_1ae280c413c792e04237f000841ac8ce44" compoundref="priv_8h" startline="265">ssh_set_error_oom</references>
        <references refid="socket_8h_1a29176fb6f348985227454a3f5daec745" compoundref="socket_8c" startline="525" endline="528">ssh_socket_is_open</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga84d4ac53ac8582b70da9b63739df61ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_counters</definition>
        <argsstring>(ssh_session session, ssh_counter scounter, ssh_counter rcounter)</argsstring>
        <name>ssh_set_counters</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a13411d2fe747ade4a420e64c25b121f6" kindref="member">ssh_counter</ref></type>
          <declname>scounter</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a13411d2fe747ade4a420e64c25b121f6" kindref="member">ssh_counter</ref></type>
          <declname>rcounter</declname>
        </param>
        <briefdescription>
<para>Set the session data counters. </para>
        </briefdescription>
        <detaileddescription>
<para>This functions sets the counter structures to be used to calculate data which comes in and goes out through the session at different levels.</para>
<para><programlisting><codeline><highlight class="normal">struct<sp/>ssh_counter_struct<sp/>scounter<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_packets<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_packets<sp/>=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">struct<sp/>ssh_counter_struct<sp/>rcounter<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_packets<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_packets<sp/>=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ssh_set_counters(session,<sp/>&amp;scounter,<sp/>&amp;rcounter);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scounter</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter for byte data handled by the session sockets.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rcounter</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter for byte and packet data handled by the session, prior compression and SSH overhead. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="961" column="6" bodyfile="src/session.c" bodystart="961" bodyend="967"/>
        <references refid="structssh__session__struct_1ae076d146578d5505d0581fe5334aaa7c" compoundref="session_8h" startline="238">ssh_session_struct::raw_counter</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="structssh__session__struct_1a8da928017a30c1056abf6824e96aca7b" compoundref="session_8h" startline="237">ssh_session_struct::socket_counter</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaf8ff0e2236d54d964a82f68d7323a741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_pubkey_hash</definition>
        <argsstring>(ssh_session session, unsigned char **hash)</argsstring>
        <name>ssh_get_pubkey_hash</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__libssh__session_1ga7a7b16a4bed6d8d58f10bdb269172ff7" kindref="member">ssh_get_publickey_hash()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="972" column="5" bodyfile="src/session.c" bodystart="972" bodyend="1034"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="libssh_8h_1ae1ccf1a4af3f69b0f73113109de28a90" compoundref="libssh_8h" startline="279">MD5_DIGEST_LEN</references>
        <references refid="wrapper_8h_1a03fc66bb771519f69a5a19c65c87d69e">md5_final</references>
        <references refid="wrapper_8h_1ae89783901ebac520286020a4f0586ee5">md5_init</references>
        <references refid="wrapper_8h_1aad8f8cb0fa94280b84f40f09288ad44e">md5_update</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="structssh__crypto__struct_1a02e5e04457b69f9437c968fd35840bb3" compoundref="crypto_8h" startline="141">ssh_crypto_struct::server_pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="libssh_8h_1a036b2b00fb04337a4d06d719d1b62be1a86ff0b2e8da6ad8628efc556b6ce1887" compoundref="libssh_8h" startline="286">SSH_FATAL</references>
        <references refid="group__libssh__session_1ga5342eefee0497636e9657c968e106782" compoundref="session_8c" startline="1062" endline="1079">ssh_get_server_publickey</references>
        <references refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" compoundref="pki_8c" startline="205" endline="210">ssh_key_free</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__pki_1gaadeaf6dc35e99214de0af82c3c431649" compoundref="pki_8c" startline="2030" endline="2046">ssh_pki_export_pubkey_blob</references>
        <references refid="priv_8h_1a55177b3e8db90ca9adb435c44281963c" compoundref="priv_8h" startline="258">ssh_set_error</references>
        <references refid="libssh_8h_1aca901aa97257413ddf60ef74ff2bf7a6">ssh_string_data</references>
        <references refid="libssh_8h_1a5bc8710c8633117ff449d15489fca051" compoundref="libssh_8h" startline="790">SSH_STRING_FREE</references>
        <references refid="libssh_8h_1aad7b2fc092973a478df54a40af69abf2">ssh_string_len</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga07827fd70a51ddc4030364f220eb4c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_clean_pubkey_hash</definition>
        <argsstring>(unsigned char **hash)</argsstring>
        <name>ssh_clean_pubkey_hash</name>
        <param>
          <type>unsigned char **</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Deallocate the hash obtained by ssh_get_pubkey_hash. </para>
        </briefdescription>
        <detaileddescription>
<para>This is required under Microsoft platform as this library might use a different C library than your software, hence a different heap.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to deallocate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaf8ff0e2236d54d964a82f68d7323a741" kindref="member">ssh_get_pubkey_hash()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="1046" column="6" bodyfile="src/session.c" bodystart="1046" bodyend="1048"/>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <referencedby refid="examples__common_8h_1ad5d8ab97d3635ecaf8fa78225cb960fb" compoundref="examples_2knownhosts_8c" startline="35" endline="117">verify_knownhost</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga5342eefee0497636e9657c968e106782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_server_publickey</definition>
        <argsstring>(ssh_session session, ssh_key *key)</argsstring>
        <name>ssh_get_server_publickey</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get the server public key from a session. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to get the key from.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">key</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the allocated key. You need to free the key.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on errror.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" kindref="member">ssh_key_free()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="1062" column="5" bodyfile="src/session.c" bodystart="1062" bodyend="1079"/>
        <references refid="structssh__session__struct_1a059ad9084ca3c934197d68f5f334e8b8" compoundref="session_8h" startline="172">ssh_session_struct::current_crypto</references>
        <references refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" compoundref="torture__crypto_8c" startline="9">key</references>
        <references refid="curve25519-sha256_0dlibssh_8org_8txt_1a555595207a1407936ebb264ebdbf434c" compoundref="curve25519-sha256_0dlibssh_8org_8txt" startline="93">pubkey</references>
        <references refid="structssh__crypto__struct_1a02e5e04457b69f9437c968fd35840bb3" compoundref="crypto_8h" startline="141">ssh_crypto_struct::server_pubkey</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__pki_1gae0944d085d1a63c73b7eaf78924ddca8" compoundref="pki_8c" startline="132" endline="139">ssh_key_dup</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="group__libssh__session_1gaf8ff0e2236d54d964a82f68d7323a741" compoundref="session_8c" startline="972" endline="1034">ssh_get_pubkey_hash</referencedby>
        <referencedby refid="group__libssh__session_1ga839a93298aeff85adbaf4db815b58730" compoundref="session_8c" startline="1084" endline="1087">ssh_get_publickey</referencedby>
        <referencedby refid="examples__common_8h_1ad5d8ab97d3635ecaf8fa78225cb960fb" compoundref="examples_2knownhosts_8c" startline="35" endline="117">verify_knownhost</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga839a93298aeff85adbaf4db815b58730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_publickey</definition>
        <argsstring>(ssh_session session, ssh_key *key)</argsstring>
        <name>ssh_get_publickey</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__libssh__session_1ga5342eefee0497636e9657c968e106782" kindref="member">ssh_get_server_publickey()</ref> </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="1084" column="5" bodyfile="src/session.c" bodystart="1084" bodyend="1087"/>
        <references refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" compoundref="torture__crypto_8c" startline="9">key</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__session_1ga5342eefee0497636e9657c968e106782" compoundref="session_8c" startline="1062" endline="1079">ssh_get_server_publickey</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga7a7b16a4bed6d8d58f10bdb269172ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_publickey_hash</definition>
        <argsstring>(const ssh_key key, enum ssh_publickey_hash_type type, unsigned char **hash, size_t *hlen)</argsstring>
        <name>ssh_get_publickey_hash</name>
        <param>
          <type>const <ref refid="libssh_8h_1a7e8a3aee44db4899c088577a8db5dcfa" kindref="member">ssh_key</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>enum <ref refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8" kindref="member">ssh_publickey_hash_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>hlen</declname>
        </param>
        <briefdescription>
<para>Allocates a buffer with the hash of the public key. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows you to get a hash of the public key. You can then print this hash in a human-readable form to the user so that he is able to verify it. Use <ref refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" kindref="member">ssh_get_hexa()</ref> or <ref refid="group__libssh__session_1ga93e85883ddac5198ed590e36eef4dc3b" kindref="member">ssh_print_hash()</ref> to display it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The public key to create the hash for.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the hash you want.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the allocated buffer. It can be freed using <ref refid="group__libssh__session_1ga07827fd70a51ddc4030364f220eb4c9c" kindref="member">ssh_clean_pubkey_hash()</ref>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hlen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the hash.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 if an error occured.</para>
</simplesect>
<simplesect kind="warning"><para>It is very important that you verify at some moment that the hash matches a known server. If you don&apos;t do it, cryptography wont help you at making things secure. OpenSSH uses SHA256 to print public key digests.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga958fdd1aedcd85a5c496c0aa22362d34" kindref="member">ssh_session_update_known_hosts()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__misc_1ga6ebcfc53884fdc5afb1607c94f8007d4" kindref="member">ssh_get_hexa()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga93e85883ddac5198ed590e36eef4dc3b" kindref="member">ssh_print_hash()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga07827fd70a51ddc4030364f220eb4c9c" kindref="member">ssh_clean_pubkey_hash()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="1117" column="5" bodyfile="src/session.c" bodystart="1117" bodyend="1219"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="torture__crypto_8c_1a42363914b961236c71004e83b3b66a1b" compoundref="torture__crypto_8c" startline="9">key</references>
        <references refid="libssh_8h_1ae1ccf1a4af3f69b0f73113109de28a90" compoundref="libssh_8h" startline="279">MD5_DIGEST_LEN</references>
        <references refid="wrapper_8h_1a03fc66bb771519f69a5a19c65c87d69e">md5_final</references>
        <references refid="wrapper_8h_1ae89783901ebac520286020a4f0586ee5">md5_init</references>
        <references refid="wrapper_8h_1aad8f8cb0fa94280b84f40f09288ad44e">md5_update</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="wrapper_8h_1a12807e522a1bc08649a75dedc52e3c8e">sha1_final</references>
        <references refid="wrapper_8h_1aaa356855efc0e302d70d5c6d5a0afdb2">sha1_init</references>
        <references refid="wrapper_8h_1a9122cd0a3877f98f203e37f2a8f24b06">sha1_update</references>
        <references refid="wrapper_8h_1abb61e25e539f07b3b2a9e9a9b78dad2e">sha256_final</references>
        <references refid="wrapper_8h_1a50c68215312562fbbaf194bb850a08da">sha256_init</references>
        <references refid="wrapper_8h_1a5a746a5d9606298ed5adc22b425427dd">sha256_update</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="priv_8h_1aa21fd8a7a609329603b7b16da7939fca" compoundref="priv_8h" startline="240">SSH_LOG</references>
        <references refid="libssh_8h_1ab3c2f1accd58d32987f02d8aebdc1fc4" compoundref="libssh_8h" startline="370">SSH_LOG_WARN</references>
        <references refid="group__libssh__pki_1gaadeaf6dc35e99214de0af82c3c431649" compoundref="pki_8c" startline="2030" endline="2046">ssh_pki_export_pubkey_blob</references>
        <references refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8a529e17d4f7164a7a9749a24cd379a4ab" compoundref="libssh_8h" startline="549">SSH_PUBLICKEY_HASH_MD5</references>
        <references refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8ac8948180276bd61b39889c3fe85577b0" compoundref="libssh_8h" startline="548">SSH_PUBLICKEY_HASH_SHA1</references>
        <references refid="libssh_8h_1a259d7cf33d738bfbc221aeac362c84c8a5832252a30ef599cc76d8c4671cd85e3" compoundref="libssh_8h" startline="550">SSH_PUBLICKEY_HASH_SHA256</references>
        <references refid="libssh_8h_1aca901aa97257413ddf60ef74ff2bf7a6">ssh_string_data</references>
        <references refid="libssh_8h_1a5bc8710c8633117ff449d15489fca051" compoundref="libssh_8h" startline="790">SSH_STRING_FREE</references>
        <references refid="libssh_8h_1aad7b2fc092973a478df54a40af69abf2">ssh_string_len</references>
        <referencedby refid="torture__hashes_8c_1aa4c244cbfaefd1313f9875c4e137c4a0" compoundref="torture__hashes_8c" startline="52" endline="79">torture_md5_hash</referencedby>
        <referencedby refid="torture__hashes_8c_1ae6a089b8a29d47bb83feb13b577f7e21" compoundref="torture__hashes_8c" startline="81" endline="98">torture_sha1_hash</referencedby>
        <referencedby refid="torture__hashes_8c_1a7d6d03a2483bbfd42a521edea581044b" compoundref="torture__hashes_8c" startline="120" endline="142">torture_sha256_fingerprint</referencedby>
        <referencedby refid="torture__hashes_8c_1aae6590b5c29c9ce2e9b20d9893cd5c7e" compoundref="torture__hashes_8c" startline="100" endline="118">torture_sha256_hash</referencedby>
        <referencedby refid="examples__common_8h_1ad5d8ab97d3635ecaf8fa78225cb960fb" compoundref="examples_2knownhosts_8c" startline="35" endline="117">verify_knownhost</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__libssh__session_1gaf973d65853ac2ac2b0eb78b48c51e925" prot="public" static="no">
        <name>KNOWNHOSTS_MAXTYPES</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="567" column="9" bodyfile="src/known_hosts.c" bodystart="567" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions that manage a session. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
