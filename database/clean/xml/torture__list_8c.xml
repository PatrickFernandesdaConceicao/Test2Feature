<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="torture__list_8c" kind="file" language="C++">
    <compoundname>torture_list.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="torture_8h" local="yes">torture.h</includes>
    <includes refid="error_8c" local="yes">error.c</includes>
    <includes refid="misc_8c" local="yes">misc.c</includes>
    <incdepgraph>
      <node id="46">
        <label>sys/stat.h</label>
      </node>
      <node id="27">
        <label>libssh/packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="16">
        <label>sys/select.h</label>
      </node>
      <node id="42">
        <label>netinet/in.h</label>
      </node>
      <node id="43">
        <label>arpa/inet.h</label>
      </node>
      <node id="9">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>setjmp.h</label>
      </node>
      <node id="3">
        <label>torture.h</label>
        <link refid="torture_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libssh/misc.h</label>
        <link refid="misc_8h"/>
      </node>
      <node id="44">
        <label>errno.h</label>
      </node>
      <node id="23">
        <label>torture_cmocka.h</label>
        <link refid="torture__cmocka_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/unittests/torture_list.c</label>
        <link refid="torture__list_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libssh/sftp.h</label>
        <link refid="sftp_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>netdb.h</label>
      </node>
      <node id="39">
        <label>misc.c</label>
        <link refid="misc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>limits.h</label>
      </node>
      <node id="26">
        <label>libssh/kex.h</label>
        <link refid="kex_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libssh/libmbedcrypto.h</label>
        <link refid="libmbedcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libssh/channels.h</label>
        <link refid="channels_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/types.h</label>
      </node>
      <node id="30">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
      <node id="35">
        <label>libssh/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>error.c</label>
        <link refid="error_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>time.h</label>
      </node>
      <node id="22">
        <label>cmocka.h</label>
      </node>
      <node id="13">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ctype.h</label>
      </node>
      <node id="28">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="41">
        <label>sys/socket.h</label>
      </node>
      <node id="40">
        <label>pwd.h</label>
      </node>
      <node id="33">
        <label>libssh/auth.h</label>
        <link refid="auth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tests_config.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="24">
        <label>libssh/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="torture__list_8c_1a2e84c73592c2992fdc0b2593524f3b18" prot="public" static="no">
        <name>LIBSSH_STATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_list.c" line="3" column="9" bodyfile="tests/unittests/torture_list.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_ssh_list_new</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_ssh_list_new</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_list.c" line="9" column="13" bodyfile="tests/unittests/torture_list.c" bodystart="9" bodyend="23"/>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" compoundref="misc_8c" startline="703" endline="713">ssh_list_count</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <referencedby refid="torture__list_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__list_8c" startline="118" endline="131">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_ssh_list_append</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_ssh_list_append</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_list.c" line="25" column="13" bodyfile="tests/unittests/torture_list.c" bodystart="25" bodyend="70"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" compoundref="misc_8c" startline="703" endline="713">ssh_list_count</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <referencedby refid="torture__list_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__list_8c" startline="118" endline="131">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_ssh_list_prepend</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_ssh_list_prepend</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_list.c" line="72" column="13" bodyfile="tests/unittests/torture_list.c" bodystart="72" bodyend="116"/>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" compoundref="misc_8h" startline="41">ssh_list::end</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" compoundref="misc_8h" startline="40">ssh_list::root</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" compoundref="misc_8c" startline="703" endline="713">ssh_list_count</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <references refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" compoundref="misc_8c" startline="747" endline="769">ssh_list_prepend</references>
        <referencedby refid="torture__list_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__list_8c" startline="118" endline="131">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__list_8c_1a18fee75b27727bcf11e18cceef200834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int torture_run_tests</definition>
        <argsstring>(void)</argsstring>
        <name>torture_run_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_list.c" line="118" column="5" bodyfile="tests/unittests/torture_list.c" bodystart="118" bodyend="131"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="group__libssh_1ga94a851d00248acde9cd7da084b491242" compoundref="init_8c" startline="218" endline="220">ssh_finalize</references>
        <references refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" compoundref="init_8c" startline="147" endline="149">ssh_init</references>
        <references refid="torture_8h_1a83a80a48ac2740bea8d15d95aec7e966" compoundref="torture_8h" startline="120">torture_filter_tests</references>
        <references refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" compoundref="torture__list_8c" startline="25" endline="70">torture_ssh_list_append</references>
        <references refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" compoundref="torture__list_8c" startline="9" endline="23">torture_ssh_list_new</references>
        <references refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" compoundref="torture__list_8c" startline="72" endline="116">torture_ssh_list_prepend</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="torture__list_8c_1a2e84c73592c2992fdc0b2593524f3b18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBSSH_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="torture_8h" kindref="compound">torture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8c" kindref="compound">error.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8c" kindref="compound">misc.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" kindref="member">torture_ssh_list_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*xlist;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>state;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>xlist<sp/>=<sp/><ref refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" kindref="member">ssh_list_new</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" kindref="member">ssh_list_count</ref>(xlist),<sp/>0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" kindref="member">ssh_list_free</ref>(xlist);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" kindref="member">torture_ssh_list_append</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*xlist;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>state;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>xlist<sp/>=<sp/><ref refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" kindref="member">ssh_list_new</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" kindref="member">ssh_list_append</ref>(xlist,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" kindref="member">ssh_list_append</ref>(xlist,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" kindref="member">ssh_list_append</ref>(xlist,<sp/></highlight><highlight class="stringliteral">&quot;item3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" kindref="member">ssh_list_count</ref>(xlist),<sp/>3);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" kindref="member">ssh_list_free</ref>(xlist);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" kindref="member">torture_ssh_list_prepend</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*xlist;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>state;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>xlist<sp/>=<sp/><ref refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" kindref="member">ssh_list_new</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" kindref="member">ssh_list_prepend</ref>(xlist,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" kindref="member">ssh_list_append</ref>(xlist,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4" kindref="member">ssh_list_prepend</ref>(xlist,<sp/></highlight><highlight class="stringliteral">&quot;item3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1aa5c28ddda4de879b07646ac9d43015ae" kindref="member">root</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_string_equal((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>xlist-&gt;<ref refid="structssh__list_1adfd591e8780c0e9039dc181579a54946" kindref="member">end</ref>-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref>,<sp/></highlight><highlight class="stringliteral">&quot;item2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="group__libssh__misc_1ga5cd8838fe4ea4b06a2b6729cf89e2415" kindref="member">ssh_list_count</ref>(xlist),<sp/>3);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" kindref="member">ssh_list_free</ref>(xlist);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="torture__list_8c_1a18fee75b27727bcf11e18cceef200834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__list_8c_1a18fee75b27727bcf11e18cceef200834" kindref="member">torture_run_tests</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CMUnitTest<sp/>tests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__list_8c_1a99be327c647edf7744eba2f015d61d40" kindref="member">torture_ssh_list_new</ref>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__list_8c_1ad4ca16c96399e75780cc4b9358c4efa5" kindref="member">torture_ssh_list_append</ref>),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__list_8c_1aa5608b60aa020f0d2f188594c7e189a2" kindref="member">torture_ssh_list_prepend</ref>),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" kindref="member">ssh_init</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="torture_8h_1a83a80a48ac2740bea8d15d95aec7e966" kindref="member">torture_filter_tests</ref>(tests);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>cmocka_run_group_tests(tests,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh_1ga94a851d00248acde9cd7da084b491242" kindref="member">ssh_finalize</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/unittests/torture_list.c"/>
  </compounddef>
</doxygen>
