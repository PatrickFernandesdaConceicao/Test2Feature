<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__libssh__log" kind="group">
    <compoundname>libssh_log</compoundname>
    <title>The SSH logging functions.</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__libssh__log_1gadf764cbdea00d65edcd07bb9953ad2b7" prot="public" static="no" strong="no">
        <type></type>
        <name>@1</name>
        <enumvalue id="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a95c5ce872b66ec03f3336970c1e0a774" prot="public">
          <name>SSH_LOG_NOLOG</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No logging at all </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a12e6bbab0c5a667e259e2f9599a72550" prot="public">
          <name>SSH_LOG_WARNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Only warnings </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a75fa79e63947b66462db977d9b5ae27c" prot="public">
          <name>SSH_LOG_PROTOCOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>High level protocol information </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a6445dfe21592d69d9741d319538b6673" prot="public">
          <name>SSH_LOG_PACKET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lower level protocol infomations, packet level </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1ggadf764cbdea00d65edcd07bb9953ad2b7a926c933f61d1afa64003c1cc66f6a01c" prot="public">
          <name>SSH_LOG_FUNCTIONS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Every function path </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libssh.h" line="340" column="1" bodyfile="include/libssh/libssh.h" bodystart="340" bodyend="356"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__log_1ga04e485696de6a4eb9ba303ef190f6a93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int current_timestring</definition>
        <argsstring>(int hires, char *buf, size_t len)</argsstring>
        <name>current_timestring</name>
        <param>
          <type>int</type>
          <declname>hires</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="54" column="12" bodyfile="src/log.c" bodystart="54" bodyend="78"/>
        <referencedby refid="group__libssh__log_1ga04874b7c2777229ef8ec669886ee10bd" compoundref="log_8c" startline="80" endline="95">ssh_log_stderr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga04874b7c2777229ef8ec669886ee10bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ssh_log_stderr</definition>
        <argsstring>(int verbosity, const char *function, const char *buffer)</argsstring>
        <name>ssh_log_stderr</name>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="80" column="13" bodyfile="src/log.c" bodystart="80" bodyend="95"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="group__libssh__log_1ga04e485696de6a4eb9ba303ef190f6a93" compoundref="log_8c" startline="54" endline="78">current_timestring</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="libssh__scp_8c_1a1bdcfae3209cbd96db35a2ae356fa15e" compoundref="libssh__scp_8c" startline="28">verbosity</references>
        <referencedby refid="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" compoundref="log_8c" startline="97" endline="115">ssh_log_function</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log_function</definition>
        <argsstring>(int verbosity, const char *function, const char *buffer)</argsstring>
        <name>ssh_log_function</name>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="97" column="6" bodyfile="src/log.c" bodystart="97" bodyend="115"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="group__libssh__log_1ga0f795c820547d058dbbfa80cd4fe9a4e" compoundref="log_8c" startline="210" endline="212">ssh_get_log_callback</references>
        <references refid="group__libssh__log_1ga887a1e754cd935b55fea1afb1f718761" compoundref="log_8c" startline="219" endline="226">ssh_get_log_userdata</references>
        <references refid="group__libssh__log_1ga04874b7c2777229ef8ec669886ee10bd" compoundref="log_8c" startline="80" endline="95">ssh_log_stderr</references>
        <references refid="libssh__scp_8c_1a1bdcfae3209cbd96db35a2ae356fa15e" compoundref="libssh__scp_8c" startline="28">verbosity</references>
        <referencedby refid="group__libssh__log_1gac8bd5378e8af9c6af0ebc198ae6dd2ed" compoundref="log_8c" startline="117" endline="130">_ssh_log</referencedby>
        <referencedby refid="group__libssh__error_1ga03ff45cb8af89234c4c83beb6e7a8eab" compoundref="error_8c" startline="53" endline="71">_ssh_set_error</referencedby>
        <referencedby refid="group__libssh__log_1ga0bb252b81e0c497fc559c9e4007cf6c5" compoundref="log_8c" startline="134" endline="147">ssh_log</referencedby>
        <referencedby refid="group__libssh__log_1gacfb35fd4c7d3dafdbbfaa2c255022ddc" compoundref="log_8c" startline="155" endline="169">ssh_log_common</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1gac8bd5378e8af9c6af0ebc198ae6dd2ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ssh_log</definition>
        <argsstring>(int verbosity, const char *function, const char *format,...)</argsstring>
        <name>_ssh_log</name>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="117" column="6" bodyfile="src/log.c" bodystart="117" bodyend="130"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="group__libssh__log_1gad6a0b7b581b12be4e34a110b7312614b" compoundref="log_8c" startline="196" endline="198">ssh_get_log_level</references>
        <references refid="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" compoundref="log_8c" startline="97" endline="115">ssh_log_function</references>
        <references refid="libssh__scp_8c_1a1bdcfae3209cbd96db35a2ae356fa15e" compoundref="libssh__scp_8c" startline="28">verbosity</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga0bb252b81e0c497fc559c9e4007cf6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log</definition>
        <argsstring>(ssh_session session, int verbosity, const char *format,...)</argsstring>
        <name>ssh_log</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="134" column="6" bodyfile="src/log.c" bodystart="134" bodyend="147"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" compoundref="log_8c" startline="97" endline="115">ssh_log_function</references>
        <references refid="libssh__scp_8c_1a1bdcfae3209cbd96db35a2ae356fa15e" compoundref="libssh__scp_8c" startline="28">verbosity</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1gacfb35fd4c7d3dafdbbfaa2c255022ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log_common</definition>
        <argsstring>(struct ssh_common_struct *common, int verbosity, const char *function, const char *format,...)</argsstring>
        <name>ssh_log_common</name>
        <param>
          <type>struct <ref refid="structssh__common__struct" kindref="compound">ssh_common_struct</ref> *</type>
          <declname>common</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="155" column="6" bodyfile="src/log.c" bodystart="155" bodyend="169"/>
        <references refid="benchmarks_8c_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="benchmarks_8c" startline="347">buffer</references>
        <references refid="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" compoundref="log_8c" startline="97" endline="115">ssh_log_function</references>
        <references refid="libssh__scp_8c_1a1bdcfae3209cbd96db35a2ae356fa15e" compoundref="libssh__scp_8c" startline="28">verbosity</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga9719dabb8fab8a3ebeb4dc2ebcd2dd45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_log_level</definition>
        <argsstring>(int level)</argsstring>
        <name>ssh_set_log_level</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set the log level of the library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="181" column="5" bodyfile="src/log.c" bodystart="181" bodyend="189"/>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="log_8c_1ac0d2ce624654577f06bfc160309fd893" compoundref="log_8c" startline="41">ssh_log_level</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="group__libssh__session_1ga93f7f7159893f3ce62c9b178724eff75" compoundref="options_8c" startline="1193" endline="1357">ssh_options_getopt</referencedby>
        <referencedby refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="474" endline="1039">ssh_options_set</referencedby>
        <referencedby refid="torture__bind__config_8c_1aae14cbc2dd158f2e1ecfdc9f1aa55d6f" compoundref="torture__bind__config_8c" startline="1003" endline="1026">torture_bind_config_full</referencedby>
        <referencedby refid="torture__bind__config_8c_1a909a8414c3abed763e5ab60390afdc9f" compoundref="torture__bind__config_8c" startline="1028" endline="1051">torture_bind_config_include</referencedby>
        <referencedby refid="torture__bind__config_8c_1a008ad9570d763d2651600c912191308f" compoundref="torture__bind__config_8c" startline="1053" endline="1077">torture_bind_config_include_recursive</referencedby>
        <referencedby refid="torture__bind__config_8c_1a81eedb503f6484743b4a88120f8ad37b" compoundref="torture__bind__config_8c" startline="548" endline="591">torture_bind_config_loglevel</referencedby>
        <referencedby refid="torture__bind__config_8c_1a82a2ed29819612ece5ffe470b976f2d9" compoundref="torture__bind__config_8c" startline="1105" endline="1129">torture_bind_config_match_all</referencedby>
        <referencedby refid="torture__bind__config_8c_1a1477cd0a87e6ccda05b149982c271e8f" compoundref="torture__bind__config_8c" startline="1209" endline="1233">torture_bind_config_match_corner_cases</referencedby>
        <referencedby refid="torture__bind__config_8c_1aa64721254d50c18ffc49a6fcf87b599f" compoundref="torture__bind__config_8c" startline="1235" endline="1260">torture_bind_config_match_invalid</referencedby>
        <referencedby refid="torture__bind__config_8c_1a1c89c27844b51a4829afbe398326c312" compoundref="torture__bind__config_8c" startline="1183" endline="1207">torture_bind_config_match_not_allowed</referencedby>
        <referencedby refid="torture__bind__config_8c_1a84d654b75b5c8ee7c265461d7d7fe76c" compoundref="torture__bind__config_8c" startline="1131" endline="1155">torture_bind_config_match_twice</referencedby>
        <referencedby refid="torture__bind__config_8c_1a170723ea2ccd8be3893acc126e7eea72" compoundref="torture__bind__config_8c" startline="1157" endline="1181">torture_bind_config_match_unsupported</referencedby>
        <referencedby refid="torture__callbacks_8c_1a417de1456aab235a265edcc4212e890e" compoundref="torture__callbacks_8c" startline="87" endline="106">torture_log_callback</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1gad6a0b7b581b12be4e34a110b7312614b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_log_level</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_log_level</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the log level of the library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the log level. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="196" column="5" bodyfile="src/log.c" bodystart="196" bodyend="198"/>
        <references refid="log_8c_1ac0d2ce624654577f06bfc160309fd893" compoundref="log_8c" startline="41">ssh_log_level</references>
        <referencedby refid="group__libssh__log_1gac8bd5378e8af9c6af0ebc198ae6dd2ed" compoundref="log_8c" startline="117" endline="130">_ssh_log</referencedby>
        <referencedby refid="group__libssh__error_1ga03ff45cb8af89234c4c83beb6e7a8eab" compoundref="error_8c" startline="53" endline="71">_ssh_set_error</referencedby>
        <referencedby refid="torture__bind__config_8c_1a3154d1fd48483fc3337395edb4495ebd" compoundref="torture__bind__config_8c" startline="937" endline="1001">assert_full_bind_config</referencedby>
        <referencedby refid="torture__bind__config_8c_1aae14cbc2dd158f2e1ecfdc9f1aa55d6f" compoundref="torture__bind__config_8c" startline="1003" endline="1026">torture_bind_config_full</referencedby>
        <referencedby refid="torture__bind__config_8c_1a909a8414c3abed763e5ab60390afdc9f" compoundref="torture__bind__config_8c" startline="1028" endline="1051">torture_bind_config_include</referencedby>
        <referencedby refid="torture__bind__config_8c_1a008ad9570d763d2651600c912191308f" compoundref="torture__bind__config_8c" startline="1053" endline="1077">torture_bind_config_include_recursive</referencedby>
        <referencedby refid="torture__bind__config_8c_1a81eedb503f6484743b4a88120f8ad37b" compoundref="torture__bind__config_8c" startline="548" endline="591">torture_bind_config_loglevel</referencedby>
        <referencedby refid="torture__bind__config_8c_1a82a2ed29819612ece5ffe470b976f2d9" compoundref="torture__bind__config_8c" startline="1105" endline="1129">torture_bind_config_match_all</referencedby>
        <referencedby refid="torture__bind__config_8c_1a1477cd0a87e6ccda05b149982c271e8f" compoundref="torture__bind__config_8c" startline="1209" endline="1233">torture_bind_config_match_corner_cases</referencedby>
        <referencedby refid="torture__bind__config_8c_1aa64721254d50c18ffc49a6fcf87b599f" compoundref="torture__bind__config_8c" startline="1235" endline="1260">torture_bind_config_match_invalid</referencedby>
        <referencedby refid="torture__bind__config_8c_1a1c89c27844b51a4829afbe398326c312" compoundref="torture__bind__config_8c" startline="1183" endline="1207">torture_bind_config_match_not_allowed</referencedby>
        <referencedby refid="torture__bind__config_8c_1a84d654b75b5c8ee7c265461d7d7fe76c" compoundref="torture__bind__config_8c" startline="1131" endline="1155">torture_bind_config_match_twice</referencedby>
        <referencedby refid="torture__bind__config_8c_1a170723ea2ccd8be3893acc126e7eea72" compoundref="torture__bind__config_8c" startline="1157" endline="1181">torture_bind_config_match_unsupported</referencedby>
        <referencedby refid="torture__config_8c_1abe1bb761c19cb153ed98178def65678d" compoundref="torture__config_8c" startline="334" endline="362">torture_config_new</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga6accdc08b7d8c4234750ef30c4854b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_log_callback</definition>
        <argsstring>(ssh_logging_callback cb)</argsstring>
        <name>ssh_set_log_callback</name>
        <param>
          <type><ref refid="group__libssh__callbacks_1gab6eedc77c07dde0c6baf9c29e7700a99" kindref="member">ssh_logging_callback</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set the logging callback function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on errror. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="200" column="5" bodyfile="src/log.c" bodystart="200" bodyend="208"/>
        <references refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" compoundref="ssh__client_8c" startline="69">cb</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="log_8c_1a2e058fee04c7f422225c3f9301f4c856" compoundref="log_8c" startline="42">ssh_log_cb</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" compoundref="callbacks_8c" startline="48" endline="68">ssh_set_callbacks</referencedby>
        <referencedby refid="torture__callbacks_8c_1a417de1456aab235a265edcc4212e890e" compoundref="torture__callbacks_8c" startline="87" endline="106">torture_log_callback</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga0f795c820547d058dbbfa80cd4fe9a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__libssh__callbacks_1gab6eedc77c07dde0c6baf9c29e7700a99" kindref="member">ssh_logging_callback</ref></type>
        <definition>ssh_logging_callback ssh_get_log_callback</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_log_callback</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the pointer to the logging callback function. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pointer the the callback or NULL if none set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="210" column="22" bodyfile="src/log.c" bodystart="210" bodyend="212"/>
        <references refid="log_8c_1a2e058fee04c7f422225c3f9301f4c856" compoundref="log_8c" startline="42">ssh_log_cb</references>
        <referencedby refid="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" compoundref="log_8c" startline="97" endline="115">ssh_log_function</referencedby>
        <referencedby refid="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" compoundref="callbacks_8c" startline="48" endline="68">ssh_set_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga887a1e754cd935b55fea1afb1f718761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ssh_get_log_userdata</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_log_userdata</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the userdata of the logging function. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The userdata if set or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="219" column="6" bodyfile="src/log.c" bodystart="219" bodyend="226"/>
        <references refid="log_8c_1a338411cbc92151810d4efc90af2765e5" compoundref="log_8c" startline="43">ssh_log_userdata</references>
        <referencedby refid="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" compoundref="log_8c" startline="97" endline="115">ssh_log_function</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga0addd5c29922f40e9f842a43e0cb0b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_log_userdata</definition>
        <argsstring>(void *data)</argsstring>
        <name>ssh_set_log_userdata</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set the userdata for the logging function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The userdata to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="235" column="5" bodyfile="src/log.c" bodystart="235" bodyend="240"/>
        <references refid="log_8c_1a338411cbc92151810d4efc90af2765e5" compoundref="log_8c" startline="43">ssh_log_userdata</references>
        <referencedby refid="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" compoundref="callbacks_8c" startline="48" endline="68">ssh_set_callbacks</referencedby>
        <referencedby refid="torture__callbacks_8c_1a417de1456aab235a265edcc4212e890e" compoundref="torture__callbacks_8c" startline="87" endline="106">torture_log_callback</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Logging functions for debugging and problem resolving. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
