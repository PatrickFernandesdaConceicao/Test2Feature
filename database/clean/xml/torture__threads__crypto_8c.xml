<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="torture__threads__crypto_8c" kind="file" language="C++">
    <compoundname>torture_threads_crypto.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="torture_8h" local="yes">torture.h</includes>
    <includes refid="crypto_8h" local="yes">libssh/crypto.h</includes>
    <includes local="no">pthread.h</includes>
    <incdepgraph>
      <node id="27">
        <label>libssh/packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="16">
        <label>sys/select.h</label>
      </node>
      <node id="1">
        <label>tests/unittests/torture_threads_crypto.c</label>
        <link refid="torture__threads__crypto_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>setjmp.h</label>
      </node>
      <node id="3">
        <label>torture.h</label>
        <link refid="torture_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libssh/misc.h</label>
        <link refid="misc_8h"/>
      </node>
      <node id="23">
        <label>torture_cmocka.h</label>
        <link refid="torture__cmocka_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>libssh/dh.h</label>
        <link refid="dh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libssh/sftp.h</label>
        <link refid="sftp_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>netdb.h</label>
      </node>
      <node id="40">
        <label>libssh/ecdh.h</label>
        <link refid="ecdh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libssh/kex.h</label>
        <link refid="kex_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libssh/libmbedcrypto.h</label>
        <link refid="libmbedcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libssh/channels.h</label>
        <link refid="channels_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>pthread.h</label>
      </node>
      <node id="15">
        <label>sys/types.h</label>
      </node>
      <node id="30">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
      <node id="38">
        <label>libssh/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>libssh/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cmocka.h</label>
      </node>
      <node id="13">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>libssh/curve25519.h</label>
        <link refid="curve25519_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="33">
        <label>libssh/auth.h</label>
        <link refid="auth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tests_config.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="24">
        <label>libssh/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="torture__threads__crypto_8c_1a2e84c73592c2992fdc0b2593524f3b18" prot="public" static="no">
        <name>LIBSSH_STATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="24" column="9" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="torture__threads__crypto_8c_1a7735206bdfad487588bba2126b806ab7" prot="public" static="no">
        <name>NUM_THREADS</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="31" column="9" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="torture__threads__crypto_8c_1a20fdb572f00a1f6473133a60344f9369" prot="public" static="yes" mutable="no">
        <type>int8_t</type>
        <definition>int8_t key[32]</definition>
        <argsstring>[32]</argsstring>
        <name>key</name>
        <initializer>=
    &quot;\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e&quot;
    &quot;\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d&quot;
    &quot;\x1e\x1f&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="33" column="15" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="33" bodyend="-1"/>
        <referencedby refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" compoundref="torture__threads__crypto_8c" startline="107" endline="176">thread_crypto_aes256_cbc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t IV[16]</definition>
        <argsstring>[16]</argsstring>
        <name>IV</name>
        <initializer>=
    &quot;\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e&quot;
    &quot;\x1f&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="38" column="16" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="38" bodyend="-1"/>
        <referencedby refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" compoundref="torture__threads__crypto_8c" startline="107" endline="176">thread_crypto_aes256_cbc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t cleartext[144]</definition>
        <argsstring>[144]</argsstring>
        <name>cleartext</name>
        <initializer>=
    &quot;\xb4\xfc\x5d\xc2\x49\x8d\x2c\x29\x4a\xc9\x9a\xb0\x1b\xf8\x29&quot;
    &quot;\xee\x85\x6d\x8c\x04\x34\x7c\x65\xf4\x89\x97\xc5\x71\x70\x41&quot;
    &quot;\x91\x40\x19\x60\xe1\xf1\x8f\x4d\x8c\x17\x51\xd6\xbc\x69\x6e&quot;
    &quot;\xf2\x21\x87\x18\x6c\xef\xc4\xf4\xd9\xe6\x1b\x94\xf7\xd8\xb2&quot;
    &quot;\xe9\x24\xb9\xe7\xe6\x19\xf5\xec\x55\x80\x9a\xc8\x7d\x70\xa3&quot;
    &quot;\x50\xf8\x03\x10\x35\x49\x9b\x53\x58\xd7\x4c\xfc\x5f\x02\xd6&quot;
    &quot;\x28\xea\xcc\x43\xee\x5e\x2b\x8a\x7a\x66\xf7\x00\xee\x09\x18&quot;
    &quot;\x30\x1b\x47\xa2\x16\x69\xc4\x6e\x44\x3f\xbd\xec\x52\xce\xe5&quot;
    &quot;\x41\xf2\xe0\x04\x4f\x5a\x55\x58\x37\xba\x45\x8d\x15\x53\xf6&quot;
    &quot;\x31\x91\x13\x8c\x51\xed\x08\x07\xdb&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="42" column="16" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="42" bodyend="-1"/>
        <referencedby refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" compoundref="torture__threads__crypto_8c" startline="107" endline="176">thread_crypto_aes256_cbc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t aes256_cbc_encrypted[144]</definition>
        <argsstring>[144]</argsstring>
        <name>aes256_cbc_encrypted</name>
        <initializer>=
    &quot;\x7f\x1b\x92\xac\xc5\x16\x05\x55\x74\xac\xb4\xe0\x91\x8c\xf8&quot;
    &quot;\x0d\xa9\x72\xa5\x09\xb8\x44\xee\x55\x02\x13\xb7\x52\x0a\xf0&quot;
    &quot;\xac\xd0\x21\x0e\x58\x7b\x34\xfe\xdb\x36\x01\x60\x7d\x18\x3a&quot;
    &quot;\xa9\x15\x18\x5b\x13\xca\xdd\x77\x7d\xdf\x64\xc6\xd5\x75\x4b&quot;
    &quot;\x02\x02\x37\xb1\xf4\x33\xff\x93\xe6\x32\x08\xda\xcb\x5d\xa2&quot;
    &quot;\x8f\x17\x1f\x99\x92\x60\x22\x9d\x6b\xe6\xb2\x5e\xb0\x5d\x26&quot;
    &quot;\x3f\xde\xb8\xc1\xb0\x70\x80\x1c\x00\xd0\x93\x2b\xeb\x0f\xd7&quot;
    &quot;\x70\x7a\x9a\x7a\xa6\x21\x23\x2c\x02\xb7\xcd\x88\x10\x9c\x2d&quot;
    &quot;\x0c\xd3\xfa\xc1\x33\x5b\xe1\xa1\xd4\x3d\x8f\xb8\x50\xc5\xb5&quot;
    &quot;\x72\xdd\x6d\x32\x1f\x58\x00\x48\xbe&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="54" column="16" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="54" bodyend="-1"/>
        <referencedby refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" compoundref="torture__threads__crypto_8c" startline="107" endline="176">thread_crypto_aes256_cbc</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="torture__threads__crypto_8c_1a3cb779afcb88013ed49a6539b94df198" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int run_on_threads</definition>
        <argsstring>(void *(*func)(void *))</argsstring>
        <name>run_on_threads</name>
        <param>
          <type>void *(*)(void *)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="66" column="12" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="66" bodyend="89"/>
        <references refid="torture__threads__crypto_8c_1a7735206bdfad487588bba2126b806ab7" compoundref="torture__threads__crypto_8c" startline="31">NUM_THREADS</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <referencedby refid="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" compoundref="torture__threads__crypto_8c" startline="178" endline="187">torture_crypto_aes256_cbc</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__threads__crypto_8c_1aba563ce4202b7c9f23f28dc39c6a0dd5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_cipher</definition>
        <argsstring>(struct ssh_cipher_struct *cipher, const char *ciphername)</argsstring>
        <name>get_cipher</name>
        <param>
          <type>struct <ref refid="structssh__cipher__struct" kindref="compound">ssh_cipher_struct</ref> *</type>
          <declname>cipher</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ciphername</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="91" column="12" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="91" bodyend="105"/>
        <references refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" compoundref="samplesshd-kbdint_8c" startline="186">name</references>
        <references refid="structssh__cipher__struct_1a089a6f759557c29ef49a1436081ff081" compoundref="crypto_8h" startline="158">ssh_cipher_struct::name</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="wrapper_8h_1aa8c597bf12b9fae942c265c6c8c5569d">ssh_get_ciphertab</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" compoundref="torture__threads__crypto_8c" startline="107" endline="176">thread_crypto_aes256_cbc</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* thread_crypto_aes256_cbc</definition>
        <argsstring>(void *threadid)</argsstring>
        <name>thread_crypto_aes256_cbc</name>
        <param>
          <type>void *</type>
          <declname>threadid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="107" column="13" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="107" bodyend="176"/>
        <references refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" compoundref="torture__threads__crypto_8c" startline="54">aes256_cbc_encrypted</references>
        <references refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" compoundref="torture__threads__crypto_8c" startline="42">cleartext</references>
        <references refid="structssh__cipher__struct_1a6f5ac62ef491ca0caa5950573d344e3d" compoundref="crypto_8h" startline="195">ssh_cipher_struct::decrypt</references>
        <references refid="structssh__cipher__struct_1aa955d6daf4f41262765ab93b52fc2508" compoundref="crypto_8h" startline="191">ssh_cipher_struct::encrypt</references>
        <references refid="torture__threads__crypto_8c_1aba563ce4202b7c9f23f28dc39c6a0dd5" compoundref="torture__threads__crypto_8c" startline="91" endline="105">get_cipher</references>
        <references refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" compoundref="torture__threads__crypto_8c" startline="38">IV</references>
        <references refid="torture__packet_8c_1ab8dc41e9c81185c146b1c99da4c5deaa" compoundref="torture__packet_8c" startline="20">iv</references>
        <references refid="torture__threads__crypto_8c_1a20fdb572f00a1f6473133a60344f9369" compoundref="torture__threads__crypto_8c" startline="33">key</references>
        <references refid="structssh__cipher__struct_1a089a6f759557c29ef49a1436081ff081" compoundref="crypto_8h" startline="158">ssh_cipher_struct::name</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__cipher__struct_1a0d68a1551beb7cfc87dafc4baa55afc4" compoundref="crypto_8h" startline="190">ssh_cipher_struct::set_decrypt_key</references>
        <references refid="structssh__cipher__struct_1a8da59bd29bd79509cb37e0fa20fb91ac" compoundref="crypto_8h" startline="189">ssh_cipher_struct::set_encrypt_key</references>
        <references refid="wrapper_8h_1a1e2cfae9bf8e464629791db0e415fac0" compoundref="wrapper_8c" startline="122" endline="143">ssh_cipher_clear</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <referencedby refid="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" compoundref="torture__threads__crypto_8c" startline="178" endline="187">torture_crypto_aes256_cbc</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_crypto_aes256_cbc</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_crypto_aes256_cbc</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="178" column="13" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="178" bodyend="187"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__threads__crypto_8c_1a3cb779afcb88013ed49a6539b94df198" compoundref="torture__threads__crypto_8c" startline="66" endline="89">run_on_threads</references>
        <references refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" compoundref="torture__threads__crypto_8c" startline="107" endline="176">thread_crypto_aes256_cbc</references>
        <referencedby refid="torture__threads__crypto_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__threads__crypto_8c" startline="189" endline="205">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__threads__crypto_8c_1a18fee75b27727bcf11e18cceef200834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int torture_run_tests</definition>
        <argsstring>(void)</argsstring>
        <name>torture_run_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Expect fail on these negative test cases</para>
        </inbodydescription>
        <location file="tests/unittests/torture_threads_crypto.c" line="189" column="5" bodyfile="tests/unittests/torture_threads_crypto.c" bodystart="189" bodyend="205"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="group__libssh_1ga94a851d00248acde9cd7da084b491242" compoundref="init_8c" startline="218" endline="220">ssh_finalize</references>
        <references refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" compoundref="init_8c" startline="147" endline="149">ssh_init</references>
        <references refid="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" compoundref="torture__threads__crypto_8c" startline="178" endline="187">torture_crypto_aes256_cbc</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>SSH<sp/>Library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>by<sp/>Anderson<sp/>Toshiyuki<sp/>Sasaki<sp/>&lt;ansasaki@redhat.com&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>the<sp/>SSH<sp/>Library;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="torture__threads__crypto_8c_1a2e84c73592c2992fdc0b2593524f3b18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBSSH_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="torture_8h" kindref="compound">torture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="crypto_8h" kindref="compound">libssh/crypto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="torture__threads__crypto_8c_1a7735206bdfad487588bba2126b806ab7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_THREADS<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="torture__threads__crypto_8c_1a20fdb572f00a1f6473133a60344f9369" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/><ref refid="torture__threads__crypto_8c_1a20fdb572f00a1f6473133a60344f9369" kindref="member">key</ref>[32]<sp/>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x1e\x1f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" kindref="member">IV</ref>[16]<sp/>=</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x1f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" kindref="member">cleartext</ref>[144]<sp/>=</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\xb4\xfc\x5d\xc2\x49\x8d\x2c\x29\x4a\xc9\x9a\xb0\x1b\xf8\x29&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\xee\x85\x6d\x8c\x04\x34\x7c\x65\xf4\x89\x97\xc5\x71\x70\x41&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x91\x40\x19\x60\xe1\xf1\x8f\x4d\x8c\x17\x51\xd6\xbc\x69\x6e&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\xf2\x21\x87\x18\x6c\xef\xc4\xf4\xd9\xe6\x1b\x94\xf7\xd8\xb2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\xe9\x24\xb9\xe7\xe6\x19\xf5\xec\x55\x80\x9a\xc8\x7d\x70\xa3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x50\xf8\x03\x10\x35\x49\x9b\x53\x58\xd7\x4c\xfc\x5f\x02\xd6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x28\xea\xcc\x43\xee\x5e\x2b\x8a\x7a\x66\xf7\x00\xee\x09\x18&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x30\x1b\x47\xa2\x16\x69\xc4\x6e\x44\x3f\xbd\xec\x52\xce\xe5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x41\xf2\xe0\x04\x4f\x5a\x55\x58\x37\xba\x45\x8d\x15\x53\xf6&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x31\x91\x13\x8c\x51\xed\x08\x07\xdb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" kindref="member">aes256_cbc_encrypted</ref>[144]<sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x7f\x1b\x92\xac\xc5\x16\x05\x55\x74\xac\xb4\xe0\x91\x8c\xf8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x0d\xa9\x72\xa5\x09\xb8\x44\xee\x55\x02\x13\xb7\x52\x0a\xf0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\xac\xd0\x21\x0e\x58\x7b\x34\xfe\xdb\x36\x01\x60\x7d\x18\x3a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\xa9\x15\x18\x5b\x13\xca\xdd\x77\x7d\xdf\x64\xc6\xd5\x75\x4b&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x02\x02\x37\xb1\xf4\x33\xff\x93\xe6\x32\x08\xda\xcb\x5d\xa2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x8f\x17\x1f\x99\x92\x60\x22\x9d\x6b\xe6\xb2\x5e\xb0\x5d\x26&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x3f\xde\xb8\xc1\xb0\x70\x80\x1c\x00\xd0\x93\x2b\xeb\x0f\xd7&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x70\x7a\x9a\x7a\xa6\x21\x23\x2c\x02\xb7\xcd\x88\x10\x9c\x2d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x0c\xd3\xfa\xc1\x33\x5b\xe1\xa1\xd4\x3d\x8f\xb8\x50\xc5\xb5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\x72\xdd\x6d\x32\x1f\x58\x00\x48\xbe&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="torture__threads__crypto_8c_1a3cb779afcb88013ed49a6539b94df198" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__threads__crypto_8c_1a3cb779afcb88013ed49a6539b94df198" kindref="member">run_on_threads</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>threads[<ref refid="torture__threads__crypto_8c_1a7735206bdfad487588bba2126b806ab7" kindref="member">NUM_THREADS</ref>];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="torture__threads__crypto_8c_1a7735206bdfad487588bba2126b806ab7" kindref="member">NUM_THREADS</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>pthread_create(&amp;threads[i],<sp/>NULL,<sp/>func,<sp/>NULL);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="torture__threads__crypto_8c_1a7735206bdfad487588bba2126b806ab7" kindref="member">NUM_THREADS</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>*result;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>pthread_join(threads[i],<sp/>&amp;p);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(uint64_t<sp/>*)p;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert_null(result);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="torture__threads__crypto_8c_1aba563ce4202b7c9f23f28dc39c6a0dd5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__threads__crypto_8c_1aba563ce4202b7c9f23f28dc39c6a0dd5" kindref="member">get_cipher</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__cipher__struct" kindref="compound">ssh_cipher_struct</ref><sp/>*cipher,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ciphername)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__cipher__struct" kindref="compound">ssh_cipher_struct</ref><sp/>*ciphers<sp/>=<sp/><ref refid="wrapper_8h_1aa8c597bf12b9fae942c265c6c8c5569d" kindref="member">ssh_get_ciphertab</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>cmp;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>ciphers[i].<ref refid="structssh__cipher__struct_1a089a6f759557c29ef49a1436081ff081" kindref="member">name</ref><sp/>!=<sp/>NULL;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp<sp/>=<sp/>strcmp(ciphername,<sp/>ciphers[i].<ref refid="samplesshd-kbdint_8c_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(cipher,<sp/>&amp;ciphers[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*cipher));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" kindref="member">thread_crypto_aes256_cbc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*threadid)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>output[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" kindref="member">cleartext</ref>)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="torture__packet_8c_1ab8dc41e9c81185c146b1c99da4c5deaa" kindref="member">iv</ref>[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__cipher__struct" kindref="compound">ssh_cipher_struct</ref><sp/>cipher<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structssh__cipher__struct_1a089a6f759557c29ef49a1436081ff081" kindref="member">name</ref><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unused<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>threadid;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="torture__threads__crypto_8c_1aba563ce4202b7c9f23f28dc39c6a0dd5" kindref="member">get_cipher</ref>(&amp;cipher,<sp/></highlight><highlight class="stringliteral">&quot;aes256-cbc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(cipher.<ref refid="structssh__cipher__struct_1a8da59bd29bd79509cb37e0fa20fb91ac" kindref="member">set_encrypt_key</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(cipher.<ref refid="structssh__cipher__struct_1aa955d6daf4f41262765ab93b52fc2508" kindref="member">encrypt</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>for<sp/>dump<sp/>static<sp/>analizyer<sp/>without<sp/>modelling<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cipher.<ref refid="structssh__cipher__struct_1a8da59bd29bd79509cb37e0fa20fb91ac" kindref="member">set_encrypt_key</ref><sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cipher.<ref refid="structssh__cipher__struct_1aa955d6daf4f41262765ab93b52fc2508" kindref="member">encrypt</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="torture__packet_8c_1ab8dc41e9c81185c146b1c99da4c5deaa" kindref="member">iv</ref>,<sp/><ref refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" kindref="member">IV</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" kindref="member">IV</ref>));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>cipher.<ref refid="structssh__cipher__struct_1a8da59bd29bd79509cb37e0fa20fb91ac" kindref="member">set_encrypt_key</ref>(&amp;cipher,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__threads__crypto_8c_1a20fdb572f00a1f6473133a60344f9369" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__packet_8c_1ab8dc41e9c81185c146b1c99da4c5deaa" kindref="member">iv</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>cipher.<ref refid="structssh__cipher__struct_1aa955d6daf4f41262765ab93b52fc2508" kindref="member">encrypt</ref>(&amp;cipher,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" kindref="member">cleartext</ref>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" kindref="member">cleartext</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(output,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" kindref="member">aes256_cbc_encrypted</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" kindref="member">aes256_cbc_encrypted</ref>));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wrapper_8h_1a1e2cfae9bf8e464629791db0e415fac0" kindref="member">ssh_cipher_clear</ref>(&amp;cipher);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="torture__threads__crypto_8c_1aba563ce4202b7c9f23f28dc39c6a0dd5" kindref="member">get_cipher</ref>(&amp;cipher,<sp/></highlight><highlight class="stringliteral">&quot;aes256-cbc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(cipher.<ref refid="structssh__cipher__struct_1a8da59bd29bd79509cb37e0fa20fb91ac" kindref="member">set_encrypt_key</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(cipher.<ref refid="structssh__cipher__struct_1aa955d6daf4f41262765ab93b52fc2508" kindref="member">encrypt</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>for<sp/>dump<sp/>static<sp/>analizyer<sp/>without<sp/>modelling<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cipher.<ref refid="structssh__cipher__struct_1a8da59bd29bd79509cb37e0fa20fb91ac" kindref="member">set_encrypt_key</ref><sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cipher.<ref refid="structssh__cipher__struct_1aa955d6daf4f41262765ab93b52fc2508" kindref="member">encrypt</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="torture__packet_8c_1ab8dc41e9c81185c146b1c99da4c5deaa" kindref="member">iv</ref>,<sp/><ref refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" kindref="member">IV</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1ae9b145408effbad6400533a736404baf" kindref="member">IV</ref>));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>cipher.<ref refid="structssh__cipher__struct_1a0d68a1551beb7cfc87dafc4baa55afc4" kindref="member">set_decrypt_key</ref>(&amp;cipher,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__threads__crypto_8c_1a20fdb572f00a1f6473133a60344f9369" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__packet_8c_1ab8dc41e9c81185c146b1c99da4c5deaa" kindref="member">iv</ref></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(output,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(output));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>cipher.<ref refid="structssh__cipher__struct_1a6f5ac62ef491ca0caa5950573d344e3d" kindref="member">decrypt</ref>(&amp;cipher,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" kindref="member">aes256_cbc_encrypted</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1af0cb1032892214a48d2c25eae1f3301b" kindref="member">aes256_cbc_encrypted</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_memory_equal(output,<sp/><ref refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" kindref="member">cleartext</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="torture__threads__crypto_8c_1af909c2809fdc9ac07af44427c7bdcfdd" kindref="member">cleartext</ref>));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wrapper_8h_1a1e2cfae9bf8e464629791db0e415fac0" kindref="member">ssh_cipher_clear</ref>(&amp;cipher);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_exit(NULL);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" kindref="member">torture_crypto_aes256_cbc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unused<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>state;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="torture__threads__crypto_8c_1a3cb779afcb88013ed49a6539b94df198" kindref="member">run_on_threads</ref>(<ref refid="torture__threads__crypto_8c_1a10ff31741221cd8e55f0139b2cecbf40" kindref="member">thread_crypto_aes256_cbc</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="torture__threads__crypto_8c_1a18fee75b27727bcf11e18cceef200834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__threads__crypto_8c_1a18fee75b27727bcf11e18cceef200834" kindref="member">torture_run_tests</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CMUnitTest<sp/>tests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test(<ref refid="torture__threads__crypto_8c_1a7a61a8925d5b85bfcbb84effd428e308" kindref="member">torture_crypto_aes256_cbc</ref>),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>library<sp/>is<sp/>statically<sp/>linked,<sp/>ssh_init()<sp/>is<sp/>not<sp/>called</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>automatically</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" kindref="member">ssh_init</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>cmocka_run_group_tests(tests,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh_1ga94a851d00248acde9cd7da084b491242" kindref="member">ssh_finalize</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/unittests/torture_threads_crypto.c"/>
  </compounddef>
</doxygen>
