<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="torture__temp__file_8c" kind="file" language="C++">
    <compoundname>torture_temp_file.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="torture_8h" local="yes">torture.h</includes>
    <incdepgraph>
      <node id="27">
        <label>libssh/packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdarg.h</label>
      </node>
      <node id="16">
        <label>sys/select.h</label>
      </node>
      <node id="9">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="11">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>setjmp.h</label>
      </node>
      <node id="3">
        <label>torture.h</label>
        <link refid="torture_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libssh/misc.h</label>
        <link refid="misc_8h"/>
      </node>
      <node id="23">
        <label>torture_cmocka.h</label>
        <link refid="torture__cmocka_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libssh/sftp.h</label>
        <link refid="sftp_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="17">
        <label>netdb.h</label>
      </node>
      <node id="26">
        <label>libssh/kex.h</label>
        <link refid="kex_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libssh/libmbedcrypto.h</label>
        <link refid="libmbedcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>libssh/channels.h</label>
        <link refid="channels_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sys/types.h</label>
      </node>
      <node id="30">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
      <node id="35">
        <label>libssh/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/unittests/torture_temp_file.c</label>
        <link refid="torture__temp__file_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cmocka.h</label>
      </node>
      <node id="13">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="33">
        <label>libssh/auth.h</label>
        <link refid="auth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tests_config.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="24">
        <label>libssh/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="torture__temp__file_8c_1a2e84c73592c2992fdc0b2593524f3b18" prot="public" static="no">
        <name>LIBSSH_STATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_temp_file.c" line="4" column="10" bodyfile="tests/unittests/torture_temp_file.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="torture__temp__file_8c_1a7754458bf89dfc6c0c5e24b58ca9db0f" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char template[]</definition>
        <argsstring>[]</argsstring>
        <name>template</name>
        <initializer>= &quot;temp_file_XXXXXX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_temp_file.c" line="6" column="12" bodyfile="tests/unittests/torture_temp_file.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="torture__temp__file_8c_1ab3743688c369a6a63ebea4512080e9fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int setup</definition>
        <argsstring>(void **state)</argsstring>
        <name>setup</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_temp_file.c" line="8" column="12" bodyfile="tests/unittests/torture_temp_file.c" bodystart="8" bodyend="18"/>
        <references refid="torture_8c_1accf37ea96fb94389a625cb4d7ccdea2b" compoundref="torture_8c" startline="999" endline="1029">torture_create_temp_file</references>
        <referencedby refid="torture__temp__file_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__temp__file_8c" startline="51" endline="62">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__temp__file_8c_1a199383cdaf56acd2611400b9bb125142" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int teardown</definition>
        <argsstring>(void **state)</argsstring>
        <name>teardown</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_temp_file.c" line="20" column="12" bodyfile="tests/unittests/torture_temp_file.c" bodystart="20" bodyend="33"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <referencedby refid="torture__temp__file_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__temp__file_8c" startline="51" endline="62">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__temp__file_8c_1a145552860276dfa60b10675e37f7be76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void torture_temp_file</definition>
        <argsstring>(void **state)</argsstring>
        <name>torture_temp_file</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unittests/torture_temp_file.c" line="36" column="13" bodyfile="tests/unittests/torture_temp_file.c" bodystart="36" bodyend="49"/>
        <referencedby refid="torture__temp__file_8c_1a18fee75b27727bcf11e18cceef200834" compoundref="torture__temp__file_8c" startline="51" endline="62">torture_run_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="torture__temp__file_8c_1a18fee75b27727bcf11e18cceef200834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int torture_run_tests</definition>
        <argsstring>(void)</argsstring>
        <name>torture_run_tests</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Expect fail on these negative test cases</para>
        </inbodydescription>
        <location file="tests/unittests/torture_temp_file.c" line="51" column="5" bodyfile="tests/unittests/torture_temp_file.c" bodystart="51" bodyend="62"/>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="torture__temp__file_8c_1ab3743688c369a6a63ebea4512080e9fe" compoundref="torture__temp__file_8c" startline="8" endline="18">setup</references>
        <references refid="torture__temp__file_8c_1a199383cdaf56acd2611400b9bb125142" compoundref="torture__temp__file_8c" startline="20" endline="33">teardown</references>
        <references refid="torture_8h_1a83a80a48ac2740bea8d15d95aec7e966" compoundref="torture_8h" startline="120">torture_filter_tests</references>
        <references refid="torture__temp__file_8c_1a145552860276dfa60b10675e37f7be76" compoundref="torture__temp__file_8c" startline="36" endline="49">torture_temp_file</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="torture_8h" kindref="compound">torture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="torture__temp__file_8c_1a2e84c73592c2992fdc0b2593524f3b18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBSSH_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="torture__temp__file_8c_1a7754458bf89dfc6c0c5e24b58ca9db0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;temp_file_XXXXXX&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="torture__temp__file_8c_1ab3743688c369a6a63ebea4512080e9fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__temp__file_8c_1ab3743688c369a6a63ebea4512080e9fe" kindref="member">setup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>file_name<sp/><sp/>=<sp/><ref refid="torture_8c_1accf37ea96fb94389a625cb4d7ccdea2b" kindref="member">torture_create_temp_file</ref>(</highlight><highlight class="keyword">template</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(file_name);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)file_name;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="torture__temp__file_8c_1a199383cdaf56acd2611400b9bb125142" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__temp__file_8c_1a199383cdaf56acd2611400b9bb125142" kindref="member">teardown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name<sp/>=<sp/>*((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)state);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(file_name);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>unlink(file_name);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(file_name);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="torture__temp__file_8c_1a145552860276dfa60b10675e37f7be76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="torture__temp__file_8c_1a145552860276dfa60b10675e37f7be76" kindref="member">torture_temp_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name<sp/>=<sp/>*((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)state);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(file_name);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(file_name,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(fp);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Created<sp/>temp<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>file_name);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="torture__temp__file_8c_1a18fee75b27727bcf11e18cceef200834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="torture__temp__file_8c_1a18fee75b27727bcf11e18cceef200834" kindref="member">torture_run_tests</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CMUnitTest<sp/>tests[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmocka_unit_test_setup_teardown(<ref refid="torture__temp__file_8c_1a145552860276dfa60b10675e37f7be76" kindref="member">torture_temp_file</ref>,<sp/><ref refid="torture__temp__file_8c_1ab3743688c369a6a63ebea4512080e9fe" kindref="member">setup</ref>,<sp/><ref refid="torture__temp__file_8c_1a199383cdaf56acd2611400b9bb125142" kindref="member">teardown</ref>),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="torture_8h_1a83a80a48ac2740bea8d15d95aec7e966" kindref="member">torture_filter_tests</ref>(tests);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>cmocka_run_group_tests(tests,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/unittests/torture_temp_file.c"/>
  </compounddef>
</doxygen>
