<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="poll_8c" kind="file" language="C++">
    <compoundname>poll.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="libssh_8h" local="yes">libssh/libssh.h</includes>
    <includes refid="poll_8h" local="yes">libssh/poll.h</includes>
    <includes refid="socket_8h" local="yes">libssh/socket.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <includes refid="misc_8h" local="yes">libssh/misc.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">sys/select.h</includes>
    <includes local="no">sys/socket.h</includes>
    <incdepgraph>
      <node id="21">
        <label>libssh/packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stdbool.h</label>
      </node>
      <node id="12">
        <label>sys/select.h</label>
      </node>
      <node id="5">
        <label>libssh/priv.h</label>
        <link refid="priv_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h"/>
      </node>
      <node id="7">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="29">
        <label>libssh/misc.h</label>
        <link refid="misc_8h"/>
      </node>
      <node id="3">
        <label>errno.h</label>
      </node>
      <node id="17">
        <label>libssh/socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>netdb.h</label>
      </node>
      <node id="20">
        <label>libssh/kex.h</label>
        <link refid="kex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libssh/libmbedcrypto.h</label>
        <link refid="libmbedcrypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>libssh/channels.h</label>
        <link refid="channels_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/types.h</label>
      </node>
      <node id="1">
        <label>src/poll.c</label>
        <link refid="poll_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
      <node id="16">
        <label>libssh/poll.h</label>
        <link refid="poll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="30">
        <label>sys/socket.h</label>
      </node>
      <node id="27">
        <label>libssh/auth.h</label>
        <link refid="auth_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libssh/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structssh__poll__handle__struct" prot="public">ssh_poll_handle_struct</innerclass>
    <innerclass refid="structssh__poll__ctx__struct" prot="public">ssh_poll_ctx_struct</innerclass>
    <innerclass refid="structssh__event__fd__wrapper" prot="public">ssh_event_fd_wrapper</innerclass>
    <innerclass refid="structssh__event__struct" prot="public">ssh_event_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="poll_8c_1a43368aeb32c3f9d274961b95d6fef110" prot="public" static="no">
        <name>SSH_POLL_CTX_CHUNK</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="43" column="9" bodyfile="src/poll.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__libssh__poll_1ga3cb7d4c185d70c6a2e2b9696ef125fd4" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* poll_fn) (ssh_pollfd_t *, nfds_t, int)</definition>
        <argsstring>)(ssh_pollfd_t *, nfds_t, int)</argsstring>
        <name>poll_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="101" column="9" bodyfile="src/poll.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" prot="public" static="yes" mutable="no">
        <type><ref refid="group__libssh__poll_1ga3cb7d4c185d70c6a2e2b9696ef125fd4" kindref="member">poll_fn</ref></type>
        <definition>poll_fn ssh_poll_emu</definition>
        <argsstring></argsstring>
        <name>ssh_poll_emu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="102" column="16" bodyfile="src/poll.c" bodystart="102" bodyend="-1"/>
        <referencedby refid="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" compoundref="poll_8c" startline="329" endline="331">ssh_poll</referencedby>
        <referencedby refid="group__libssh__poll_1ga7e60f5f498b15eab57d9b2de70ab1acb" compoundref="poll_8c" startline="325" endline="327">ssh_poll_cleanup</referencedby>
        <referencedby refid="group__libssh__poll_1ga26aa5e00c0201c30dad6ec0e93d3871f" compoundref="poll_8c" startline="321" endline="323">ssh_poll_init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__poll_1gad1b817fc1223fd941f316d2a6f40f52d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool bsd_socket_not_connected</definition>
        <argsstring>(int sock_err)</argsstring>
        <name>bsd_socket_not_connected</name>
        <param>
          <type>int</type>
          <declname>sock_err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="129" column="13" bodyfile="src/poll.c" bodystart="129" bodyend="143"/>
        <referencedby refid="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" compoundref="poll_8c" startline="169" endline="206">bsd_socket_compute_revents</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gae3f76dc3d6879b8e0f1b72a6894c0527" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool bsd_socket_reset</definition>
        <argsstring>(int sock_err)</argsstring>
        <name>bsd_socket_reset</name>
        <param>
          <type>int</type>
          <declname>sock_err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="145" column="13" bodyfile="src/poll.c" bodystart="145" bodyend="167"/>
        <referencedby refid="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" compoundref="poll_8c" startline="169" endline="206">bsd_socket_compute_revents</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short</type>
        <definition>static short bsd_socket_compute_revents</definition>
        <argsstring>(int fd, short events)</argsstring>
        <name>bsd_socket_compute_revents</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="169" column="14" bodyfile="src/poll.c" bodystart="169" bodyend="206"/>
        <references refid="group__libssh__poll_1gad1b817fc1223fd941f316d2a6f40f52d" compoundref="poll_8c" startline="129" endline="143">bsd_socket_not_connected</references>
        <references refid="group__libssh__poll_1gae3f76dc3d6879b8e0f1b72a6894c0527" compoundref="poll_8c" startline="145" endline="167">bsd_socket_reset</references>
        <references refid="poll_8h_1ab1c532446408c98559d4aaaeeeb99820" compoundref="poll_8h" startline="92">POLLERR</references>
        <references refid="poll_8h_1a262754fe6bdf27c2cd3da43284ec8536" compoundref="poll_8h" startline="95">POLLHUP</references>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="poll_8h_1a8ca81f2b28be692732d3f0b601fd828d" compoundref="poll_8h" startline="102">POLLRDNORM</references>
        <referencedby refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" compoundref="poll_8c" startline="217" endline="319">bsd_poll</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bsd_poll</definition>
        <argsstring>(ssh_pollfd_t *fds, nfds_t nfds, int timeout)</argsstring>
        <name>bsd_poll</name>
        <param>
          <type><ref refid="poll_8h_1ab86b2342c864cc22be957fd23f5d6b0d" kindref="member">ssh_pollfd_t</ref> *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref></type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="217" column="12" bodyfile="src/poll.c" bodystart="217" bodyend="319"/>
        <references refid="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" compoundref="poll_8c" startline="169" endline="206">bsd_socket_compute_revents</references>
        <references refid="structssh__pollfd__struct_1a6ed14662befc1352fc119dc5a86aaeff" compoundref="poll_8h" startline="37">ssh_pollfd_struct::events</references>
        <references refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" compoundref="poll_8h" startline="36">ssh_pollfd_struct::fd</references>
        <references refid="poll_8h_1a52ac479a805051f59643588b096024ff" compoundref="poll_8h" startline="82">POLLIN</references>
        <references refid="poll_8h_1ae8bffe35c61e12fb7b408b89721896df" compoundref="poll_8h" startline="98">POLLNVAL</references>
        <references refid="poll_8h_1a91b3c67129ac7675062f316b840a0d58" compoundref="poll_8h" startline="88">POLLOUT</references>
        <references refid="poll_8h_1ab6f53b89c7a4cc5e8349f7c778d85168" compoundref="poll_8h" startline="85">POLLPRI</references>
        <references refid="poll_8h_1a37c71608162976b7fa0a5465009ce3ab" compoundref="poll_8h" startline="105">POLLRDBAND</references>
        <references refid="poll_8h_1a8ca81f2b28be692732d3f0b601fd828d" compoundref="poll_8h" startline="102">POLLRDNORM</references>
        <references refid="poll_8h_1a272636cc42f343281665cd1ba92f2f1e" compoundref="poll_8h" startline="111">POLLWRBAND</references>
        <references refid="poll_8h_1ab8f1f69608ba2430cd5fa629a87b5420" compoundref="poll_8h" startline="108">POLLWRNORM</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__pollfd__struct_1aa746fa20d2a6b0ddab633767b83736f9" compoundref="poll_8h" startline="38">ssh_pollfd_struct::revents</references>
        <references refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" compoundref="libssh_8h" startline="140">SSH_INVALID_SOCKET</references>
        <references refid="examples__common_8h_1a01c647179ba7270ccbc9a5253846b3d2" compoundref="examples__common_8h" startline="19">ZERO_STRUCT</references>
        <referencedby refid="group__libssh__poll_1ga7e60f5f498b15eab57d9b2de70ab1acb" compoundref="poll_8c" startline="325" endline="327">ssh_poll_cleanup</referencedby>
        <referencedby refid="group__libssh__poll_1ga26aa5e00c0201c30dad6ec0e93d3871f" compoundref="poll_8c" startline="321" endline="323">ssh_poll_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga26aa5e00c0201c30dad6ec0e93d3871f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_init</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_poll_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="321" column="6" bodyfile="src/poll.c" bodystart="321" bodyend="323"/>
        <references refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" compoundref="poll_8c" startline="217" endline="319">bsd_poll</references>
        <references refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" compoundref="poll_8c" startline="102">ssh_poll_emu</references>
        <referencedby refid="socket_8h_1a37f17ec6d2ede343ad1e70ed061ec9bb" compoundref="socket_8c" startline="110" endline="127">ssh_socket_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga7e60f5f498b15eab57d9b2de70ab1acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_cleanup</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_poll_cleanup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="325" column="6" bodyfile="src/poll.c" bodystart="325" bodyend="327"/>
        <references refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" compoundref="poll_8c" startline="217" endline="319">bsd_poll</references>
        <references refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" compoundref="poll_8c" startline="102">ssh_poll_emu</references>
        <referencedby refid="socket_8h_1accaf18caa54fcca41198838b5134a47b" compoundref="socket_8c" startline="132" endline="141">ssh_socket_cleanup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_poll</definition>
        <argsstring>(ssh_pollfd_t *fds, nfds_t nfds, int timeout)</argsstring>
        <name>ssh_poll</name>
        <param>
          <type><ref refid="poll_8h_1ab86b2342c864cc22be957fd23f5d6b0d" kindref="member">ssh_pollfd_t</ref> *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref></type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="329" column="5" bodyfile="src/poll.c" bodystart="329" bodyend="331"/>
        <references refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" compoundref="poll_8c" startline="102">ssh_poll_emu</references>
        <referencedby refid="agent_8c_1a5de461e227daa4f58be39d898ad861fb" compoundref="agent_8c" startline="66" endline="124">atomicio</referencedby>
        <referencedby refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" compoundref="poll_8c" startline="663" endline="721">ssh_poll_ctx_dopoll</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gac657ed07db9e5851ffb0aba45e071e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
        <definition>ssh_poll_handle ssh_poll_new</definition>
        <argsstring>(socket_t fd, short events, ssh_poll_callback cb, void *userdata)</argsstring>
        <name>ssh_poll_new</name>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1af2a7809ed930c3f7eb5ab1a086673053" kindref="member">ssh_poll_callback</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Allocate a new poll object, which could be used within a poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket that will be polled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>Poll events that will be monitored for the socket. i.e. POLLIN, POLLPRI, POLLOUT </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called if any of the events are set. The prototype of cb is: int (*ssh_poll_callback)(ssh_poll_handle p, socket_t fd, int revents, void *userdata); </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the callback function. NULL if not needed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new poll object, NULL on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="351" column="17" bodyfile="src/poll.c" bodystart="351" bodyend="367"/>
        <references refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" compoundref="ssh__client_8c" startline="69">cb</references>
        <references refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" compoundref="poll_8c" startline="72">ssh_poll_handle_struct::cb</references>
        <references refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" compoundref="poll_8c" startline="73">ssh_poll_handle_struct::cb_data</references>
        <references refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" compoundref="poll_8c" startline="70">ssh_poll_handle_struct::events</references>
        <references refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" compoundref="poll_8c" startline="67">ssh_poll_handle_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799">ssh_poll_handle_struct::x</references>
        <references refid="priv_8h_1a65e0a55b6af58e00b0a584d665af60ab" compoundref="priv_8h" startline="320">ZERO_STRUCTP</references>
        <referencedby refid="group__libssh__server_1ga30896ad964ce5b09b3b0068b1ed783e9" compoundref="bind_8c" startline="346" endline="364">ssh_bind_get_poll</referencedby>
        <referencedby refid="priv_8h_1a84015bb99d7ac6fe60fe6e61dbd0e1cf" compoundref="connector_8c" startline="565" endline="628">ssh_connector_set_event</referencedby>
        <referencedby refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" compoundref="poll_8c" startline="815" endline="845">ssh_event_add_fd</referencedby>
        <referencedby refid="socket_8h_1a5af4852b3910014440f36032ec76d785" compoundref="socket_8c" startline="386" endline="393">ssh_socket_get_poll_handle</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_free</definition>
        <argsstring>(ssh_poll_handle p)</argsstring>
        <name>ssh_poll_free</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Free a poll object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="376" column="6" bodyfile="src/poll.c" bodystart="376" bodyend="382"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" compoundref="poll_8c" startline="625" endline="645">ssh_poll_ctx_remove</references>
        <referencedby refid="libssh_8h_1ae082e4d35591a2f2f3074f28049ff993" compoundref="connector_8c" startline="125" endline="151">ssh_connector_free</referencedby>
        <referencedby refid="priv_8h_1ad92def69fc9cce5d1d564588e668a862" compoundref="connector_8c" startline="630" endline="659">ssh_connector_remove_event</referencedby>
        <referencedby refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" compoundref="poll_8c" startline="815" endline="845">ssh_event_add_fd</referencedby>
        <referencedby refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" compoundref="poll_8c" startline="976" endline="1011">ssh_event_remove_fd</referencedby>
        <referencedby refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" compoundref="poll_8c" startline="521" endline="537">ssh_poll_ctx_free</referencedby>
        <referencedby refid="socket_8h_1aaf4853539d6ed1c3508cca5a45d557d6" compoundref="socket_8c" startline="447" endline="487">ssh_socket_close</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gaca05fcf77e6c4b5e55a9cfd2c9690ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
        <definition>ssh_poll_ctx ssh_poll_get_ctx</definition>
        <argsstring>(ssh_poll_handle p)</argsstring>
        <name>ssh_poll_get_ctx</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get the poll context of a poll object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Poll context or NULL if the poll object isn&apos;t attached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="391" column="14" bodyfile="src/poll.c" bodystart="391" bodyend="393"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short</type>
        <definition>short ssh_poll_get_events</definition>
        <argsstring>(ssh_poll_handle p)</argsstring>
        <name>ssh_poll_get_events</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get the events of a poll object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Poll events. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="402" column="7" bodyfile="src/poll.c" bodystart="402" bodyend="404"/>
        <references refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" compoundref="poll_8c" startline="70">ssh_poll_handle_struct::events</references>
        <referencedby refid="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" compoundref="poll_8c" startline="442" endline="444">ssh_poll_add_events</referencedby>
        <referencedby refid="group__libssh__poll_1ga012582349ce62cf788761e5f97548496" compoundref="poll_8c" startline="453" endline="455">ssh_poll_remove_events</referencedby>
        <referencedby refid="socket_8h_1a2d1f155a930ca6784cbcb44935ce58ef" compoundref="socket_8c" startline="788" endline="798">ssh_socket_get_poll_flags</referencedby>
        <referencedby refid="socket_8c_1a830a3625d6dd3a649a6f94380d4ecb82" compoundref="socket_8c" startline="564" endline="600">ssh_socket_unbuffered_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_set_events</definition>
        <argsstring>(ssh_poll_handle p, short events)</argsstring>
        <name>ssh_poll_set_events</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <briefdescription>
<para>Set the events of a poll object. The events will also be propagated to an associated poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>Poll events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="413" column="6" bodyfile="src/poll.c" bodystart="413" bodyend="418"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="structssh__pollfd__struct_1a6ed14662befc1352fc119dc5a86aaeff" compoundref="poll_8h" startline="37">ssh_pollfd_struct::events</references>
        <references refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" compoundref="poll_8c" startline="70">ssh_poll_handle_struct::events</references>
        <references refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" compoundref="poll_8c" startline="68">ssh_poll_handle_struct::idx</references>
        <references refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" compoundref="poll_8c" startline="71">ssh_poll_handle_struct::lock</references>
        <references refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" compoundref="poll_8c" startline="78">ssh_poll_ctx_struct::pollfds</references>
        <references refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799">ssh_poll_handle_struct::x</references>
        <referencedby refid="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" compoundref="poll_8c" startline="442" endline="444">ssh_poll_add_events</referencedby>
        <referencedby refid="group__libssh__poll_1ga012582349ce62cf788761e5f97548496" compoundref="poll_8c" startline="453" endline="455">ssh_poll_remove_events</referencedby>
        <referencedby refid="socket_8h_1a4a6d84c45677fe9f8195b3630338920b" compoundref="socket_8c" startline="914" endline="948">ssh_socket_connect_proxycommand</referencedby>
        <referencedby refid="socket_8h_1aa57456b012ab138a8665f5014fae4d36" compoundref="socket_8c" startline="230" endline="379">ssh_socket_pollcallback</referencedby>
        <referencedby refid="socket_8h_1a1bf2efced17e41fdd72719e1daee8851" compoundref="socket_8c" startline="497" endline="512">ssh_socket_set_fd</referencedby>
        <referencedby refid="socket_8c_1a830a3625d6dd3a649a6f94380d4ecb82" compoundref="socket_8c" startline="564" endline="600">ssh_socket_unbuffered_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga2da5adcc03754a3b17e4fb0f23867ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_set_fd</definition>
        <argsstring>(ssh_poll_handle p, socket_t fd)</argsstring>
        <name>ssh_poll_set_fd</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Set the file descriptor of a poll object. The FD will also be propagated to an associated poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>New file descriptor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="427" column="6" bodyfile="src/poll.c" bodystart="427" bodyend="433"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" compoundref="poll_8h" startline="36">ssh_pollfd_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" compoundref="poll_8c" startline="67">ssh_poll_handle_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" compoundref="poll_8c" startline="68">ssh_poll_handle_struct::idx</references>
        <references refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" compoundref="poll_8c" startline="78">ssh_poll_ctx_struct::pollfds</references>
        <references refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799">ssh_poll_handle_struct::x</references>
        <referencedby refid="socket_8h_1a1bf2efced17e41fdd72719e1daee8851" compoundref="socket_8c" startline="497" endline="512">ssh_socket_set_fd</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_add_events</definition>
        <argsstring>(ssh_poll_handle p, short events)</argsstring>
        <name>ssh_poll_add_events</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <briefdescription>
<para>Add extra events to a poll object. Duplicates are ignored. The events will also be propagated to an associated poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>Poll events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="442" column="6" bodyfile="src/poll.c" bodystart="442" bodyend="444"/>
        <references refid="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" compoundref="poll_8c" startline="402" endline="404">ssh_poll_get_events</references>
        <references refid="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" compoundref="poll_8c" startline="413" endline="418">ssh_poll_set_events</references>
        <referencedby refid="connector_8c_1a49e333bf300287cfadad801243c2d7f7" compoundref="connector_8c" startline="219" endline="236">ssh_connector_reset_pollevents</referencedby>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
        <referencedby refid="socket_8h_1a718a60a5a68d22d59991e2ae353c5eb6" compoundref="socket_8c" startline="655" endline="727">ssh_socket_nonblocking_flush</referencedby>
        <referencedby refid="socket_8h_1a1bf2efced17e41fdd72719e1daee8851" compoundref="socket_8c" startline="497" endline="512">ssh_socket_set_fd</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga012582349ce62cf788761e5f97548496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_remove_events</definition>
        <argsstring>(ssh_poll_handle p, short events)</argsstring>
        <name>ssh_poll_remove_events</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <briefdescription>
<para>Remove events from a poll object. Non-existent are ignored. The events will also be propagated to an associated poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>Poll events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="453" column="6" bodyfile="src/poll.c" bodystart="453" bodyend="455"/>
        <references refid="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" compoundref="poll_8c" startline="402" endline="404">ssh_poll_get_events</references>
        <references refid="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" compoundref="poll_8c" startline="413" endline="418">ssh_poll_set_events</references>
        <referencedby refid="connector_8c_1a49e333bf300287cfadad801243c2d7f7" compoundref="connector_8c" startline="219" endline="236">ssh_connector_reset_pollevents</referencedby>
        <referencedby refid="socket_8h_1aa57456b012ab138a8665f5014fae4d36" compoundref="socket_8c" startline="230" endline="379">ssh_socket_pollcallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga26c19b17ac8d1e3d7fcbfb4367fb93ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
        <definition>socket_t ssh_poll_get_fd</definition>
        <argsstring>(ssh_poll_handle p)</argsstring>
        <name>ssh_poll_get_fd</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get the raw socket of a poll object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Raw socket. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="465" column="10" bodyfile="src/poll.c" bodystart="465" bodyend="471"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" compoundref="poll_8h" startline="36">ssh_pollfd_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" compoundref="poll_8c" startline="67">ssh_poll_handle_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" compoundref="poll_8c" startline="68">ssh_poll_handle_struct::idx</references>
        <references refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" compoundref="poll_8c" startline="78">ssh_poll_ctx_struct::pollfds</references>
        <references refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799">ssh_poll_handle_struct::x</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga98ba36c2771b1e49d5c8e2f79be6d3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_set_callback</definition>
        <argsstring>(ssh_poll_handle p, ssh_poll_callback cb, void *userdata)</argsstring>
        <name>ssh_poll_set_callback</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1af2a7809ed930c3f7eb5ab1a086673053" kindref="member">ssh_poll_callback</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Set the callback of a poll object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called if any of the events are set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the callback function. NULL if not needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="480" column="6" bodyfile="src/poll.c" bodystart="480" bodyend="485"/>
        <references refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" compoundref="ssh__client_8c" startline="69">cb</references>
        <references refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" compoundref="poll_8c" startline="72">ssh_poll_handle_struct::cb</references>
        <references refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" compoundref="poll_8c" startline="73">ssh_poll_handle_struct::cb_data</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
        <definition>ssh_poll_ctx ssh_poll_ctx_new</definition>
        <argsstring>(size_t chunk_size)</argsstring>
        <name>ssh_poll_ctx_new</name>
        <param>
          <type>size_t</type>
          <declname>chunk_size</declname>
        </param>
        <briefdescription>
<para>Create a new poll context. It could be associated with many poll object which are going to be polled at the same time as the poll context. You would need a single poll context per thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chunk_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the memory chunk that will be allocated, when more memory is needed. This is for efficiency reasons, i.e. don&apos;t allocate memory for each new poll object, but for the next 5. Set it to 0 if you want to use the library&apos;s default value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="498" column="14" bodyfile="src/poll.c" bodystart="498" bodyend="514"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="poll_8c_1a43368aeb32c3f9d274961b95d6fef110" compoundref="poll_8c" startline="43">SSH_POLL_CTX_CHUNK</references>
        <references refid="priv_8h_1a65e0a55b6af58e00b0a584d665af60ab" compoundref="priv_8h" startline="320">ZERO_STRUCTP</references>
        <referencedby refid="test__socket_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="test__socket_8c" startline="70" endline="93">main</referencedby>
        <referencedby refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" compoundref="poll_8c" startline="760" endline="785">ssh_event_new</referencedby>
        <referencedby refid="group__libssh__poll_1ga8ad007907f642d4aa2c25e5209bf337a" compoundref="poll_8c" startline="730" endline="736">ssh_poll_get_default_ctx</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_ctx_free</definition>
        <argsstring>(ssh_poll_ctx ctx)</argsstring>
        <name>ssh_poll_ctx_free</name>
        <param>
          <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Free a poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="521" column="6" bodyfile="src/poll.c" bodystart="521" bodyend="537"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" compoundref="poll_8c" startline="376" endline="382">ssh_poll_free</references>
        <referencedby refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" compoundref="poll_8c" startline="1089" endline="1118">ssh_event_free</referencedby>
        <referencedby refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" compoundref="poll_8c" startline="760" endline="785">ssh_event_new</referencedby>
        <referencedby refid="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" compoundref="session_8c" startline="191" endline="326">ssh_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_poll_ctx_resize</definition>
        <argsstring>(ssh_poll_ctx ctx, size_t new_size)</argsstring>
        <name>ssh_poll_ctx_resize</name>
        <param>
          <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="539" column="12" bodyfile="src/poll.c" bodystart="539" bodyend="563"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <referencedby refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</referencedby>
        <referencedby refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" compoundref="poll_8c" startline="625" endline="645">ssh_poll_ctx_remove</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_poll_ctx_add</definition>
        <argsstring>(ssh_poll_ctx ctx, ssh_poll_handle p)</argsstring>
        <name>ssh_poll_ctx_add</name>
        <param>
          <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Add a poll object to a poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="573" column="5" bodyfile="src/poll.c" bodystart="573" bodyend="595"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" compoundref="poll_8c" startline="70">ssh_poll_handle_struct::events</references>
        <references refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" compoundref="poll_8c" startline="67">ssh_poll_handle_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" compoundref="poll_8c" startline="68">ssh_poll_handle_struct::idx</references>
        <references refid="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" compoundref="poll_8c" startline="539" endline="563">ssh_poll_ctx_resize</references>
        <references refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799">ssh_poll_handle_struct::x</references>
        <referencedby refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" compoundref="poll_8c" startline="815" endline="845">ssh_event_add_fd</referencedby>
        <referencedby refid="group__libssh__poll_1gaaf3e1df762650369e99595eee761f2a9" compoundref="poll_8c" startline="857" endline="860">ssh_event_add_poll</referencedby>
        <referencedby refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" compoundref="poll_8c" startline="884" endline="923">ssh_event_add_session</referencedby>
        <referencedby refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" compoundref="poll_8c" startline="1089" endline="1118">ssh_event_free</referencedby>
        <referencedby refid="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" compoundref="poll_8c" startline="1022" endline="1068">ssh_event_remove_session</referencedby>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
        <referencedby refid="group__libssh__poll_1ga4aa3ef276370adbb4afb284947dc8005" compoundref="poll_8c" startline="605" endline="616">ssh_poll_ctx_add_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga4aa3ef276370adbb4afb284947dc8005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_poll_ctx_add_socket</definition>
        <argsstring>(ssh_poll_ctx ctx, ssh_socket s)</argsstring>
        <name>ssh_poll_ctx_add_socket</name>
        <param>
          <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="socket_8h_1a6b62005b4c3ccb51da8c758305c7d159" kindref="member">ssh_socket</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Add a socket object to a poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>A SSH socket handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="605" column="5" bodyfile="src/poll.c" bodystart="605" bodyend="616"/>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" compoundref="test__socket_8c" startline="34">s</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <references refid="socket_8h_1a5af4852b3910014440f36032ec76d785" compoundref="socket_8c" startline="386" endline="393">ssh_socket_get_poll_handle</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_poll_ctx_remove</definition>
        <argsstring>(ssh_poll_ctx ctx, ssh_poll_handle p)</argsstring>
        <name>ssh_poll_ctx_remove</name>
        <param>
          <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Remove a poll object from a poll context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="625" column="6" bodyfile="src/poll.c" bodystart="625" bodyend="645"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" compoundref="poll_8c" startline="67">ssh_poll_handle_struct::fd</references>
        <references refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" compoundref="poll_8c" startline="68">ssh_poll_handle_struct::idx</references>
        <references refid="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" compoundref="poll_8c" startline="539" endline="563">ssh_poll_ctx_resize</references>
        <references refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799">ssh_poll_handle_struct::x</references>
        <referencedby refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" compoundref="poll_8c" startline="884" endline="923">ssh_event_add_session</referencedby>
        <referencedby refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" compoundref="poll_8c" startline="1089" endline="1118">ssh_event_free</referencedby>
        <referencedby refid="group__libssh__poll_1ga302e3942e697063f1a54319667231f73" compoundref="poll_8c" startline="869" endline="872">ssh_event_remove_poll</referencedby>
        <referencedby refid="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" compoundref="poll_8c" startline="1022" endline="1068">ssh_event_remove_session</referencedby>
        <referencedby refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" compoundref="poll_8c" startline="376" endline="382">ssh_poll_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_poll_ctx_dopoll</definition>
        <argsstring>(ssh_poll_ctx ctx, int timeout)</argsstring>
        <name>ssh_poll_ctx_dopoll</name>
        <param>
          <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Poll all the sockets associated through a poll object with a poll context. If any of the events are set after the poll, the call back function of the socket will be called. This function should be called once within the programs main loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an already allocated poll context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>An upper limit on the time for which <ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx()</ref> will block, in milliseconds. Specifying a negative value means an infinite timeout. This parameter is passed to the poll() function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK No error. SSH_ERROR Error happened during the poll. SSH_AGAIN Timeout occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="663" column="5" bodyfile="src/poll.c" bodystart="663" bodyend="721"/>
        <references refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" compoundref="poll_8c" startline="72">ssh_poll_handle_struct::cb</references>
        <references refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" compoundref="poll_8c" startline="73">ssh_poll_handle_struct::cb_data</references>
        <references refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3">ctx</references>
        <references refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" compoundref="poll_8c" startline="70">ssh_poll_handle_struct::events</references>
        <references refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" compoundref="poll_8c" startline="71">ssh_poll_handle_struct::lock</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" compoundref="libssh_8h" startline="331">SSH_AGAIN</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" compoundref="poll_8c" startline="329" endline="331">ssh_poll</references>
        <references refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" compoundref="misc_8c" startline="1420" endline="1432">ssh_timeout_update</references>
        <references refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" compoundref="misc_8c" startline="1324" endline="1335">ssh_timestamp_init</references>
        <referencedby refid="test__socket_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="test__socket_8c" startline="70" endline="93">main</referencedby>
        <referencedby refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" compoundref="poll_8c" startline="957" endline="965">ssh_event_dopoll</referencedby>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga8ad007907f642d4aa2c25e5209bf337a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="poll_8h_1af97c1e6874209d8badb69c3ab17c071f" kindref="member">ssh_poll_ctx</ref></type>
        <definition>ssh_poll_ctx ssh_poll_get_default_ctx</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_poll_get_default_ctx</name>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="730" column="14" bodyfile="src/poll.c" bodystart="730" bodyend="736"/>
        <references refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" compoundref="session_8h" startline="203">ssh_session_struct::default_poll_ctx</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" compoundref="poll_8c" startline="498" endline="514">ssh_poll_ctx_new</references>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="633" endline="665">ssh_handle_packets</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
        <definition>ssh_event ssh_event_new</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_event_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new event context. It could be associated with many ssh_session objects and socket fd which are going to be polled at the same time as the event context. You would need a single event context per thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ssh_event object on success, NULL on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="760" column="11" bodyfile="src/poll.c" bodystart="760" bodyend="785"/>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" compoundref="misc_8c" startline="661" endline="667">ssh_list_new</references>
        <references refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" compoundref="poll_8c" startline="521" endline="537">ssh_poll_ctx_free</references>
        <references refid="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" compoundref="poll_8c" startline="498" endline="514">ssh_poll_ctx_new</references>
        <references refid="priv_8h_1a65e0a55b6af58e00b0a584d665af60ab" compoundref="priv_8h" startline="320">ZERO_STRUCTP</references>
        <referencedby refid="ssh__server__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__server__fuzzer_8cpp" startline="118" endline="199">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="proxy_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="proxy_8c" startline="215" endline="346">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="test__server_8c_1a1356104271e38a5856393ef01d01bc3a" compoundref="test__server_8c" startline="70" endline="277">run_server</referencedby>
        <referencedby refid="ssh__client_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="ssh__client_8c" startline="198" endline="242">select_loop</referencedby>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="torture__server__x11_8c_1af793ec1fe611ecefae9f68db4f588c82" compoundref="torture__server__x11_8c" startline="154" endline="221">test_ssh_channel_request_x11</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_event_fd_wrapper_callback</definition>
        <argsstring>(ssh_poll_handle p, socket_t fd, int revents, void *userdata)</argsstring>
        <name>ssh_event_fd_wrapper_callback</name>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="787" column="12" bodyfile="src/poll.c" bodystart="787" bodyend="796"/>
        <references refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" compoundref="poll_8c" startline="741">ssh_event_fd_wrapper::cb</references>
        <references refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" compoundref="poll_8c" startline="742">ssh_event_fd_wrapper::userdata</references>
        <referencedby refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" compoundref="poll_8c" startline="815" endline="845">ssh_event_add_fd</referencedby>
        <referencedby refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" compoundref="poll_8c" startline="976" endline="1011">ssh_event_remove_fd</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_add_fd</definition>
        <argsstring>(ssh_event event, socket_t fd, short events, ssh_event_callback cb, void *userdata)</argsstring>
        <name>ssh_event_add_fd</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1ad86976ea739d21a91265820921ee123c" kindref="member">ssh_event_callback</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Add a fd to the event and assign it a callback, when used in blocking mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket that will be polled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>Poll events that will be monitored for the socket. i.e. POLLIN, POLLPRI, POLLOUT </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called if any of the events are set. The prototype of cb is: int (*ssh_event_callback)(socket_t fd, int revents, void *userdata); </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the callback function. NULL if not needed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success SSH_ERROR on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="815" column="5" bodyfile="src/poll.c" bodystart="815" bodyend="845"/>
        <references refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" compoundref="ssh__client_8c" startline="69">cb</references>
        <references refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" compoundref="poll_8c" startline="741">ssh_event_fd_wrapper::cb</references>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" compoundref="poll_8c" startline="787" endline="796">ssh_event_fd_wrapper_callback</references>
        <references refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" compoundref="libssh_8h" startline="140">SSH_INVALID_SOCKET</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <references refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" compoundref="poll_8c" startline="376" endline="382">ssh_poll_free</references>
        <references refid="group__libssh__poll_1gac657ed07db9e5851ffb0aba45e071e99" compoundref="poll_8c" startline="351" endline="367">ssh_poll_new</references>
        <references refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" compoundref="poll_8c" startline="742">ssh_event_fd_wrapper::userdata</references>
        <referencedby refid="default__cb_8c_1a1c4ec691e0189bd2ff9c7acd3399895b" compoundref="default__cb_8c" startline="783" endline="995">default_handle_session_cb</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a845bb2d262ac6cb3c7acfaeb394641ee" compoundref="torture__server__auth__kbdint_8c" startline="333" endline="515">handle_kbdint_session_cb</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
        <referencedby refid="sshd__direct-tcpip_8c_1a7943ace595a03c4155238686010419ce" compoundref="sshd__direct-tcpip_8c" startline="431" endline="486">message_callback</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gaaf3e1df762650369e99595eee761f2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_add_poll</definition>
        <argsstring>(ssh_event event, ssh_poll_handle p)</argsstring>
        <name>ssh_event_add_poll</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Add a poll handle to the event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the ssh_event</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the poll handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success SSH_ERROR on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="857" column="5" bodyfile="src/poll.c" bodystart="857" bodyend="860"/>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <referencedby refid="priv_8h_1a84015bb99d7ac6fe60fe6e61dbd0e1cf" compoundref="connector_8c" startline="565" endline="628">ssh_connector_set_event</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga302e3942e697063f1a54319667231f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_event_remove_poll</definition>
        <argsstring>(ssh_event event, ssh_poll_handle p)</argsstring>
        <name>ssh_event_remove_poll</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="poll_8h_1a8e1c9d5d48b80ed51c850241321baddf" kindref="member">ssh_poll_handle</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>remove a poll handle to the event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the ssh_event</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the poll handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="869" column="6" bodyfile="src/poll.c" bodystart="869" bodyend="872"/>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" compoundref="poll_8c" startline="625" endline="645">ssh_poll_ctx_remove</references>
        <referencedby refid="priv_8h_1ad92def69fc9cce5d1d564588e668a862" compoundref="connector_8c" startline="630" endline="659">ssh_connector_remove_event</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_add_session</definition>
        <argsstring>(ssh_event event, ssh_session session)</argsstring>
        <name>ssh_event_add_session</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>remove the poll handle from session and assign them to a event, when used in blocking mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to add to the event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success SSH_ERROR on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="884" column="5" bodyfile="src/poll.c" bodystart="884" bodyend="923"/>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" compoundref="session_8h" startline="203">ssh_session_struct::default_poll_ctx</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" compoundref="poll_8c" startline="77">ssh_poll_ctx_struct::pollptrs</references>
        <references refid="structssh__poll__ctx__struct_1a00121f65ba9242a6852f6c9f41a713f2" compoundref="poll_8c" startline="80">ssh_poll_ctx_struct::polls_used</references>
        <references refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" compoundref="poll_8c" startline="65">ssh_poll_handle_struct::session</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" compoundref="misc_8c" startline="724" endline="745">ssh_list_append</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <references refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" compoundref="poll_8c" startline="625" endline="645">ssh_poll_ctx_remove</references>
        <referencedby refid="default__cb_8c_1a1c4ec691e0189bd2ff9c7acd3399895b" compoundref="default__cb_8c" startline="783" endline="995">default_handle_session_cb</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a845bb2d262ac6cb3c7acfaeb394641ee" compoundref="torture__server__auth__kbdint_8c" startline="333" endline="515">handle_kbdint_session_cb</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
        <referencedby refid="ssh__server__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__server__fuzzer_8cpp" startline="118" endline="199">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="proxy_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="proxy_8c" startline="215" endline="346">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="priv_8h_1a84015bb99d7ac6fe60fe6e61dbd0e1cf" compoundref="connector_8c" startline="565" endline="628">ssh_connector_set_event</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="torture__server__x11_8c_1af793ec1fe611ecefae9f68db4f588c82" compoundref="torture__server__x11_8c" startline="154" endline="221">test_ssh_channel_request_x11</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gae1f53a6ce420a41ae06ffb962f477f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_add_connector</definition>
        <argsstring>(ssh_event event, ssh_connector connector)</argsstring>
        <name>ssh_event_add_connector</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1ac087532dc357998a930d9924c76d27c0" kindref="member">ssh_connector</ref></type>
          <declname>connector</declname>
        </param>
        <briefdescription>
<para>Add a connector to the SSH event loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH event loop</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">connector</parametername>
</parameternamelist>
<parameterdescription>
<para>The connector object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK</para>
</simplesect>
<simplesect kind="return"><para>SSH_ERROR in case of error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="936" column="5" bodyfile="src/poll.c" bodystart="936" bodyend="938"/>
        <references refid="priv_8h_1a84015bb99d7ac6fe60fe6e61dbd0e1cf" compoundref="connector_8c" startline="565" endline="628">ssh_connector_set_event</references>
        <referencedby refid="ssh__client_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="ssh__client_8c" startline="198" endline="242">select_loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_dopoll</definition>
        <argsstring>(ssh_event event, int timeout)</argsstring>
        <name>ssh_event_dopoll</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Poll all the sockets and sessions associated through an event object.i. </para>
        </briefdescription>
        <detaileddescription>
<para>If any of the events are set after the poll, the call back functions of the sessions or sockets will be called. This function should be called once within the programs main loop.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event object to poll.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>An upper limit on the time for which the poll will block, in milliseconds. Specifying a negative value means an infinite timeout. This parameter is passed to the poll() function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success. SSH_ERROR Error happened during the poll. SSH_AGAIN Timeout occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="957" column="5" bodyfile="src/poll.c" bodystart="957" bodyend="965"/>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" compoundref="poll_8c" startline="663" endline="721">ssh_poll_ctx_dopoll</references>
        <referencedby refid="default__cb_8c_1a1c4ec691e0189bd2ff9c7acd3399895b" compoundref="default__cb_8c" startline="783" endline="995">default_handle_session_cb</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a845bb2d262ac6cb3c7acfaeb394641ee" compoundref="torture__server__auth__kbdint_8c" startline="333" endline="515">handle_kbdint_session_cb</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
        <referencedby refid="ssh__server__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__server__fuzzer_8cpp" startline="118" endline="199">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="proxy_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="proxy_8c" startline="215" endline="346">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="ssh__client_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="ssh__client_8c" startline="198" endline="242">select_loop</referencedby>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="torture__server__x11_8c_1af793ec1fe611ecefae9f68db4f588c82" compoundref="torture__server__x11_8c" startline="154" endline="221">test_ssh_channel_request_x11</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_remove_fd</definition>
        <argsstring>(ssh_event event, socket_t fd)</argsstring>
        <name>ssh_event_remove_fd</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref></type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Remove a socket fd from an event context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The fd to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success SSH_ERROR on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="976" column="5" bodyfile="src/poll.c" bodystart="976" bodyend="1011"/>
        <references refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" compoundref="poll_8c" startline="72">ssh_poll_handle_struct::cb</references>
        <references refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" compoundref="poll_8c" startline="73">ssh_poll_handle_struct::cb_data</references>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" compoundref="poll_8h" startline="36">ssh_pollfd_struct::fd</references>
        <references refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" compoundref="poll_8c" startline="78">ssh_poll_ctx_struct::pollfds</references>
        <references refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" compoundref="poll_8c" startline="77">ssh_poll_ctx_struct::pollptrs</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" compoundref="sshd__direct-tcpip_8c" startline="36">SAFE_FREE</references>
        <references refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" compoundref="poll_8c" startline="65">ssh_poll_handle_struct::session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" compoundref="poll_8c" startline="787" endline="796">ssh_event_fd_wrapper_callback</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" compoundref="poll_8c" startline="376" endline="382">ssh_poll_free</references>
        <referencedby refid="sshd__direct-tcpip_8c_1a58f038ce19bca1c6acac61aa3202ed7e" compoundref="sshd__direct-tcpip_8c" startline="204" endline="214">_close_socket</referencedby>
        <referencedby refid="default__cb_8c_1a1c4ec691e0189bd2ff9c7acd3399895b" compoundref="default__cb_8c" startline="783" endline="995">default_handle_session_cb</referencedby>
        <referencedby refid="torture__server__auth__kbdint_8c_1a845bb2d262ac6cb3c7acfaeb394641ee" compoundref="torture__server__auth__kbdint_8c" startline="333" endline="515">handle_kbdint_session_cb</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a2094e558ae17a16e444d40f575063102" compoundref="ssh__server__fork_8c" startline="536" endline="679">handle_session</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_remove_session</definition>
        <argsstring>(ssh_event event, ssh_session session)</argsstring>
        <name>ssh_event_remove_session</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1a02d3754de040612632cdd499c20f92f6" kindref="member">ssh_session</ref></type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Remove a session object from an event context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success SSH_ERROR on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="1022" column="5" bodyfile="src/poll.c" bodystart="1022" bodyend="1068"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" compoundref="misc_8h" startline="46">ssh_iterator::data</references>
        <references refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" compoundref="session_8h" startline="203">ssh_session_struct::default_poll_ctx</references>
        <references refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" compoundref="misc_8h" startline="45">ssh_iterator::next</references>
        <references refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" compoundref="poll_8c" startline="77">ssh_poll_ctx_struct::pollptrs</references>
        <references refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" compoundref="pkd__daemon_8c" startline="62">rc</references>
        <references refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" compoundref="poll_8c" startline="65">ssh_poll_handle_struct::session</references>
        <references refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" compoundref="torture__session__keys_8c" startline="61">session</references>
        <references refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" compoundref="libssh_8h" startline="330">SSH_ERROR</references>
        <references refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" compoundref="misc_8c" startline="682" endline="686">ssh_list_get_iterator</references>
        <references refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" compoundref="misc_8c" startline="771" endline="798">ssh_list_remove</references>
        <references refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" compoundref="libssh_8h" startline="329">SSH_OK</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <references refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" compoundref="poll_8c" startline="625" endline="645">ssh_poll_ctx_remove</references>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="priv_8h_1ad92def69fc9cce5d1d564588e668a862" compoundref="connector_8c" startline="630" endline="659">ssh_connector_remove_event</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1gae120116df5a1da09ee9edd42e6a63397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_event_remove_connector</definition>
        <argsstring>(ssh_event event, ssh_connector connector)</argsstring>
        <name>ssh_event_remove_connector</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="libssh_8h_1ac087532dc357998a930d9924c76d27c0" kindref="member">ssh_connector</ref></type>
          <declname>connector</declname>
        </param>
        <briefdescription>
<para>Remove a connector from an event context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">connector</parametername>
</parameternamelist>
<parameterdescription>
<para>connector object to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success </para>
</simplesect>
<simplesect kind="return"><para>SSH_ERROR on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="1076" column="5" bodyfile="src/poll.c" bodystart="1076" bodyend="1079"/>
        <references refid="priv_8h_1ad92def69fc9cce5d1d564588e668a862" compoundref="connector_8c" startline="630" endline="659">ssh_connector_remove_event</references>
        <referencedby refid="ssh__client_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="ssh__client_8c" startline="198" endline="242">select_loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_event_free</definition>
        <argsstring>(ssh_event event)</argsstring>
        <name>ssh_event_free</name>
        <param>
          <type><ref refid="libssh_8h_1a55d4fb68310b11167e82fcd49dc9069f" kindref="member">ssh_event</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Free an event context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh_event object to free. Note: you have to manually remove sessions and socket fds before freeing the event object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/poll.c" line="1089" column="6" bodyfile="src/poll.c" bodystart="1089" bodyend="1118"/>
        <references refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" compoundref="poll_8c" startline="64">ssh_poll_handle_struct::ctx</references>
        <references refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" compoundref="poll_8c" startline="746">ssh_event_struct::ctx</references>
        <references refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" compoundref="session_8h" startline="203">ssh_session_struct::default_poll_ctx</references>
        <references refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" compoundref="poll_8c" startline="77">ssh_poll_ctx_struct::pollptrs</references>
        <references refid="structssh__poll__ctx__struct_1a00121f65ba9242a6852f6c9f41a713f2" compoundref="poll_8c" startline="80">ssh_poll_ctx_struct::polls_used</references>
        <references refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" compoundref="poll_8c" startline="65">ssh_poll_handle_struct::session</references>
        <references refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" compoundref="misc_8c" startline="669" endline="680">ssh_list_free</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="573" endline="595">ssh_poll_ctx_add</references>
        <references refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" compoundref="poll_8c" startline="521" endline="537">ssh_poll_ctx_free</references>
        <references refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" compoundref="poll_8c" startline="625" endline="645">ssh_poll_ctx_remove</references>
        <referencedby refid="ssh__server__fuzzer_8cpp_1a91ce7c16e9840492202299da2b451e60" compoundref="ssh__server__fuzzer_8cpp" startline="118" endline="199">LLVMFuzzerTestOneInput</referencedby>
        <referencedby refid="ssh__server__fork_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="ssh__server__fork_8c" startline="687" endline="775">main</referencedby>
        <referencedby refid="pkd__daemon_8c_1abe87875a523cecd013d848c7c9c5ba22" compoundref="pkd__daemon_8c" startline="238" endline="475">pkd_exec_hello</referencedby>
        <referencedby refid="test__server_8c_1a1356104271e38a5856393ef01d01bc3a" compoundref="test__server_8c" startline="70" endline="277">run_server</referencedby>
        <referencedby refid="ssh__client_8c_1a38ba4d370f756491ce0d55e0c320d08b" compoundref="ssh__client_8c" startline="198" endline="242">select_loop</referencedby>
        <referencedby refid="group__libssh__channel_1ga1026cfa48ecfc0b4898d4ea443acfc5d" compoundref="channels_8c" startline="3284" endline="3398">ssh_channel_select</referencedby>
        <referencedby refid="group__libssh__session_1ga86cbf041bced56d18a2a5248c46cecb4" compoundref="connect_8c" startline="316" endline="395">ssh_select</referencedby>
        <referencedby refid="torture__server__x11_8c_1af793ec1fe611ecefae9f68db4f588c82" compoundref="torture__server__x11_8c" startline="154" endline="221">test_ssh_channel_request_x11</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>poll.c<sp/>-<sp/>poll<sp/>wrapper</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>SSH<sp/>Library</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2009-2013<sp/>by<sp/>Andreas<sp/>Schneider<sp/>&lt;asn@cryptomilk.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2003-2013<sp/>by<sp/>Aris<sp/>Adamantiadis</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2009<sp/>Aleksandar<sp/>Kanchev</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>The<sp/>SSH<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>the<sp/>SSH<sp/>Library;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="priv_8h" kindref="compound">libssh/priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libssh_8h" kindref="compound">libssh/libssh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="poll_8h" kindref="compound">libssh/poll.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="socket_8h" kindref="compound">libssh/socket.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="session_8h" kindref="compound">libssh/session.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">libssh/misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="server_8h" kindref="compound">libssh/server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SSH_POLL_CTX_CHUNK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="poll_8c_1a43368aeb32c3f9d274961b95d6fef110" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSH_POLL_CTX_CHUNK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structssh__poll__handle__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="64" refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="65" refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67" refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="68" refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="69" refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="70" refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" kindref="member">events</ref>;</highlight></codeline>
<codeline lineno="71" refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="72" refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="poll_8h_1af2a7809ed930c3f7eb5ab1a086673053" kindref="member">ssh_poll_callback</ref><sp/><ref refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="73" refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" kindref="member">cb_data</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structssh__poll__ctx__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="77" refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>*<ref refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" kindref="member">pollptrs</ref>;</highlight></codeline>
<codeline lineno="78" refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref><sp/>*<ref refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" kindref="member">pollfds</ref>;</highlight></codeline>
<codeline lineno="79" refid="structssh__poll__ctx__struct_1a87c810011aea6a6c3e0804e65c3ce950" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__ctx__struct_1a87c810011aea6a6c3e0804e65c3ce950" kindref="member">polls_allocated</ref>;</highlight></codeline>
<codeline lineno="80" refid="structssh__poll__ctx__struct_1a00121f65ba9242a6852f6c9f41a713f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__ctx__struct_1a00121f65ba9242a6852f6c9f41a713f2" kindref="member">polls_used</ref>;</highlight></codeline>
<codeline lineno="81" refid="structssh__poll__ctx__struct_1a6b9be4c3eba2675e50b4323569248d47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__ctx__struct_1a6b9be4c3eba2675e50b4323569248d47" kindref="member">chunk_size</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_POLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="poll_8h" kindref="compound">poll.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga26aa5e00c0201c30dad6ec0e93d3871f" kindref="member">ssh_poll_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga7e60f5f498b15eab57d9b2de70ab1acb" kindref="member">ssh_poll_cleanup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" kindref="member">ssh_poll</ref>(<ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref><sp/>*fds,<sp/><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref><sp/>nfds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>poll((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd<sp/>*)<sp/>fds,<sp/>nfds,<sp/>timeout);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAVE_POLL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group__libssh__poll_1ga3cb7d4c185d70c6a2e2b9696ef125fd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__libssh__poll_1ga3cb7d4c185d70c6a2e2b9696ef125fd4" kindref="member">poll_fn</ref>)(<ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref><sp/>*,<sp/><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref>,<sp/>int);</highlight></codeline>
<codeline lineno="102" refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga3cb7d4c185d70c6a2e2b9696ef125fd4" kindref="member">poll_fn</ref><sp/><ref refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" kindref="member">ssh_poll_emu</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STRICT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRICT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STRICT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winsock2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>HAVE_SYS_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_WIN32<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNISTD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group__libssh__poll_1gad1b817fc1223fd941f316d2a6f40f52d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gad1b817fc1223fd941f316d2a6f40f52d" kindref="member">bsd_socket_not_connected</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock_err)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sock_err)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENOTCONN:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ENOTCONN:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__libssh__poll_1gae3f76dc3d6879b8e0f1b72a6894c0527" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gae3f76dc3d6879b8e0f1b72a6894c0527" kindref="member">bsd_socket_reset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock_err)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sock_err)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAECONNABORTED:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAECONNRESET:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENETRESET:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAESHUTDOWN:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAECONNREFUSED:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAETIMEDOUT:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ECONNABORTED:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ECONNRESET:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ENETRESET:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESHUTDOWN:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" kindref="member">bsd_socket_compute_revents</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>save_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[64]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>revents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>MSG_PEEK;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MSG_NOSIGNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>MSG_NOSIGNAL;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>support<sp/>for<sp/>POLLHUP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>WSASetLastError(0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>recv(fd,<sp/>data,<sp/>64,<sp/>flags);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>save_errno;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>sock_errno<sp/>=<sp/>WSAGetLastError();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>WSASetLastError(0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;<sp/>0<sp/>||<sp/><ref refid="group__libssh__poll_1gad1b817fc1223fd941f316d2a6f40f52d" kindref="member">bsd_socket_not_connected</ref>(sock_errno))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revents<sp/>=<sp/>(<ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref><sp/>|<sp/><ref refid="poll_8h_1a8ca81f2b28be692732d3f0b601fd828d" kindref="member">POLLRDNORM</ref>)<sp/>&amp;<sp/>events;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0<sp/>||<sp/><ref refid="group__libssh__poll_1gae3f76dc3d6879b8e0f1b72a6894c0527" kindref="member">bsd_socket_reset</ref>(sock_errno))<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sock_errno;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revents<sp/>=<sp/><ref refid="poll_8h_1a262754fe6bdf27c2cd3da43284ec8536" kindref="member">POLLHUP</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revents<sp/>=<sp/><ref refid="poll_8h_1ab1c532446408c98559d4aaaeeeb99820" kindref="member">POLLERR</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>revents;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>poll(2)-emulation<sp/>using<sp/>select<sp/>for<sp/>systems<sp/>not<sp/>providing<sp/>a<sp/>native</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>poll<sp/>implementation.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>Keep<sp/>in<sp/>mind<sp/>that<sp/>select<sp/>is<sp/>terribly<sp/>inefficient.<sp/>The<sp/>interface<sp/>is<sp/>simply<sp/>not</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>meant<sp/>to<sp/>be<sp/>used<sp/>with<sp/>maximum<sp/>descriptor<sp/>value<sp/>greater,<sp/>say,<sp/>32<sp/>or<sp/>so.<sp/><sp/>With</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>a<sp/>value<sp/>as<sp/>high<sp/>as<sp/>1024<sp/>on<sp/>Linux<sp/>you&apos;ll<sp/>pay<sp/>dearly<sp/>in<sp/>every<sp/>single<sp/>call.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>poll()<sp/>will<sp/>be<sp/>orders<sp/>of<sp/>magnitude<sp/>faster.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" kindref="member">bsd_poll</ref>(<ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref><sp/>*fds,<sp/><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref><sp/>nfds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_set<sp/>readfds,<sp/>writefds,<sp/>exceptfds;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv,<sp/>*ptv<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>max_fd;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EFAULT;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="examples__common_8h_1a01c647179ba7270ccbc9a5253846b3d2" kindref="member">ZERO_STRUCT</ref>(readfds);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>FD_ZERO(&amp;readfds);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="examples__common_8h_1a01c647179ba7270ccbc9a5253846b3d2" kindref="member">ZERO_STRUCT</ref>(writefds);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>FD_ZERO(&amp;writefds);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="examples__common_8h_1a01c647179ba7270ccbc9a5253846b3d2" kindref="member">ZERO_STRUCT</ref>(exceptfds);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>FD_ZERO(&amp;exceptfds);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>fd_sets<sp/>and<sp/>find<sp/>largest<sp/>descriptor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>-1,<sp/>max_fd<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfds;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].fd<sp/>==<sp/><ref refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" kindref="member">SSH_INVALID_SOCKET</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].fd<sp/>&gt;=<sp/>FD_SETSIZE)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].events<sp/>&amp;<sp/>(<ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref><sp/>|<sp/><ref refid="poll_8h_1a8ca81f2b28be692732d3f0b601fd828d" kindref="member">POLLRDNORM</ref>))<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fds[i].fd,<sp/>&amp;readfds);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].events<sp/>&amp;<sp/>(<ref refid="poll_8h_1a91b3c67129ac7675062f316b840a0d58" kindref="member">POLLOUT</ref><sp/>|<sp/><ref refid="poll_8h_1ab8f1f69608ba2430cd5fa629a87b5420" kindref="member">POLLWRNORM</ref><sp/>|<sp/><ref refid="poll_8h_1a272636cc42f343281665cd1ba92f2f1e" kindref="member">POLLWRBAND</ref>))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fds[i].fd,<sp/>&amp;writefds);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].events<sp/>&amp;<sp/>(<ref refid="poll_8h_1ab6f53b89c7a4cc5e8349f7c778d85168" kindref="member">POLLPRI</ref><sp/>|<sp/><ref refid="poll_8h_1a37c71608162976b7fa0a5465009ce3ab" kindref="member">POLLRDBAND</ref>))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fds[i].fd,<sp/>&amp;exceptfds);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].fd<sp/>&gt;<sp/>max_fd<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fds[i].events<sp/>&amp;<sp/>(<ref refid="poll_8h_1a52ac479a805051f59643588b096024ff" kindref="member">POLLIN</ref><sp/>|<sp/><ref refid="poll_8h_1a91b3c67129ac7675062f316b840a0d58" kindref="member">POLLOUT</ref><sp/>|<sp/><ref refid="poll_8h_1ab6f53b89c7a4cc5e8349f7c778d85168" kindref="member">POLLPRI</ref><sp/>|</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poll_8h_1a8ca81f2b28be692732d3f0b601fd828d" kindref="member">POLLRDNORM</ref><sp/>|<sp/><ref refid="poll_8h_1a37c71608162976b7fa0a5465009ce3ab" kindref="member">POLLRDBAND</ref><sp/>|</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poll_8h_1ab8f1f69608ba2430cd5fa629a87b5420" kindref="member">POLLWRNORM</ref><sp/>|<sp/><ref refid="poll_8h_1a272636cc42f343281665cd1ba92f2f1e" kindref="member">POLLWRBAND</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_fd<sp/>=<sp/>fds[i].<ref refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_fd<sp/>==<sp/><ref refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" kindref="member">SSH_INVALID_SOCKET</ref><sp/>||<sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptv<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptv<sp/>=<sp/>&amp;tv;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_sec<sp/>=<sp/>timeout<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_usec<sp/>=<sp/>(timeout<sp/>%<sp/>1000)<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>select(max_fd<sp/>+<sp/>1,<sp/>&amp;readfds,<sp/>&amp;writefds,<sp/>&amp;exceptfds,<sp/>ptv);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>timeout<sp/>occured<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/>0,<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfds;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].fd<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structssh__pollfd__struct_1aa746fa20d2a6b0ddab633767b83736f9" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET(fds[i].fd,<sp/>&amp;readfds))<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structssh__pollfd__struct_1aa746fa20d2a6b0ddab633767b83736f9" kindref="member">revents</ref><sp/>=<sp/><ref refid="group__libssh__poll_1gac02b86a9467a2b872967099fef538353" kindref="member">bsd_socket_compute_revents</ref>(fds[i].fd,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].events);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET(fds[i].fd,<sp/>&amp;writefds))<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structssh__pollfd__struct_1aa746fa20d2a6b0ddab633767b83736f9" kindref="member">revents</ref><sp/>|=<sp/>fds[i].<ref refid="structssh__pollfd__struct_1a6ed14662befc1352fc119dc5a86aaeff" kindref="member">events</ref><sp/>&amp;<sp/>(<ref refid="poll_8h_1a91b3c67129ac7675062f316b840a0d58" kindref="member">POLLOUT</ref><sp/>|<sp/><ref refid="poll_8h_1ab8f1f69608ba2430cd5fa629a87b5420" kindref="member">POLLWRNORM</ref><sp/>|<sp/><ref refid="poll_8h_1a272636cc42f343281665cd1ba92f2f1e" kindref="member">POLLWRBAND</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET(fds[i].fd,<sp/>&amp;exceptfds))<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structssh__pollfd__struct_1aa746fa20d2a6b0ddab633767b83736f9" kindref="member">revents</ref><sp/>|=<sp/>fds[i].<ref refid="structssh__pollfd__struct_1a6ed14662befc1352fc119dc5a86aaeff" kindref="member">events</ref><sp/>&amp;<sp/>(<ref refid="poll_8h_1ab6f53b89c7a4cc5e8349f7c778d85168" kindref="member">POLLPRI</ref><sp/>|<sp/><ref refid="poll_8h_1a37c71608162976b7fa0a5465009ce3ab" kindref="member">POLLRDBAND</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].revents<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>++;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structssh__pollfd__struct_1aa746fa20d2a6b0ddab633767b83736f9" kindref="member">revents</ref><sp/>=<sp/><ref refid="poll_8h_1ae8bffe35c61e12fb7b408b89721896df" kindref="member">POLLNVAL</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group__libssh__poll_1ga26aa5e00c0201c30dad6ec0e93d3871f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga26aa5e00c0201c30dad6ec0e93d3871f" kindref="member">ssh_poll_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" kindref="member">ssh_poll_emu</ref><sp/>=<sp/><ref refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" kindref="member">bsd_poll</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__libssh__poll_1ga7e60f5f498b15eab57d9b2de70ab1acb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga7e60f5f498b15eab57d9b2de70ab1acb" kindref="member">ssh_poll_cleanup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" kindref="member">ssh_poll_emu</ref><sp/>=<sp/><ref refid="group__libssh__poll_1ga2d4a5991605a0507ae9f8854fd1ebce7" kindref="member">bsd_poll</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" kindref="member">ssh_poll</ref>(<ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref><sp/>*fds,<sp/><ref refid="poll_8h_1abf4939a673f2b874b24dc204cedab8f5" kindref="member">nfds_t</ref><sp/>nfds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__libssh__poll_1ga6abf974b607f70c29b4ea8065f69d333" kindref="member">ssh_poll_emu</ref>)(fds,<sp/>nfds,<sp/>timeout);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_POLL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__libssh__poll_1gac657ed07db9e5851ffb0aba45e071e99" refkind="member"><highlight class="normal"><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/><ref refid="group__libssh__poll_1gac657ed07db9e5851ffb0aba45e071e99" kindref="member">ssh_poll_new</ref>(<ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events,<sp/><ref refid="poll_8h_1af2a7809ed930c3f7eb5ab1a086673053" kindref="member">ssh_poll_callback</ref><sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref>,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle_struct</ref>));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a65e0a55b6af58e00b0a584d665af60ab" kindref="member">ZERO_STRUCTP</ref>(p);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" kindref="member">fd</ref><sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" kindref="member">cb</ref><sp/>=<sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" kindref="member">cb_data</ref><sp/>=<sp/>userdata;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" kindref="member">ssh_poll_free</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" kindref="member">ssh_poll_ctx_remove</ref>(p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>,p);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>=NULL;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(p);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="group__libssh__poll_1gaca05fcf77e6c4b5e55a9cfd2c9690ea5" refkind="member"><highlight class="normal"><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="group__libssh__poll_1gaca05fcf77e6c4b5e55a9cfd2c9690ea5" kindref="member">ssh_poll_get_ctx</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" kindref="member">ssh_poll_get_events</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" kindref="member">events</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" kindref="member">ssh_poll_set_events</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!p-&gt;<ref refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" kindref="member">lock</ref>)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" kindref="member">pollfds</ref>[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>].<ref refid="structssh__pollfd__struct_1a6ed14662befc1352fc119dc5a86aaeff" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group__libssh__poll_1ga2da5adcc03754a3b17e4fb0f23867ace" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga2da5adcc03754a3b17e4fb0f23867ace" kindref="member">ssh_poll_set_fd</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p,<sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" kindref="member">pollfds</ref>[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>].<ref refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" kindref="member">fd</ref><sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" kindref="member">fd</ref><sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" kindref="member">ssh_poll_add_events</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" kindref="member">ssh_poll_set_events</ref>(p,<sp/><ref refid="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" kindref="member">ssh_poll_get_events</ref>(p)<sp/>|<sp/>events);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="group__libssh__poll_1ga012582349ce62cf788761e5f97548496" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga012582349ce62cf788761e5f97548496" kindref="member">ssh_poll_remove_events</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><ref refid="group__libssh__poll_1gac02bf6f4444d4cc442da5865009fa5f6" kindref="member">ssh_poll_set_events</ref>(p,<sp/><ref refid="group__libssh__poll_1ga8e2e646ac338021e8e804992e8c13496" kindref="member">ssh_poll_get_events</ref>(p)<sp/>&amp;<sp/>~events);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="group__libssh__poll_1ga26c19b17ac8d1e3d7fcbfb4367fb93ff" refkind="member"><highlight class="normal"><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/><ref refid="group__libssh__poll_1ga26c19b17ac8d1e3d7fcbfb4367fb93ff" kindref="member">ssh_poll_get_fd</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" kindref="member">pollfds</ref>[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>].<ref refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480" refid="group__libssh__poll_1ga98ba36c2771b1e49d5c8e2f79be6d3ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga98ba36c2771b1e49d5c8e2f79be6d3ba" kindref="member">ssh_poll_set_callback</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p,<sp/><ref refid="poll_8h_1af2a7809ed930c3f7eb5ab1a086673053" kindref="member">ssh_poll_callback</ref><sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" kindref="member">cb</ref><sp/>=<sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" kindref="member">cb_data</ref><sp/>=<sp/>userdata;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" refkind="member"><highlight class="normal"><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" kindref="member">ssh_poll_ctx_new</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chunk_size)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx_struct</ref>));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a65e0a55b6af58e00b0a584d665af60ab" kindref="member">ZERO_STRUCTP</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_size<sp/>=<sp/><ref refid="poll_8c_1a43368aeb32c3f9d274961b95d6fef110" kindref="member">SSH_POLL_CTX_CHUNK</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;chunk_size<sp/>=<sp/>chunk_size;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" kindref="member">ssh_poll_ctx_free</ref>(<ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[0];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>free<sp/>function<sp/>calls<sp/>ssh_poll_ctx_remove()<sp/>and<sp/>decrements</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ctx-&gt;polls_used</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" kindref="member">ssh_poll_free</ref>(p);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" kindref="member">ssh_poll_ctx_resize</ref>(<ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>*pollptrs;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref><sp/>*pollfds;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>pollptrs<sp/>=<sp/>realloc(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref>)<sp/>*<sp/>new_size);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollptrs<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs<sp/>=<sp/>pollptrs;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>pollfds<sp/>=<sp/>realloc(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structssh__pollfd__struct" kindref="compound">ssh_pollfd_t</ref>)<sp/>*<sp/>new_size);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollfds<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>pollptrs<sp/>=<sp/>realloc(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref>)<sp/>*<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollptrs<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs<sp/>=<sp/>pollptrs;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds<sp/>=<sp/>pollfds;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(<ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>already<sp/>attached<sp/>to<sp/>a<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used<sp/>==<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" kindref="member">ssh_poll_ctx_resize</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated<sp/>+<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;chunk_size)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>fd<sp/>=<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref><sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used++;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>].fd<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>].events<sp/>=<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" kindref="member">events</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>].revents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="group__libssh__poll_1ga4aa3ef276370adbb4afb284947dc8005" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga4aa3ef276370adbb4afb284947dc8005" kindref="member">ssh_poll_ctx_add_socket</ref><sp/>(<ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/><ref refid="structssh__socket__struct" kindref="compound">ssh_socket</ref><sp/><ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="socket_8h_1a5af4852b3910014440f36032ec76d785" kindref="member">ssh_socket_get_poll_handle</ref>(<ref refid="test__socket_8c_1a73991beba1accdcc64730cb00c146fe2" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,p);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" kindref="member">ssh_poll_ctx_remove</ref>(<ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1ac8e6da4314560c93bd306786d37325ab" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1ae1bc1ac8f669a77d63c45741b9080799" kindref="member">x</ref>.<ref refid="structssh__poll__handle__struct_1a5fa7a7592750be5dab54334aac96bc03" kindref="member">fd</ref><sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].fd;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used--;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>the<sp/>empty<sp/>poll<sp/>slot<sp/>with<sp/>the<sp/>last<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used<sp/>!=<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i]<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used];</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[i]<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used];</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[i]-&gt;x.idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>will<sp/>always<sp/>leave<sp/>at<sp/>least<sp/>chunk_size<sp/>polls<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated<sp/>-<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used<sp/>&gt;<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;chunk_size)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga87079a58e0cc336ad94fbd041e97bb19" kindref="member">ssh_poll_ctx_resize</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_allocated<sp/>-<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;chunk_size);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" kindref="member">ssh_poll_ctx_dopoll</ref>(<ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>used;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>revents;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__timestamp" kindref="compound">ssh_timestamp</ref><sp/>ts;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" kindref="member">ssh_timestamp_init</ref>(&amp;ts);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tm<sp/>=<sp/><ref refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" kindref="member">ssh_timeout_update</ref>(&amp;ts,<sp/>timeout);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__poll_1gad71eb057dc675a9291b6fa78e99ebbc9" kindref="member">ssh_poll</ref>(<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds,<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used,<sp/>tm);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a9c57e4f6482106336045a4d25a55f28e" kindref="member">SSH_AGAIN</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>used<sp/>&amp;&amp;<sp/>rc<sp/>&gt;<sp/>0;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].revents<sp/>||<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[i]-&gt;lock)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollptrs[i];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].fd;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revents<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].revents;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>having<sp/>any<sp/>event<sp/>caught<sp/>during<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].events<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" kindref="member">lock</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" kindref="member">cb</ref><sp/>&amp;&amp;<sp/>(ret<sp/>=<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" kindref="member">cb</ref>(p,<sp/>fd,<sp/>revents,<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" kindref="member">cb_data</ref>))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>poll<sp/>was<sp/>removed,<sp/>reload<sp/>the<sp/>used<sp/>counter<sp/>and<sp/>start<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>=<sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;polls_used;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].revents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1a369ae25f82baa025322b03deb70aa5f3" kindref="member">ctx</ref>-&gt;pollfds[i].events<sp/>=<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1acb5f3c84c402651d573f4c2f5a5cc0c6" kindref="member">events</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a91db66fe2c1a79a900a8932e6c13484c" kindref="member">lock</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>--;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="group__libssh__poll_1ga8ad007907f642d4aa2c25e5209bf337a" refkind="member"><highlight class="normal"><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="group__libssh__poll_1ga8ad007907f642d4aa2c25e5209bf337a" kindref="member">ssh_poll_get_default_ctx</ref>(<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>){</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>is<sp/>enough<sp/>for<sp/>the<sp/>default<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref><sp/>=<sp/><ref refid="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" kindref="member">ssh_poll_ctx_new</ref>(2);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>event<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="structssh__event__fd__wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__event__fd__wrapper" kindref="compound">ssh_event_fd_wrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="741" refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1ad86976ea739d21a91265820921ee123c" kindref="member">ssh_event_callback</ref><sp/><ref refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="742" refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" kindref="member">userdata</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">};</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="structssh__event__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__event__struct" kindref="compound">ssh_event_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="746" refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__ctx__struct" kindref="compound">ssh_poll_ctx</ref><sp/><ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__list" kindref="compound">ssh_list</ref><sp/>*sessions;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">};</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" refkind="member"><highlight class="normal"><ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/><ref refid="group__libssh__poll_1ga406895f99b6b486c4b65536e5399ff96" kindref="member">ssh_event_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__event__struct" kindref="compound">ssh_event_struct</ref>));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="priv_8h_1a65e0a55b6af58e00b0a584d665af60ab" kindref="member">ZERO_STRUCTP</ref>(event);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;ctx<sp/>=<sp/><ref refid="group__libssh__poll_1ga5364b3fb8ae1cb44e3ec09c8c10cb5fa" kindref="member">ssh_poll_ctx_new</ref>(2);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(event);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;sessions<sp/>=<sp/><ref refid="group__libssh__misc_1ga4c696e6fd38257737962971fa0362435" kindref="member">ssh_list_new</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;sessions<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" kindref="member">ssh_poll_ctx_free</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(event);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event;</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" kindref="member">ssh_event_fd_wrapper_callback</ref>(<ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p,<sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>revents,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__event__fd__wrapper" kindref="compound">ssh_event_fd_wrapper</ref><sp/>*pw<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__event__fd__wrapper" kindref="compound">ssh_event_fd_wrapper</ref><sp/>*)<ref refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" kindref="member">userdata</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pw-&gt;<ref refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" kindref="member">cb</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pw-&gt;<ref refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" kindref="member">cb</ref>(fd,<sp/>revents,<sp/>pw-&gt;<ref refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" kindref="member">userdata</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="815" refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga41d63ffe950a48e8b2c513877e0cd6b4" kindref="member">ssh_event_add_fd</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libssh_8h_1ad86976ea739d21a91265820921ee123c" kindref="member">ssh_event_callback</ref><sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" kindref="member">userdata</ref>)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__event__fd__wrapper" kindref="compound">ssh_event_fd_wrapper</ref><sp/>*pw;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event<sp/>==<sp/>NULL<sp/>||<sp/>event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref><sp/>==<sp/>NULL</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>fd<sp/>==<sp/><ref refid="libssh_8h_1a5f05b48043a1f47b36388227bee5d4f8" kindref="member">SSH_INVALID_SOCKET</ref>)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>pw<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssh__event__fd__wrapper" kindref="compound">ssh_event_fd_wrapper</ref>));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pw<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>pw-&gt;<ref refid="structssh__event__fd__wrapper_1a789c29c2768c435dae97d3026033ec3f" kindref="member">cb</ref><sp/>=<sp/><ref refid="ssh__client_8c_1ad7278e5a44ed2f8b6a472a1941a75b89" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>pw-&gt;<ref refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" kindref="member">userdata</ref><sp/>=<sp/><ref refid="structssh__event__fd__wrapper_1a590fefd91fe9398463796d2ca04ab3d9" kindref="member">userdata</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pw<sp/>is<sp/>freed<sp/>by<sp/>ssh_event_remove_fd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="group__libssh__poll_1gac657ed07db9e5851ffb0aba45e071e99" kindref="member">ssh_poll_new</ref>(fd,<sp/>events,<sp/><ref refid="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" kindref="member">ssh_event_fd_wrapper_callback</ref>,<sp/>pw);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pw);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,<sp/>p)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pw);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" kindref="member">ssh_poll_free</ref>(p);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="group__libssh__poll_1gaaf3e1df762650369e99595eee761f2a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gaaf3e1df762650369e99595eee761f2a9" kindref="member">ssh_event_add_poll</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="869" refid="group__libssh__poll_1ga302e3942e697063f1a54319667231f73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga302e3942e697063f1a54319667231f73" kindref="member">ssh_event_remove_poll</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p)</highlight></codeline>
<codeline lineno="870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" kindref="member">ssh_poll_ctx_remove</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,p);</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga51af38de4cc3adbd5566ec1f1b91983d" kindref="member">ssh_event_add_session</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*iterator;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event<sp/>==<sp/>NULL<sp/>||<sp/>event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1a00121f65ba9242a6852f6c9f41a713f2" kindref="member">polls_used</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" kindref="member">pollptrs</ref>[0];</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ssh_poll_ctx_remove()<sp/>decrements</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>session-&gt;default_poll_ctx-&gt;polls_used</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" kindref="member">ssh_poll_ctx_remove</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>associate<sp/>the<sp/>pollhandler<sp/>with<sp/>a<sp/>session<sp/>so<sp/>we<sp/>can<sp/>put<sp/>it<sp/>back</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>at<sp/>ssh_event_free()</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref><sp/>=<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>=<sp/><ref refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" kindref="member">ssh_list_get_iterator</ref>(event-&gt;sessions);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iterator<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref>)iterator-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref><sp/>==<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>only<sp/>one<sp/>instance<sp/>of<sp/>this<sp/>session<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>=<sp/>iterator-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f" kindref="member">ssh_list_append</ref>(event-&gt;sessions,<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>==<sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="936" refid="group__libssh__poll_1gae1f53a6ce420a41ae06ffb962f477f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gae1f53a6ce420a41ae06ffb962f477f99" kindref="member">ssh_event_add_connector</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__connector__struct" kindref="compound">ssh_connector</ref><sp/>connector){</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="priv_8h_1a84015bb99d7ac6fe60fe6e61dbd0e1cf" kindref="member">ssh_connector_set_event</ref>(connector,<sp/>event);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="957" refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gada90c0ca6919271708ba1ea0352632cb" kindref="member">ssh_event_dopoll</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event<sp/>==<sp/>NULL<sp/>||<sp/>event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" kindref="member">ssh_poll_ctx_dopoll</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,<sp/>timeout);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gaf2cdca09a3a2024ed9bb4f134c8ae368" kindref="member">ssh_event_remove_fd</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="libssh_8h_1a30353f381f5fccbb956eea1f3a110b6c" kindref="member">socket_t</ref><sp/>fd)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>used;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event<sp/>==<sp/>NULL<sp/>||<sp/>event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;ctx-&gt;polls_used;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>used;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fd<sp/>==<sp/>event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1a61c9aa3bcc47ba0b039db22a7256ad7c" kindref="member">pollfds</ref>[i].<ref refid="structssh__pollfd__struct_1a9fd4b38088aba34965f9f22698c9fc96" kindref="member">fd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" kindref="member">pollptrs</ref>[i];</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref><sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>cannot<sp/>free<sp/>that<sp/>handle,<sp/>it&apos;s<sp/>owned<sp/>by<sp/>its<sp/>session<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a69a55307e6ca9327c66f0cf02cd66164" kindref="member">cb</ref><sp/>==<sp/><ref refid="group__libssh__poll_1ga495b312ef6f56bdf6d7e47dc0f75ab2d" kindref="member">ssh_event_fd_wrapper_callback</ref>)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__event__fd__wrapper" kindref="compound">ssh_event_fd_wrapper</ref><sp/>*pw<sp/>=<sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1aaf8c2e6479420a4c9dff313a33f92e08" kindref="member">cb_data</ref>;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sshd__direct-tcpip_8c_1aed3129b7674034c979192bcca6b0ad8c" kindref="member">SAFE_FREE</ref>(pw);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>free<sp/>function<sp/>calls<sp/>ssh_poll_ctx_remove()<sp/>and<sp/>decrements</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>event-&gt;ctx-&gt;polls_used.</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga873ecc6866c286f7777612d94de5c00d" kindref="member">ssh_poll_free</ref>(p);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restart<sp/>the<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;ctx-&gt;polls_used;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022" refid="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gaab8dec05a0afb49392c63b2ec158ac3d" kindref="member">ssh_event_remove_session</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__session__struct" kindref="compound">ssh_session</ref><sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>used;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structssh__iterator" kindref="compound">ssh_iterator</ref><sp/>*iterator;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event<sp/>==<sp/>NULL<sp/>||<sp/>event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libssh_8h_1a790179ef432b3b59aaccd9adab0169ec" kindref="member">SSH_ERROR</ref>;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;ctx-&gt;polls_used;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>used;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" kindref="member">pollptrs</ref>[i];</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref><sp/>==<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>){</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ssh_poll_ctx_remove()<sp/>decrements</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>event-&gt;ctx-&gt;polls_used</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" kindref="member">ssh_poll_ctx_remove</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(<ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref><sp/>=<sp/><ref refid="libssh_8h_1ac1ee1d1e917456d4760a94a18015377d" kindref="member">SSH_OK</ref>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Restart<sp/>the<sp/>loop!</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>session<sp/>can<sp/>initially<sp/>have<sp/>two<sp/>pollhandlers.</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;ctx-&gt;polls_used;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>=<sp/><ref refid="group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d" kindref="member">ssh_list_get_iterator</ref>(event-&gt;sessions);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iterator<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="structssh__session__struct" kindref="compound">ssh_session</ref>)iterator-&gt;<ref refid="structssh__iterator_1a4cc4eb8c8599a487e7e3321d32a9e9cd" kindref="member">data</ref><sp/>==<sp/><ref refid="torture__session__keys_8c_1a1ea82fff28491cf424fc0753ec725adb" kindref="member">session</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e" kindref="member">ssh_list_remove</ref>(event-&gt;sessions,<sp/>iterator);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>should<sp/>be<sp/>only<sp/>one<sp/>instance<sp/>of<sp/>this<sp/>session<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>=<sp/>iterator-&gt;<ref refid="structssh__iterator_1a7fd7219325e56f365796ad59c8443ee5" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pkd__daemon_8c_1ac6509c6fe4cbf7bde170597172f8a288" kindref="member">rc</ref>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076" refid="group__libssh__poll_1gae120116df5a1da09ee9edd42e6a63397" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1gae120116df5a1da09ee9edd42e6a63397" kindref="member">ssh_event_remove_connector</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event,<sp/><ref refid="structssh__connector__struct" kindref="compound">ssh_connector</ref><sp/>connector){</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)event;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="priv_8h_1ad92def69fc9cce5d1d564588e668a862" kindref="member">ssh_connector_remove_event</ref>(connector);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__libssh__poll_1ga101388903c74d53ed550574b587449cd" kindref="member">ssh_event_free</ref>(<ref refid="structssh__event__struct" kindref="compound">ssh_event</ref><sp/>event)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>used,<sp/>i;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structssh__poll__handle__struct" kindref="compound">ssh_poll_handle</ref><sp/>p;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1a00121f65ba9242a6852f6c9f41a713f2" kindref="member">polls_used</ref>;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>used;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="structssh__poll__handle__struct_1a149ea8e075d60bf955fc3b979803e7d7" kindref="member">ctx</ref>-&gt;<ref refid="structssh__poll__ctx__struct_1aba35687688f84ac59da4cae15c04ff67" kindref="member">pollptrs</ref>[i];</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1gad4404e7da7c676b126b87d2de4d45d1d" kindref="member">ssh_poll_ctx_remove</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" kindref="member">ssh_poll_ctx_add</ref>(p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref>-&gt;<ref refid="structssh__session__struct_1aba4740d1fa60f3595772d5e2d11127af" kindref="member">default_poll_ctx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structssh__poll__handle__struct_1a8ef179a1ddc5fad7df231e76875c2607" kindref="member">session</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__poll_1ga86bd0c5c2fa5614acef127e6689282ae" kindref="member">ssh_poll_ctx_free</ref>(event-&gt;<ref refid="structssh__event__struct_1ac151c202ff4af7d5c5e55fecda20ce9c" kindref="member">ctx</ref>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;sessions<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28" kindref="member">ssh_list_free</ref>(event-&gt;sessions);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>free(event);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/poll.c"/>
  </compounddef>
</doxygen>
